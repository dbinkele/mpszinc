<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="org.antlr.zinc.typesystem.FloatTypeisRealType_SubtypingRule">
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.builder.SNodeBuilder" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="org.antlr.zinc.typesystem.IsBooleanType_SubtypingRule">
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.builder.SNodeBuilder" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="org.antlr.zinc.typesystem.TypesystemDescriptor">
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.errors.IRuleConflictWarningProducer" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.OverloadedOperationsTypesProvider" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.builder.SNodeBuilder" />
    <classNode dependClassName="org.antlr.zinc.typesystem.FloatTypeisRealType_SubtypingRule" />
    <classNode dependClassName="org.antlr.zinc.typesystem.IsBooleanType_SubtypingRule" />
    <classNode dependClassName="org.antlr.zinc.typesystem.check_VarDeclItem_NonTypesystemRule" />
    <classNode dependClassName="org.antlr.zinc.typesystem.check_VarDecl_NonTypesystemRule" />
    <classNode dependClassName="org.antlr.zinc.typesystem.typeof_BoolType_InferenceRule" />
    <classNode dependClassName="org.antlr.zinc.typesystem.typeof_CommentExpression_InferenceRule" />
    <classNode dependClassName="org.antlr.zinc.typesystem.typeof_FloatType_InferenceRule" />
    <classNode dependClassName="org.antlr.zinc.typesystem.typeof_VarRef_InferenceRule" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.BaseHelginsDescriptor" />
  </dependency>
  <dependency className="org.antlr.zinc.typesystem.check_VarDeclItem_NonTypesystemRule">
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.Objects" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SProperty" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="org.antlr.zinc.typesystem.check_VarDecl_NonTypesystemRule">
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="org.antlr.zinc.typesystem.typeof_BoolType_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.builder.SNodeBuilder" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="org.antlr.zinc.typesystem.typeof_CommentExpression_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="org.antlr.zinc.typesystem.typeof_FloatType_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.builder.SNodeBuilder" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="org.antlr.zinc.typesystem.typeof_VarRef_InferenceRule">
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SReferenceLink" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
</dependenciesRoot>

