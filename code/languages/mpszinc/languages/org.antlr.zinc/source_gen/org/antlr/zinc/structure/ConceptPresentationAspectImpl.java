package org.antlr.zinc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Annotation;
  private ConceptPresentation props_ArithComplexExpr_1;
  private ConceptPresentation props_ArithComplexExpr_2;
  private ConceptPresentation props_ArithExpr_1;
  private ConceptPresentation props_ArithExpr_2;
  private ConceptPresentation props_ArithExpr_3;
  private ConceptPresentation props_ArithOp2_1;
  private ConceptPresentation props_ArithOp2_2;
  private ConceptPresentation props_ArithOp2_3;
  private ConceptPresentation props_ArithOp2_4;
  private ConceptPresentation props_ArithOp2_5;
  private ConceptPresentation props_ArithOp2_6;
  private ConceptPresentation props_ArithOp_1;
  private ConceptPresentation props_ArithOp_2;
  private ConceptPresentation props_ArithOp_3;
  private ConceptPresentation props_ArithOp_4;
  private ConceptPresentation props_ArithOp_5;
  private ConceptPresentation props_ArithOp_6;
  private ConceptPresentation props_ArithOp_7;
  private ConceptPresentation props_ArithOp_8;
  private ConceptPresentation props_Arrayaccess_1;
  private ConceptPresentation props_Arrayaccess_2;
  private ConceptPresentation props_BaseConcept;
  private ConceptPresentation props_BodyIf;
  private ConceptPresentation props_BodyIf_block_1_1_1;
  private ConceptPresentation props_BodyIf_block_1_1_2;
  private ConceptPresentation props_BoolComplexExpr_1;
  private ConceptPresentation props_BoolComplexExpr_2;
  private ConceptPresentation props_BoolComplexExpr_3;
  private ConceptPresentation props_BoolComplexExpr_block_1_1_1;
  private ConceptPresentation props_BoolComplexExpr_block_1_1_2;
  private ConceptPresentation props_BoolComplexExpr_block_2_1_1;
  private ConceptPresentation props_BoolComplexExpr_block_2_1_2;
  private ConceptPresentation props_BoolExpr_1;
  private ConceptPresentation props_BoolExpr_2;
  private ConceptPresentation props_BoolExpr_3;
  private ConceptPresentation props_BoolExpr_4;
  private ConceptPresentation props_BoolExpr_block_1_1_1;
  private ConceptPresentation props_BoolExpr_block_1_1_2;
  private ConceptPresentation props_BoolExpr_block_2_1_1;
  private ConceptPresentation props_BoolExpr_block_2_1_2;
  private ConceptPresentation props_BoolOp_1;
  private ConceptPresentation props_BoolOp_2;
  private ConceptPresentation props_BoolOp_3;
  private ConceptPresentation props_BoolOp_4;
  private ConceptPresentation props_BoolOp_5;
  private ConceptPresentation props_BoolOp_6;
  private ConceptPresentation props_BoolOp_7;
  private ConceptPresentation props_BoolOp_8;
  private ConceptPresentation props_BoolOp_9;
  private ConceptPresentation props_BoolS;
  private ConceptPresentation props_BoolType;
  private ConceptPresentation props_BoolVal_1;
  private ConceptPresentation props_BoolVal_2;
  private ConceptPresentation props_BoolVal_3;
  private ConceptPresentation props_BoolVal_4;
  private ConceptPresentation props_BoolVal_5;
  private ConceptPresentation props_BoolVal_6;
  private ConceptPresentation props_BoolVal_7;
  private ConceptPresentation props_BoolVal_8;
  private ConceptPresentation props_BracketExpr_1;
  private ConceptPresentation props_BracketExpr_2;
  private ConceptPresentation props_CaseBranch;
  private ConceptPresentation props_CaseBranch_block_1_1_1;
  private ConceptPresentation props_CaseBranch_block_1_1_2;
  private ConceptPresentation props_CaseExpr;
  private ConceptPresentation props_CaseExpr_block_1_1;
  private ConceptPresentation props_CommaList_1;
  private ConceptPresentation props_CommaList_block_1_1;
  private ConceptPresentation props_CommaList_block_1_2;
  private ConceptPresentation props_CommentStatement;
  private ConceptPresentation props_Constr_1;
  private ConceptPresentation props_Constr_2;
  private ConceptPresentation props_Constrainchoice_1;
  private ConceptPresentation props_Constrainchoice_2;
  private ConceptPresentation props_Constrainchoice_3;
  private ConceptPresentation props_Constrainchoice_4;
  private ConceptPresentation props_Constrainchoice_5;
  private ConceptPresentation props_Constraint;
  private ConceptPresentation props_Data;
  private ConceptPresentation props_Data_block_1_1;
  private ConceptPresentation props_Decl_1;
  private ConceptPresentation props_Decl_2;
  private ConceptPresentation props_Dimensions;
  private ConceptPresentation props_Dimensions_block_1_1_1;
  private ConceptPresentation props_Dimensions_block_1_1_2;
  private ConceptPresentation props_Dimensions_block_1_2;
  private ConceptPresentation props_Dimensions_block_1_3;
  private ConceptPresentation props_ElseS;
  private ConceptPresentation props_ElseifS;
  private ConceptPresentation props_EmptyStatement;
  private ConceptPresentation props_Expr_1;
  private ConceptPresentation props_Expr_10;
  private ConceptPresentation props_Expr_11;
  private ConceptPresentation props_Expr_12;
  private ConceptPresentation props_Expr_13;
  private ConceptPresentation props_Expr_14;
  private ConceptPresentation props_Expr_15;
  private ConceptPresentation props_Expr_2;
  private ConceptPresentation props_Expr_3;
  private ConceptPresentation props_Expr_4;
  private ConceptPresentation props_Expr_5;
  private ConceptPresentation props_Expr_6;
  private ConceptPresentation props_Expr_7;
  private ConceptPresentation props_Expr_8;
  private ConceptPresentation props_Expr_9;
  private ConceptPresentation props_Extended;
  private ConceptPresentation props_Extended_block_1_1;
  private ConceptPresentation props_Extended_block_1_2;
  private ConceptPresentation props_Extendsmark;
  private ConceptPresentation props_FloatType;
  private ConceptPresentation props_FromR_1;
  private ConceptPresentation props_Function;
  private ConceptPresentation props_Function_block_1_1;
  private ConceptPresentation props_Function_block_1_2;
  private ConceptPresentation props_Guard;
  private ConceptPresentation props_Guard_block_1_1;
  private ConceptPresentation props_GuardedList;
  private ConceptPresentation props_GuardedSet;
  private ConceptPresentation props_IArithComplexExpr;
  private ConceptPresentation props_IArithExpr;
  private ConceptPresentation props_IArithOp;
  private ConceptPresentation props_IArithOp2;
  private ConceptPresentation props_IArrayaccess;
  private ConceptPresentation props_IBodyIf_block_1_1;
  private ConceptPresentation props_IBoolComplexExpr;
  private ConceptPresentation props_IBoolComplexExpr_block_1_1;
  private ConceptPresentation props_IBoolComplexExpr_block_2_1;
  private ConceptPresentation props_IBoolExpr;
  private ConceptPresentation props_IBoolExpr_block_1_1;
  private ConceptPresentation props_IBoolExpr_block_2_1;
  private ConceptPresentation props_IBoolOp;
  private ConceptPresentation props_IBoolVal;
  private ConceptPresentation props_IBracketExpr;
  private ConceptPresentation props_ICaseBranch_block_1_1;
  private ConceptPresentation props_ICommaList;
  private ConceptPresentation props_IConstr;
  private ConceptPresentation props_IConstrainchoice;
  private ConceptPresentation props_IDecl;
  private ConceptPresentation props_IDimensions_block_1_1;
  private ConceptPresentation props_IExpr;
  private ConceptPresentation props_IFromR;
  private ConceptPresentation props_IInfixOp;
  private ConceptPresentation props_IInfixSetOp;
  private ConceptPresentation props_IInteger;
  private ConceptPresentation props_ILetDecl;
  private ConceptPresentation props_IListExpr;
  private ConceptPresentation props_IListValue;
  private ConceptPresentation props_IModeAnnotation;
  private ConceptPresentation props_IOneDimList;
  private ConceptPresentation props_IOp;
  private ConceptPresentation props_IOpOrID;
  private ConceptPresentation props_IOperand;
  private ConceptPresentation props_IOptimize;
  private ConceptPresentation props_IOutput;
  private ConceptPresentation props_IPardecl;
  private ConceptPresentation props_IPostExt;
  private ConceptPresentation props_IPreExt;
  private ConceptPresentation props_IPredOrUnionExpr_block_1_1;
  private ConceptPresentation props_IQualName;
  private ConceptPresentation props_IRange;
  private ConceptPresentation props_ISetExpr;
  private ConceptPresentation props_ISetVal;
  private ConceptPresentation props_ISimpleList;
  private ConceptPresentation props_ISolve;
  private ConceptPresentation props_ISolve_block_1_1;
  private ConceptPresentation props_IStat;
  private ConceptPresentation props_IStringExpr;
  private ConceptPresentation props_IToR;
  private ConceptPresentation props_ITypename;
  private ConceptPresentation props_IVarchoice;
  private ConceptPresentation props_Idexpr;
  private ConceptPresentation props_IfExpr;
  private ConceptPresentation props_InDecl;
  private ConceptPresentation props_InDecl_block_1_1;
  private ConceptPresentation props_Include;
  private ConceptPresentation props_InfixOp_1;
  private ConceptPresentation props_InfixOp_2;
  private ConceptPresentation props_InfixSetOp_1;
  private ConceptPresentation props_InfixSetOp_2;
  private ConceptPresentation props_InfixSetOp_3;
  private ConceptPresentation props_Init;
  private ConceptPresentation props_IntDivExpression;
  private ConceptPresentation props_IntS;
  private ConceptPresentation props_Integer_1;
  private ConceptPresentation props_LetDecl_1;
  private ConceptPresentation props_LetDecl_2;
  private ConceptPresentation props_LetExpr;
  private ConceptPresentation props_LetExpr_block_1_1;
  private ConceptPresentation props_ListExpr_1;
  private ConceptPresentation props_ListExpr_2;
  private ConceptPresentation props_ListExpr_3;
  private ConceptPresentation props_ListExpr_4;
  private ConceptPresentation props_ListExtended;
  private ConceptPresentation props_ListExtended_block_1_1;
  private ConceptPresentation props_ListValue_1;
  private ConceptPresentation props_ListValue_2;
  private ConceptPresentation props_ListValue_3;
  private ConceptPresentation props_ListValue_4;
  private ConceptPresentation props_ListValue_5;
  private ConceptPresentation props_Maximize;
  private ConceptPresentation props_Minimize;
  private ConceptPresentation props_MinusExpr;
  private ConceptPresentation props_ModeAnnotation_1;
  private ConceptPresentation props_ModeAnnotation_2;
  private ConceptPresentation props_ModeAnnotation_3;
  private ConceptPresentation props_ModeAnnotation_4;
  private ConceptPresentation props_Model;
  private ConceptPresentation props_MultiDimList;
  private ConceptPresentation props_MultiDimList_block_1_1;
  private ConceptPresentation props_MultiDimList_block_1_2;
  private ConceptPresentation props_MultiDimList_block_1_3;
  private ConceptPresentation props_NonEmptyListElems;
  private ConceptPresentation props_NonEmptyListElems_block_1_1;
  private ConceptPresentation props_NotExpr;
  private ConceptPresentation props_OneDimList_1;
  private ConceptPresentation props_OneDimList_2;
  private ConceptPresentation props_Onesection;
  private ConceptPresentation props_Onesection_block_1_1;
  private ConceptPresentation props_Onesection_block_1_2;
  private ConceptPresentation props_OpOrID_1;
  private ConceptPresentation props_OpOrID_2;
  private ConceptPresentation props_Op_1;
  private ConceptPresentation props_Op_2;
  private ConceptPresentation props_Operand_1;
  private ConceptPresentation props_Operand_2;
  private ConceptPresentation props_Operand_3;
  private ConceptPresentation props_Operand_4;
  private ConceptPresentation props_Operand_5;
  private ConceptPresentation props_Operand_6;
  private ConceptPresentation props_Operand_7;
  private ConceptPresentation props_Operand_8;
  private ConceptPresentation props_Optimize_1;
  private ConceptPresentation props_Optimize_2;
  private ConceptPresentation props_Output_1;
  private ConceptPresentation props_Output_2;
  private ConceptPresentation props_ParDecl;
  private ConceptPresentation props_ParRef;
  private ConceptPresentation props_Parameter;
  private ConceptPresentation props_Parameter_block_1_1;
  private ConceptPresentation props_Pararray;
  private ConceptPresentation props_Pardecl_1;
  private ConceptPresentation props_Pardecl_2;
  private ConceptPresentation props_PostExt_1;
  private ConceptPresentation props_PreExt_1;
  private ConceptPresentation props_PredOrUnionExpr;
  private ConceptPresentation props_PredOrUnionExpr_block_1_1_1;
  private ConceptPresentation props_PredOrUnionExpr_block_1_1_2;
  private ConceptPresentation props_Predicate;
  private ConceptPresentation props_Predicate_block_1_1;
  private ConceptPresentation props_Predicate_block_1_2;
  private ConceptPresentation props_QualArithOp;
  private ConceptPresentation props_QualBoolOp;
  private ConceptPresentation props_QualName_1;
  private ConceptPresentation props_QualName_2;
  private ConceptPresentation props_QualName_3;
  private ConceptPresentation props_Range_1;
  private ConceptPresentation props_Range_2;
  private ConceptPresentation props_RbracketExpr;
  private ConceptPresentation props_Real;
  private ConceptPresentation props_RestS;
  private ConceptPresentation props_Satisfy;
  private ConceptPresentation props_Scons;
  private ConceptPresentation props_SeqS;
  private ConceptPresentation props_SeqS_block_1_1;
  private ConceptPresentation props_SetExpr_1;
  private ConceptPresentation props_SetExpr_2;
  private ConceptPresentation props_SetS;
  private ConceptPresentation props_SetVal_1;
  private ConceptPresentation props_SetVal_2;
  private ConceptPresentation props_SetVal_3;
  private ConceptPresentation props_SimpleList_1;
  private ConceptPresentation props_SimpleList_2;
  private ConceptPresentation props_SimpleNonEmptyList;
  private ConceptPresentation props_SimpleNonEmptyList_block_1_1;
  private ConceptPresentation props_Solve;
  private ConceptPresentation props_Solve_block_1_1_1;
  private ConceptPresentation props_Solve_block_1_2_1;
  private ConceptPresentation props_Solve_block_1_2_2;
  private ConceptPresentation props_Stat_1;
  private ConceptPresentation props_Stat_10;
  private ConceptPresentation props_Stat_2;
  private ConceptPresentation props_Stat_3;
  private ConceptPresentation props_Stat_4;
  private ConceptPresentation props_Stat_5;
  private ConceptPresentation props_Stat_6;
  private ConceptPresentation props_Stat_7;
  private ConceptPresentation props_Stat_8;
  private ConceptPresentation props_Stat_9;
  private ConceptPresentation props_String;
  private ConceptPresentation props_StringExpr_1;
  private ConceptPresentation props_Tcons;
  private ConceptPresentation props_Tcons_block_1_1;
  private ConceptPresentation props_ToR_1;
  private ConceptPresentation props_Twosections;
  private ConceptPresentation props_Typedata;
  private ConceptPresentation props_Typename_1;
  private ConceptPresentation props_Typename_2;
  private ConceptPresentation props_Typename_3;
  private ConceptPresentation props_Typename_4;
  private ConceptPresentation props_Typename_5;
  private ConceptPresentation props_Typename_6;
  private ConceptPresentation props_Typename_7;
  private ConceptPresentation props_Typeset;
  private ConceptPresentation props_Var;
  private ConceptPresentation props_VarDecl;
  private ConceptPresentation props_VarDeclItem;
  private ConceptPresentation props_VarRef;
  private ConceptPresentation props_Vararray;
  private ConceptPresentation props_Varchoice_1;
  private ConceptPresentation props_Varchoice_2;
  private ConceptPresentation props_Varchoice_3;
  private ConceptPresentation props_Vardecl_block_1_1_1;
  private ConceptPresentation props_Vardecl_block_1_1_2;
  private ConceptPresentation props_Varmark;
  private ConceptPresentation props_WhereCond;
  private ConceptPresentation props_ZAnd;
  private ConceptPresentation props_ZEqualsExpression;
  private ConceptPresentation props_ZIff;
  private ConceptPresentation props_ZImplies;
  private ConceptPresentation props_ZNot;
  private ConceptPresentation props_ZOp;
  private ConceptPresentation props_ZOr;
  private ConceptPresentation props_ZXor;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Annotation:
        if (props_Annotation == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Annotation");
          cpb.rawPresentation("::");
          props_Annotation = cpb.create();
        }
        return props_Annotation;
      case LanguageConceptSwitch.ArithComplexExpr_1:
        if (props_ArithComplexExpr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithComplexExpr");
          cpb.rawPresentation("Minusexpr arithcomplexexpr");
          props_ArithComplexExpr_1 = cpb.create();
        }
        return props_ArithComplexExpr_1;
      case LanguageConceptSwitch.ArithComplexExpr_2:
        if (props_ArithComplexExpr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithComplexExpr");
          cpb.rawPresentation("ArithComplexExpr_2");
          props_ArithComplexExpr_2 = cpb.create();
        }
        return props_ArithComplexExpr_2;
      case LanguageConceptSwitch.ArithExpr_1:
        if (props_ArithExpr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithExpr");
          cpb.rawPresentation("Minusexpr arithexpr");
          props_ArithExpr_1 = cpb.create();
        }
        return props_ArithExpr_1;
      case LanguageConceptSwitch.ArithExpr_2:
        if (props_ArithExpr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithExpr");
          cpb.rawPresentation("ArithExpr_2");
          props_ArithExpr_2 = cpb.create();
        }
        return props_ArithExpr_2;
      case LanguageConceptSwitch.ArithExpr_3:
        if (props_ArithExpr_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithExpr");
          cpb.rawPresentation("Operand arithexpr");
          props_ArithExpr_3 = cpb.create();
        }
        return props_ArithExpr_3;
      case LanguageConceptSwitch.ArithOp2_1:
        if (props_ArithOp2_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp2");
          cpb.rawPresentation("*");
          props_ArithOp2_1 = cpb.create();
        }
        return props_ArithOp2_1;
      case LanguageConceptSwitch.ArithOp2_2:
        if (props_ArithOp2_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp2");
          cpb.rawPresentation("/");
          props_ArithOp2_2 = cpb.create();
        }
        return props_ArithOp2_2;
      case LanguageConceptSwitch.ArithOp2_3:
        if (props_ArithOp2_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp2");
          cpb.rawPresentation("div");
          props_ArithOp2_3 = cpb.create();
        }
        return props_ArithOp2_3;
      case LanguageConceptSwitch.ArithOp2_4:
        if (props_ArithOp2_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp2");
          cpb.rawPresentation("mod");
          props_ArithOp2_4 = cpb.create();
        }
        return props_ArithOp2_4;
      case LanguageConceptSwitch.ArithOp2_5:
        if (props_ArithOp2_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp2");
          cpb.rawPresentation("+");
          props_ArithOp2_5 = cpb.create();
        }
        return props_ArithOp2_5;
      case LanguageConceptSwitch.ArithOp2_6:
        if (props_ArithOp2_6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp2");
          cpb.rawPresentation("-");
          props_ArithOp2_6 = cpb.create();
        }
        return props_ArithOp2_6;
      case LanguageConceptSwitch.ArithOp_1:
        if (props_ArithOp_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp");
          cpb.rawPresentation("<");
          props_ArithOp_1 = cpb.create();
        }
        return props_ArithOp_1;
      case LanguageConceptSwitch.ArithOp_2:
        if (props_ArithOp_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp");
          cpb.rawPresentation(">");
          props_ArithOp_2 = cpb.create();
        }
        return props_ArithOp_2;
      case LanguageConceptSwitch.ArithOp_3:
        if (props_ArithOp_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp");
          cpb.rawPresentation(">=");
          props_ArithOp_3 = cpb.create();
        }
        return props_ArithOp_3;
      case LanguageConceptSwitch.ArithOp_4:
        if (props_ArithOp_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp");
          cpb.rawPresentation("<=");
          props_ArithOp_4 = cpb.create();
        }
        return props_ArithOp_4;
      case LanguageConceptSwitch.ArithOp_5:
        if (props_ArithOp_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp");
          cpb.rawPresentation("=");
          props_ArithOp_5 = cpb.create();
        }
        return props_ArithOp_5;
      case LanguageConceptSwitch.ArithOp_6:
        if (props_ArithOp_6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp");
          cpb.rawPresentation("==");
          props_ArithOp_6 = cpb.create();
        }
        return props_ArithOp_6;
      case LanguageConceptSwitch.ArithOp_7:
        if (props_ArithOp_7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp");
          cpb.rawPresentation("!=");
          props_ArithOp_7 = cpb.create();
        }
        return props_ArithOp_7;
      case LanguageConceptSwitch.ArithOp_8:
        if (props_ArithOp_8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ArithOp");
          cpb.rawPresentation("in");
          props_ArithOp_8 = cpb.create();
        }
        return props_ArithOp_8;
      case LanguageConceptSwitch.Arrayaccess_1:
        if (props_Arrayaccess_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Arrayaccess");
          cpb.rawPresentation("Arrayaccess_1");
          props_Arrayaccess_1 = cpb.create();
        }
        return props_Arrayaccess_1;
      case LanguageConceptSwitch.Arrayaccess_2:
        if (props_Arrayaccess_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Arrayaccess");
          cpb.rawPresentation("Arrayaccess_2");
          props_Arrayaccess_2 = cpb.create();
        }
        return props_Arrayaccess_2;
      case LanguageConceptSwitch.BaseConcept:
        if (props_BaseConcept == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_BaseConcept = cpb.create();
        }
        return props_BaseConcept;
      case LanguageConceptSwitch.BodyIf:
        if (props_BodyIf == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BodyIf");
          cpb.rawPresentation("then");
          props_BodyIf = cpb.create();
        }
        return props_BodyIf;
      case LanguageConceptSwitch.BodyIf_block_1_1_1:
        if (props_BodyIf_block_1_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BodyIf_block_1_1");
          cpb.rawPresentation("Elses");
          props_BodyIf_block_1_1_1 = cpb.create();
        }
        return props_BodyIf_block_1_1_1;
      case LanguageConceptSwitch.BodyIf_block_1_1_2:
        if (props_BodyIf_block_1_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BodyIf_block_1_1");
          cpb.rawPresentation("Elseifs");
          props_BodyIf_block_1_1_2 = cpb.create();
        }
        return props_BodyIf_block_1_1_2;
      case LanguageConceptSwitch.BoolComplexExpr_1:
        if (props_BoolComplexExpr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolComplexExpr");
          cpb.rawPresentation("BoolComplexExpr_1");
          props_BoolComplexExpr_1 = cpb.create();
        }
        return props_BoolComplexExpr_1;
      case LanguageConceptSwitch.BoolComplexExpr_2:
        if (props_BoolComplexExpr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolComplexExpr");
          cpb.rawPresentation("BoolComplexExpr_2");
          props_BoolComplexExpr_2 = cpb.create();
        }
        return props_BoolComplexExpr_2;
      case LanguageConceptSwitch.BoolComplexExpr_3:
        if (props_BoolComplexExpr_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolComplexExpr");
          cpb.rawPresentation("Notexpr boolcomplexexpr");
          props_BoolComplexExpr_3 = cpb.create();
        }
        return props_BoolComplexExpr_3;
      case LanguageConceptSwitch.BoolComplexExpr_block_1_1_1:
        if (props_BoolComplexExpr_block_1_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolComplexExpr_block_1_1");
          cpb.rawPresentation("Boolop");
          props_BoolComplexExpr_block_1_1_1 = cpb.create();
        }
        return props_BoolComplexExpr_block_1_1_1;
      case LanguageConceptSwitch.BoolComplexExpr_block_1_1_2:
        if (props_BoolComplexExpr_block_1_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolComplexExpr_block_1_1");
          cpb.rawPresentation("Qualboolop");
          props_BoolComplexExpr_block_1_1_2 = cpb.create();
        }
        return props_BoolComplexExpr_block_1_1_2;
      case LanguageConceptSwitch.BoolComplexExpr_block_2_1_1:
        if (props_BoolComplexExpr_block_2_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolComplexExpr_block_2_1");
          cpb.rawPresentation("Arithop");
          props_BoolComplexExpr_block_2_1_1 = cpb.create();
        }
        return props_BoolComplexExpr_block_2_1_1;
      case LanguageConceptSwitch.BoolComplexExpr_block_2_1_2:
        if (props_BoolComplexExpr_block_2_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolComplexExpr_block_2_1");
          cpb.rawPresentation("Qualarithop");
          props_BoolComplexExpr_block_2_1_2 = cpb.create();
        }
        return props_BoolComplexExpr_block_2_1_2;
      case LanguageConceptSwitch.BoolExpr_1:
        if (props_BoolExpr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolExpr");
          cpb.rawPresentation("BoolExpr_1");
          props_BoolExpr_1 = cpb.create();
        }
        return props_BoolExpr_1;
      case LanguageConceptSwitch.BoolExpr_2:
        if (props_BoolExpr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolExpr");
          cpb.rawPresentation("BoolExpr_2");
          props_BoolExpr_2 = cpb.create();
        }
        return props_BoolExpr_2;
      case LanguageConceptSwitch.BoolExpr_3:
        if (props_BoolExpr_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolExpr");
          cpb.rawPresentation("Notexpr boolexpr");
          props_BoolExpr_3 = cpb.create();
        }
        return props_BoolExpr_3;
      case LanguageConceptSwitch.BoolExpr_4:
        if (props_BoolExpr_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolExpr");
          cpb.rawPresentation("Boolval boolexpr");
          props_BoolExpr_4 = cpb.create();
        }
        return props_BoolExpr_4;
      case LanguageConceptSwitch.BoolExpr_block_1_1_1:
        if (props_BoolExpr_block_1_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolExpr_block_1_1");
          cpb.rawPresentation("Boolop");
          props_BoolExpr_block_1_1_1 = cpb.create();
        }
        return props_BoolExpr_block_1_1_1;
      case LanguageConceptSwitch.BoolExpr_block_1_1_2:
        if (props_BoolExpr_block_1_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolExpr_block_1_1");
          cpb.rawPresentation("Qualboolop");
          props_BoolExpr_block_1_1_2 = cpb.create();
        }
        return props_BoolExpr_block_1_1_2;
      case LanguageConceptSwitch.BoolExpr_block_2_1_1:
        if (props_BoolExpr_block_2_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolExpr_block_2_1");
          cpb.rawPresentation("Arithop");
          props_BoolExpr_block_2_1_1 = cpb.create();
        }
        return props_BoolExpr_block_2_1_1;
      case LanguageConceptSwitch.BoolExpr_block_2_1_2:
        if (props_BoolExpr_block_2_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolExpr_block_2_1");
          cpb.rawPresentation("Qualarithop");
          props_BoolExpr_block_2_1_2 = cpb.create();
        }
        return props_BoolExpr_block_2_1_2;
      case LanguageConceptSwitch.BoolOp_1:
        if (props_BoolOp_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("/\\\\");
          props_BoolOp_1 = cpb.create();
        }
        return props_BoolOp_1;
      case LanguageConceptSwitch.BoolOp_2:
        if (props_BoolOp_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("\\\\/");
          props_BoolOp_2 = cpb.create();
        }
        return props_BoolOp_2;
      case LanguageConceptSwitch.BoolOp_3:
        if (props_BoolOp_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("xor");
          props_BoolOp_3 = cpb.create();
        }
        return props_BoolOp_3;
      case LanguageConceptSwitch.BoolOp_4:
        if (props_BoolOp_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("->");
          props_BoolOp_4 = cpb.create();
        }
        return props_BoolOp_4;
      case LanguageConceptSwitch.BoolOp_5:
        if (props_BoolOp_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("<-");
          props_BoolOp_5 = cpb.create();
        }
        return props_BoolOp_5;
      case LanguageConceptSwitch.BoolOp_6:
        if (props_BoolOp_6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("<->");
          props_BoolOp_6 = cpb.create();
        }
        return props_BoolOp_6;
      case LanguageConceptSwitch.BoolOp_7:
        if (props_BoolOp_7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("=");
          props_BoolOp_7 = cpb.create();
        }
        return props_BoolOp_7;
      case LanguageConceptSwitch.BoolOp_8:
        if (props_BoolOp_8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("==");
          props_BoolOp_8 = cpb.create();
        }
        return props_BoolOp_8;
      case LanguageConceptSwitch.BoolOp_9:
        if (props_BoolOp_9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolOp");
          cpb.rawPresentation("!=");
          props_BoolOp_9 = cpb.create();
        }
        return props_BoolOp_9;
      case LanguageConceptSwitch.BoolS:
        if (props_BoolS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolS");
          cpb.rawPresentation("bool_search");
          props_BoolS = cpb.create();
        }
        return props_BoolS;
      case LanguageConceptSwitch.BoolType:
        if (props_BoolType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("boolean type ");
          cpb.rawPresentation("bool");
          props_BoolType = cpb.create();
        }
        return props_BoolType;
      case LanguageConceptSwitch.BoolVal_1:
        if (props_BoolVal_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolVal");
          cpb.rawPresentation("BoolVal_1");
          props_BoolVal_1 = cpb.create();
        }
        return props_BoolVal_1;
      case LanguageConceptSwitch.BoolVal_2:
        if (props_BoolVal_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolVal");
          cpb.rawPresentation("( )");
          props_BoolVal_2 = cpb.create();
        }
        return props_BoolVal_2;
      case LanguageConceptSwitch.BoolVal_3:
        if (props_BoolVal_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolVal");
          cpb.rawPresentation("Id boolval");
          props_BoolVal_3 = cpb.create();
        }
        return props_BoolVal_3;
      case LanguageConceptSwitch.BoolVal_4:
        if (props_BoolVal_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolVal");
          cpb.rawPresentation("Bool boolval");
          props_BoolVal_4 = cpb.create();
        }
        return props_BoolVal_4;
      case LanguageConceptSwitch.BoolVal_5:
        if (props_BoolVal_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolVal");
          cpb.rawPresentation("Arrayaccess boolval");
          props_BoolVal_5 = cpb.create();
        }
        return props_BoolVal_5;
      case LanguageConceptSwitch.BoolVal_6:
        if (props_BoolVal_6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolVal");
          cpb.rawPresentation("Ifexpr boolval");
          props_BoolVal_6 = cpb.create();
        }
        return props_BoolVal_6;
      case LanguageConceptSwitch.BoolVal_7:
        if (props_BoolVal_7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolVal");
          cpb.rawPresentation("Letexpr boolval");
          props_BoolVal_7 = cpb.create();
        }
        return props_BoolVal_7;
      case LanguageConceptSwitch.BoolVal_8:
        if (props_BoolVal_8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BoolVal");
          cpb.rawPresentation("Predorunionexpr boolval");
          props_BoolVal_8 = cpb.create();
        }
        return props_BoolVal_8;
      case LanguageConceptSwitch.BracketExpr_1:
        if (props_BracketExpr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BracketExpr");
          cpb.rawPresentation("{ }");
          props_BracketExpr_1 = cpb.create();
        }
        return props_BracketExpr_1;
      case LanguageConceptSwitch.BracketExpr_2:
        if (props_BracketExpr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("BracketExpr");
          cpb.rawPresentation("{ }");
          props_BracketExpr_2 = cpb.create();
        }
        return props_BracketExpr_2;
      case LanguageConceptSwitch.CaseBranch:
        if (props_CaseBranch == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("CaseBranch");
          cpb.rawPresentation("-->");
          props_CaseBranch = cpb.create();
        }
        return props_CaseBranch;
      case LanguageConceptSwitch.CaseBranch_block_1_1_1:
        if (props_CaseBranch_block_1_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("CaseBranch_block_1_1");
          cpb.rawPresentation("Predorunionexpr");
          props_CaseBranch_block_1_1_1 = cpb.create();
        }
        return props_CaseBranch_block_1_1_1;
      case LanguageConceptSwitch.CaseBranch_block_1_1_2:
        if (props_CaseBranch_block_1_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("CaseBranch_block_1_1");
          cpb.rawPresentation("Id");
          props_CaseBranch_block_1_1_2 = cpb.create();
        }
        return props_CaseBranch_block_1_1_2;
      case LanguageConceptSwitch.CaseExpr:
        if (props_CaseExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("CaseExpr");
          cpb.rawPresentation("case of endcase");
          props_CaseExpr = cpb.create();
        }
        return props_CaseExpr;
      case LanguageConceptSwitch.CaseExpr_block_1_1:
        if (props_CaseExpr_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("CaseExpr_block_1_1");
          cpb.rawPresentation(";");
          props_CaseExpr_block_1_1 = cpb.create();
        }
        return props_CaseExpr_block_1_1;
      case LanguageConceptSwitch.CommaList_1:
        if (props_CommaList_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("CommaList");
          cpb.rawPresentation("Commalist_block_1_1 commalist");
          props_CommaList_1 = cpb.create();
        }
        return props_CommaList_1;
      case LanguageConceptSwitch.CommaList_block_1_1:
        if (props_CommaList_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("CommaList_block_1_1");
          cpb.rawPresentation("CommaList_block_1_1");
          props_CommaList_block_1_1 = cpb.create();
        }
        return props_CommaList_block_1_1;
      case LanguageConceptSwitch.CommaList_block_1_2:
        if (props_CommaList_block_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("CommaList_block_1_2");
          cpb.rawPresentation(",");
          props_CommaList_block_1_2 = cpb.create();
        }
        return props_CommaList_block_1_2;
      case LanguageConceptSwitch.CommentStatement:
        if (props_CommentStatement == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("//");
          props_CommentStatement = cpb.create();
        }
        return props_CommentStatement;
      case LanguageConceptSwitch.Constr_1:
        if (props_Constr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Constr");
          cpb.rawPresentation("Scons constr");
          props_Constr_1 = cpb.create();
        }
        return props_Constr_1;
      case LanguageConceptSwitch.Constr_2:
        if (props_Constr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Constr");
          cpb.rawPresentation("Tcons constr");
          props_Constr_2 = cpb.create();
        }
        return props_Constr_2;
      case LanguageConceptSwitch.Constrainchoice_1:
        if (props_Constrainchoice_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Constrainchoice");
          cpb.rawPresentation("indomain");
          props_Constrainchoice_1 = cpb.create();
        }
        return props_Constrainchoice_1;
      case LanguageConceptSwitch.Constrainchoice_2:
        if (props_Constrainchoice_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Constrainchoice");
          cpb.rawPresentation("indomain_min");
          props_Constrainchoice_2 = cpb.create();
        }
        return props_Constrainchoice_2;
      case LanguageConceptSwitch.Constrainchoice_3:
        if (props_Constrainchoice_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Constrainchoice");
          cpb.rawPresentation("indomain_median");
          props_Constrainchoice_3 = cpb.create();
        }
        return props_Constrainchoice_3;
      case LanguageConceptSwitch.Constrainchoice_4:
        if (props_Constrainchoice_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Constrainchoice");
          cpb.rawPresentation("indomain_random");
          props_Constrainchoice_4 = cpb.create();
        }
        return props_Constrainchoice_4;
      case LanguageConceptSwitch.Constrainchoice_5:
        if (props_Constrainchoice_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Constrainchoice");
          cpb.rawPresentation("indomain_split");
          props_Constrainchoice_5 = cpb.create();
        }
        return props_Constrainchoice_5;
      case LanguageConceptSwitch.Constraint:
        if (props_Constraint == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Constraint");
          cpb.rawPresentation("constraint");
          props_Constraint = cpb.create();
        }
        return props_Constraint;
      case LanguageConceptSwitch.Data:
        if (props_Data == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Data");
          cpb.rawPresentation("enum = { }");
          props_Data = cpb.create();
        }
        return props_Data;
      case LanguageConceptSwitch.Data_block_1_1:
        if (props_Data_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Data_block_1_1");
          cpb.rawPresentation(",");
          props_Data_block_1_1 = cpb.create();
        }
        return props_Data_block_1_1;
      case LanguageConceptSwitch.Decl_1:
        if (props_Decl_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Decl");
          cpb.rawPresentation("Vardecl decl");
          props_Decl_1 = cpb.create();
        }
        return props_Decl_1;
      case LanguageConceptSwitch.Decl_2:
        if (props_Decl_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Decl");
          cpb.rawPresentation("Pardecl decl");
          props_Decl_2 = cpb.create();
        }
        return props_Decl_2;
      case LanguageConceptSwitch.Dimensions:
        if (props_Dimensions == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Dimensions");
          cpb.rawPresentation("[ ]");
          props_Dimensions = cpb.create();
        }
        return props_Dimensions;
      case LanguageConceptSwitch.Dimensions_block_1_1_1:
        if (props_Dimensions_block_1_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Dimensions_block_1_1");
          cpb.rawPresentation("Dimensions_block_1_2");
          props_Dimensions_block_1_1_1 = cpb.create();
        }
        return props_Dimensions_block_1_1_1;
      case LanguageConceptSwitch.Dimensions_block_1_1_2:
        if (props_Dimensions_block_1_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Dimensions_block_1_1");
          cpb.rawPresentation("int");
          props_Dimensions_block_1_1_2 = cpb.create();
        }
        return props_Dimensions_block_1_1_2;
      case LanguageConceptSwitch.Dimensions_block_1_2:
        if (props_Dimensions_block_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Dimensions_block_1_2");
          cpb.rawPresentation("Dimensions_block_1_2");
          props_Dimensions_block_1_2 = cpb.create();
        }
        return props_Dimensions_block_1_2;
      case LanguageConceptSwitch.Dimensions_block_1_3:
        if (props_Dimensions_block_1_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Dimensions_block_1_3");
          cpb.rawPresentation(",");
          props_Dimensions_block_1_3 = cpb.create();
        }
        return props_Dimensions_block_1_3;
      case LanguageConceptSwitch.ElseS:
        if (props_ElseS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ElseS");
          cpb.rawPresentation("else endif");
          props_ElseS = cpb.create();
        }
        return props_ElseS;
      case LanguageConceptSwitch.ElseifS:
        if (props_ElseifS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ElseifS");
          cpb.rawPresentation("elseif");
          props_ElseifS = cpb.create();
        }
        return props_ElseifS;
      case LanguageConceptSwitch.EmptyStatement:
        if (props_EmptyStatement == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EmptyStatement");
          props_EmptyStatement = cpb.create();
        }
        return props_EmptyStatement;
      case LanguageConceptSwitch.Expr_1:
        if (props_Expr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Id expr");
          props_Expr_1 = cpb.create();
        }
        return props_Expr_1;
      case LanguageConceptSwitch.Expr_10:
        if (props_Expr_10 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Listexpr expr");
          props_Expr_10 = cpb.create();
        }
        return props_Expr_10;
      case LanguageConceptSwitch.Expr_11:
        if (props_Expr_11 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Boolcomplexexpr expr");
          props_Expr_11 = cpb.create();
        }
        return props_Expr_11;
      case LanguageConceptSwitch.Expr_12:
        if (props_Expr_12 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Arithcomplexexpr expr");
          props_Expr_12 = cpb.create();
        }
        return props_Expr_12;
      case LanguageConceptSwitch.Expr_13:
        if (props_Expr_13 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Setexpr expr");
          props_Expr_13 = cpb.create();
        }
        return props_Expr_13;
      case LanguageConceptSwitch.Expr_14:
        if (props_Expr_14 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Caseexpr expr");
          props_Expr_14 = cpb.create();
        }
        return props_Expr_14;
      case LanguageConceptSwitch.Expr_15:
        if (props_Expr_15 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Expr_15");
          props_Expr_15 = cpb.create();
        }
        return props_Expr_15;
      case LanguageConceptSwitch.Expr_2:
        if (props_Expr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("_");
          props_Expr_2 = cpb.create();
        }
        return props_Expr_2;
      case LanguageConceptSwitch.Expr_3:
        if (props_Expr_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Bool expr");
          props_Expr_3 = cpb.create();
        }
        return props_Expr_3;
      case LanguageConceptSwitch.Expr_4:
        if (props_Expr_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Real expr");
          props_Expr_4 = cpb.create();
        }
        return props_Expr_4;
      case LanguageConceptSwitch.Expr_5:
        if (props_Expr_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Integer expr");
          props_Expr_5 = cpb.create();
        }
        return props_Expr_5;
      case LanguageConceptSwitch.Expr_6:
        if (props_Expr_6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Predorunionexpr expr");
          props_Expr_6 = cpb.create();
        }
        return props_Expr_6;
      case LanguageConceptSwitch.Expr_7:
        if (props_Expr_7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Rbracketexpr expr");
          props_Expr_7 = cpb.create();
        }
        return props_Expr_7;
      case LanguageConceptSwitch.Expr_8:
        if (props_Expr_8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Ifexpr expr");
          props_Expr_8 = cpb.create();
        }
        return props_Expr_8;
      case LanguageConceptSwitch.Expr_9:
        if (props_Expr_9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Expr");
          cpb.rawPresentation("Letexpr expr");
          props_Expr_9 = cpb.create();
        }
        return props_Expr_9;
      case LanguageConceptSwitch.Extended:
        if (props_Extended == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Extended");
          cpb.rawPresentation("extended =");
          props_Extended = cpb.create();
        }
        return props_Extended;
      case LanguageConceptSwitch.Extended_block_1_1:
        if (props_Extended_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Extended_block_1_1");
          cpb.rawPresentation("++");
          props_Extended_block_1_1 = cpb.create();
        }
        return props_Extended_block_1_1;
      case LanguageConceptSwitch.Extended_block_1_2:
        if (props_Extended_block_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Extended_block_1_2");
          cpb.rawPresentation("++");
          props_Extended_block_1_2 = cpb.create();
        }
        return props_Extended_block_1_2;
      case LanguageConceptSwitch.Extendsmark:
        if (props_Extendsmark == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Extendsmark");
          cpb.rawPresentation("extends");
          props_Extendsmark = cpb.create();
        }
        return props_Extendsmark;
      case LanguageConceptSwitch.FloatType:
        if (props_FloatType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("numeric type ");
          cpb.rawPresentation("float");
          props_FloatType = cpb.create();
        }
        return props_FloatType;
      case LanguageConceptSwitch.FromR_1:
        if (props_FromR_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("FromR");
          cpb.rawPresentation("Arithexpr fromr");
          props_FromR_1 = cpb.create();
        }
        return props_FromR_1;
      case LanguageConceptSwitch.Function:
        if (props_Function == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Function");
          cpb.rawPresentation("function ( ) =");
          props_Function = cpb.create();
        }
        return props_Function;
      case LanguageConceptSwitch.Function_block_1_1:
        if (props_Function_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Function_block_1_1");
          cpb.rawPresentation("Function_block_1_1");
          props_Function_block_1_1 = cpb.create();
        }
        return props_Function_block_1_1;
      case LanguageConceptSwitch.Function_block_1_2:
        if (props_Function_block_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Function_block_1_2");
          cpb.rawPresentation(",");
          props_Function_block_1_2 = cpb.create();
        }
        return props_Function_block_1_2;
      case LanguageConceptSwitch.Guard:
        if (props_Guard == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Guard");
          cpb.rawPresentation("Guard");
          props_Guard = cpb.create();
        }
        return props_Guard;
      case LanguageConceptSwitch.Guard_block_1_1:
        if (props_Guard_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Guard_block_1_1");
          cpb.rawPresentation(",");
          props_Guard_block_1_1 = cpb.create();
        }
        return props_Guard_block_1_1;
      case LanguageConceptSwitch.GuardedList:
        if (props_GuardedList == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("GuardedList");
          cpb.rawPresentation("[ | ]");
          props_GuardedList = cpb.create();
        }
        return props_GuardedList;
      case LanguageConceptSwitch.GuardedSet:
        if (props_GuardedSet == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("GuardedSet");
          cpb.rawPresentation("{ | }");
          props_GuardedSet = cpb.create();
        }
        return props_GuardedSet;
      case LanguageConceptSwitch.IArithComplexExpr:
        if (props_IArithComplexExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IArithComplexExpr = cpb.create();
        }
        return props_IArithComplexExpr;
      case LanguageConceptSwitch.IArithExpr:
        if (props_IArithExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IArithExpr = cpb.create();
        }
        return props_IArithExpr;
      case LanguageConceptSwitch.IArithOp:
        if (props_IArithOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IArithOp = cpb.create();
        }
        return props_IArithOp;
      case LanguageConceptSwitch.IArithOp2:
        if (props_IArithOp2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IArithOp2 = cpb.create();
        }
        return props_IArithOp2;
      case LanguageConceptSwitch.IArrayaccess:
        if (props_IArrayaccess == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IArrayaccess = cpb.create();
        }
        return props_IArrayaccess;
      case LanguageConceptSwitch.IBodyIf_block_1_1:
        if (props_IBodyIf_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBodyIf_block_1_1 = cpb.create();
        }
        return props_IBodyIf_block_1_1;
      case LanguageConceptSwitch.IBoolComplexExpr:
        if (props_IBoolComplexExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBoolComplexExpr = cpb.create();
        }
        return props_IBoolComplexExpr;
      case LanguageConceptSwitch.IBoolComplexExpr_block_1_1:
        if (props_IBoolComplexExpr_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBoolComplexExpr_block_1_1 = cpb.create();
        }
        return props_IBoolComplexExpr_block_1_1;
      case LanguageConceptSwitch.IBoolComplexExpr_block_2_1:
        if (props_IBoolComplexExpr_block_2_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBoolComplexExpr_block_2_1 = cpb.create();
        }
        return props_IBoolComplexExpr_block_2_1;
      case LanguageConceptSwitch.IBoolExpr:
        if (props_IBoolExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBoolExpr = cpb.create();
        }
        return props_IBoolExpr;
      case LanguageConceptSwitch.IBoolExpr_block_1_1:
        if (props_IBoolExpr_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBoolExpr_block_1_1 = cpb.create();
        }
        return props_IBoolExpr_block_1_1;
      case LanguageConceptSwitch.IBoolExpr_block_2_1:
        if (props_IBoolExpr_block_2_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBoolExpr_block_2_1 = cpb.create();
        }
        return props_IBoolExpr_block_2_1;
      case LanguageConceptSwitch.IBoolOp:
        if (props_IBoolOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBoolOp = cpb.create();
        }
        return props_IBoolOp;
      case LanguageConceptSwitch.IBoolVal:
        if (props_IBoolVal == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBoolVal = cpb.create();
        }
        return props_IBoolVal;
      case LanguageConceptSwitch.IBracketExpr:
        if (props_IBracketExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBracketExpr = cpb.create();
        }
        return props_IBracketExpr;
      case LanguageConceptSwitch.ICaseBranch_block_1_1:
        if (props_ICaseBranch_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ICaseBranch_block_1_1 = cpb.create();
        }
        return props_ICaseBranch_block_1_1;
      case LanguageConceptSwitch.ICommaList:
        if (props_ICommaList == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ICommaList = cpb.create();
        }
        return props_ICommaList;
      case LanguageConceptSwitch.IConstr:
        if (props_IConstr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IConstr = cpb.create();
        }
        return props_IConstr;
      case LanguageConceptSwitch.IConstrainchoice:
        if (props_IConstrainchoice == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IConstrainchoice = cpb.create();
        }
        return props_IConstrainchoice;
      case LanguageConceptSwitch.IDecl:
        if (props_IDecl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IDecl = cpb.create();
        }
        return props_IDecl;
      case LanguageConceptSwitch.IDimensions_block_1_1:
        if (props_IDimensions_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IDimensions_block_1_1 = cpb.create();
        }
        return props_IDimensions_block_1_1;
      case LanguageConceptSwitch.IExpr:
        if (props_IExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IExpr = cpb.create();
        }
        return props_IExpr;
      case LanguageConceptSwitch.IFromR:
        if (props_IFromR == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IFromR = cpb.create();
        }
        return props_IFromR;
      case LanguageConceptSwitch.IInfixOp:
        if (props_IInfixOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IInfixOp = cpb.create();
        }
        return props_IInfixOp;
      case LanguageConceptSwitch.IInfixSetOp:
        if (props_IInfixSetOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IInfixSetOp = cpb.create();
        }
        return props_IInfixSetOp;
      case LanguageConceptSwitch.IInteger:
        if (props_IInteger == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IInteger = cpb.create();
        }
        return props_IInteger;
      case LanguageConceptSwitch.ILetDecl:
        if (props_ILetDecl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ILetDecl = cpb.create();
        }
        return props_ILetDecl;
      case LanguageConceptSwitch.IListExpr:
        if (props_IListExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IListExpr = cpb.create();
        }
        return props_IListExpr;
      case LanguageConceptSwitch.IListValue:
        if (props_IListValue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IListValue = cpb.create();
        }
        return props_IListValue;
      case LanguageConceptSwitch.IModeAnnotation:
        if (props_IModeAnnotation == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IModeAnnotation = cpb.create();
        }
        return props_IModeAnnotation;
      case LanguageConceptSwitch.IOneDimList:
        if (props_IOneDimList == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IOneDimList = cpb.create();
        }
        return props_IOneDimList;
      case LanguageConceptSwitch.IOp:
        if (props_IOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IOp = cpb.create();
        }
        return props_IOp;
      case LanguageConceptSwitch.IOpOrID:
        if (props_IOpOrID == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IOpOrID = cpb.create();
        }
        return props_IOpOrID;
      case LanguageConceptSwitch.IOperand:
        if (props_IOperand == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IOperand = cpb.create();
        }
        return props_IOperand;
      case LanguageConceptSwitch.IOptimize:
        if (props_IOptimize == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IOptimize = cpb.create();
        }
        return props_IOptimize;
      case LanguageConceptSwitch.IOutput:
        if (props_IOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IOutput = cpb.create();
        }
        return props_IOutput;
      case LanguageConceptSwitch.IPardecl:
        if (props_IPardecl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IPardecl = cpb.create();
        }
        return props_IPardecl;
      case LanguageConceptSwitch.IPostExt:
        if (props_IPostExt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IPostExt = cpb.create();
        }
        return props_IPostExt;
      case LanguageConceptSwitch.IPreExt:
        if (props_IPreExt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IPreExt = cpb.create();
        }
        return props_IPreExt;
      case LanguageConceptSwitch.IPredOrUnionExpr_block_1_1:
        if (props_IPredOrUnionExpr_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IPredOrUnionExpr_block_1_1 = cpb.create();
        }
        return props_IPredOrUnionExpr_block_1_1;
      case LanguageConceptSwitch.IQualName:
        if (props_IQualName == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IQualName = cpb.create();
        }
        return props_IQualName;
      case LanguageConceptSwitch.IRange:
        if (props_IRange == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IRange = cpb.create();
        }
        return props_IRange;
      case LanguageConceptSwitch.ISetExpr:
        if (props_ISetExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ISetExpr = cpb.create();
        }
        return props_ISetExpr;
      case LanguageConceptSwitch.ISetVal:
        if (props_ISetVal == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ISetVal = cpb.create();
        }
        return props_ISetVal;
      case LanguageConceptSwitch.ISimpleList:
        if (props_ISimpleList == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ISimpleList = cpb.create();
        }
        return props_ISimpleList;
      case LanguageConceptSwitch.ISolve:
        if (props_ISolve == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ISolve = cpb.create();
        }
        return props_ISolve;
      case LanguageConceptSwitch.ISolve_block_1_1:
        if (props_ISolve_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ISolve_block_1_1 = cpb.create();
        }
        return props_ISolve_block_1_1;
      case LanguageConceptSwitch.IStat:
        if (props_IStat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IStat = cpb.create();
        }
        return props_IStat;
      case LanguageConceptSwitch.IStringExpr:
        if (props_IStringExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IStringExpr = cpb.create();
        }
        return props_IStringExpr;
      case LanguageConceptSwitch.IToR:
        if (props_IToR == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IToR = cpb.create();
        }
        return props_IToR;
      case LanguageConceptSwitch.ITypename:
        if (props_ITypename == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ITypename = cpb.create();
        }
        return props_ITypename;
      case LanguageConceptSwitch.IVarchoice:
        if (props_IVarchoice == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IVarchoice = cpb.create();
        }
        return props_IVarchoice;
      case LanguageConceptSwitch.Idexpr:
        if (props_Idexpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Idexpr");
          cpb.rawPresentation("Id idexpr");
          props_Idexpr = cpb.create();
        }
        return props_Idexpr;
      case LanguageConceptSwitch.IfExpr:
        if (props_IfExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("IfExpr");
          cpb.rawPresentation("if");
          props_IfExpr = cpb.create();
        }
        return props_IfExpr;
      case LanguageConceptSwitch.InDecl:
        if (props_InDecl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("InDecl");
          cpb.rawPresentation("in");
          props_InDecl = cpb.create();
        }
        return props_InDecl;
      case LanguageConceptSwitch.InDecl_block_1_1:
        if (props_InDecl_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("InDecl_block_1_1");
          cpb.rawPresentation(",");
          props_InDecl_block_1_1 = cpb.create();
        }
        return props_InDecl_block_1_1;
      case LanguageConceptSwitch.Include:
        if (props_Include == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Include");
          cpb.rawPresentation("include");
          props_Include = cpb.create();
        }
        return props_Include;
      case LanguageConceptSwitch.InfixOp_1:
        if (props_InfixOp_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("InfixOp");
          cpb.rawPresentation("` `");
          props_InfixOp_1 = cpb.create();
        }
        return props_InfixOp_1;
      case LanguageConceptSwitch.InfixOp_2:
        if (props_InfixOp_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("InfixOp");
          cpb.rawPresentation("Infixsetop infixop");
          props_InfixOp_2 = cpb.create();
        }
        return props_InfixOp_2;
      case LanguageConceptSwitch.InfixSetOp_1:
        if (props_InfixSetOp_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("InfixSetOp");
          cpb.rawPresentation("in");
          props_InfixSetOp_1 = cpb.create();
        }
        return props_InfixSetOp_1;
      case LanguageConceptSwitch.InfixSetOp_2:
        if (props_InfixSetOp_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("InfixSetOp");
          cpb.rawPresentation("intersect");
          props_InfixSetOp_2 = cpb.create();
        }
        return props_InfixSetOp_2;
      case LanguageConceptSwitch.InfixSetOp_3:
        if (props_InfixSetOp_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("InfixSetOp");
          cpb.rawPresentation("union");
          props_InfixSetOp_3 = cpb.create();
        }
        return props_InfixSetOp_3;
      case LanguageConceptSwitch.Init:
        if (props_Init == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Init");
          cpb.rawPresentation("=");
          props_Init = cpb.create();
        }
        return props_Init;
      case LanguageConceptSwitch.IntDivExpression:
        if (props_IntDivExpression == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("integer division");
          cpb.rawPresentation("div");
          props_IntDivExpression = cpb.create();
        }
        return props_IntDivExpression;
      case LanguageConceptSwitch.IntS:
        if (props_IntS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("IntS");
          cpb.rawPresentation("int_search");
          props_IntS = cpb.create();
        }
        return props_IntS;
      case LanguageConceptSwitch.Integer_1:
        if (props_Integer_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Integer");
          cpb.rawPresentation("Nat integer");
          props_Integer_1 = cpb.create();
        }
        return props_Integer_1;
      case LanguageConceptSwitch.LetDecl_1:
        if (props_LetDecl_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("LetDecl");
          cpb.rawPresentation("Decl letdecl");
          props_LetDecl_1 = cpb.create();
        }
        return props_LetDecl_1;
      case LanguageConceptSwitch.LetDecl_2:
        if (props_LetDecl_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("LetDecl");
          cpb.rawPresentation("Constraint letdecl");
          props_LetDecl_2 = cpb.create();
        }
        return props_LetDecl_2;
      case LanguageConceptSwitch.LetExpr:
        if (props_LetExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("LetExpr");
          cpb.rawPresentation("let { } in");
          props_LetExpr = cpb.create();
        }
        return props_LetExpr;
      case LanguageConceptSwitch.LetExpr_block_1_1:
        if (props_LetExpr_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("LetExpr_block_1_1");
          cpb.rawPresentation(",");
          props_LetExpr_block_1_1 = cpb.create();
        }
        return props_LetExpr_block_1_1;
      case LanguageConceptSwitch.ListExpr_1:
        if (props_ListExpr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListExpr");
          cpb.rawPresentation("Listvalue listexpr");
          props_ListExpr_1 = cpb.create();
        }
        return props_ListExpr_1;
      case LanguageConceptSwitch.ListExpr_2:
        if (props_ListExpr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListExpr");
          cpb.rawPresentation("++");
          props_ListExpr_2 = cpb.create();
        }
        return props_ListExpr_2;
      case LanguageConceptSwitch.ListExpr_3:
        if (props_ListExpr_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListExpr");
          cpb.rawPresentation("Onedimlist listexpr");
          props_ListExpr_3 = cpb.create();
        }
        return props_ListExpr_3;
      case LanguageConceptSwitch.ListExpr_4:
        if (props_ListExpr_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListExpr");
          cpb.rawPresentation("Multidimlist listexpr");
          props_ListExpr_4 = cpb.create();
        }
        return props_ListExpr_4;
      case LanguageConceptSwitch.ListExtended:
        if (props_ListExtended == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListExtended");
          cpb.rawPresentation("[ ]");
          props_ListExtended = cpb.create();
        }
        return props_ListExtended;
      case LanguageConceptSwitch.ListExtended_block_1_1:
        if (props_ListExtended_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListExtended_block_1_1");
          cpb.rawPresentation(",");
          props_ListExtended_block_1_1 = cpb.create();
        }
        return props_ListExtended_block_1_1;
      case LanguageConceptSwitch.ListValue_1:
        if (props_ListValue_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListValue");
          cpb.rawPresentation("Stringexpr listvalue");
          props_ListValue_1 = cpb.create();
        }
        return props_ListValue_1;
      case LanguageConceptSwitch.ListValue_2:
        if (props_ListValue_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListValue");
          cpb.rawPresentation("Id listvalue");
          props_ListValue_2 = cpb.create();
        }
        return props_ListValue_2;
      case LanguageConceptSwitch.ListValue_3:
        if (props_ListValue_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListValue");
          cpb.rawPresentation("Ifexpr listvalue");
          props_ListValue_3 = cpb.create();
        }
        return props_ListValue_3;
      case LanguageConceptSwitch.ListValue_4:
        if (props_ListValue_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListValue");
          cpb.rawPresentation("Arrayaccess listvalue");
          props_ListValue_4 = cpb.create();
        }
        return props_ListValue_4;
      case LanguageConceptSwitch.ListValue_5:
        if (props_ListValue_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ListValue");
          cpb.rawPresentation("Predorunionexpr listvalue");
          props_ListValue_5 = cpb.create();
        }
        return props_ListValue_5;
      case LanguageConceptSwitch.Maximize:
        if (props_Maximize == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Maximize");
          cpb.rawPresentation("maximize");
          props_Maximize = cpb.create();
        }
        return props_Maximize;
      case LanguageConceptSwitch.Minimize:
        if (props_Minimize == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Minimize");
          cpb.rawPresentation("minimize");
          props_Minimize = cpb.create();
        }
        return props_Minimize;
      case LanguageConceptSwitch.MinusExpr:
        if (props_MinusExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("MinusExpr");
          cpb.rawPresentation("-");
          props_MinusExpr = cpb.create();
        }
        return props_MinusExpr;
      case LanguageConceptSwitch.ModeAnnotation_1:
        if (props_ModeAnnotation_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ModeAnnotation");
          cpb.rawPresentation("Ints modeannotation");
          props_ModeAnnotation_1 = cpb.create();
        }
        return props_ModeAnnotation_1;
      case LanguageConceptSwitch.ModeAnnotation_2:
        if (props_ModeAnnotation_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ModeAnnotation");
          cpb.rawPresentation("Bools modeannotation");
          props_ModeAnnotation_2 = cpb.create();
        }
        return props_ModeAnnotation_2;
      case LanguageConceptSwitch.ModeAnnotation_3:
        if (props_ModeAnnotation_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ModeAnnotation");
          cpb.rawPresentation("Sets modeannotation");
          props_ModeAnnotation_3 = cpb.create();
        }
        return props_ModeAnnotation_3;
      case LanguageConceptSwitch.ModeAnnotation_4:
        if (props_ModeAnnotation_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ModeAnnotation");
          cpb.rawPresentation("Seqs modeannotation");
          props_ModeAnnotation_4 = cpb.create();
        }
        return props_ModeAnnotation_4;
      case LanguageConceptSwitch.Model:
        if (props_Model == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Model");
          cpb.presentationByName();
          props_Model = cpb.create();
        }
        return props_Model;
      case LanguageConceptSwitch.MultiDimList:
        if (props_MultiDimList == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("MultiDimList");
          cpb.rawPresentation("[| |]");
          props_MultiDimList = cpb.create();
        }
        return props_MultiDimList;
      case LanguageConceptSwitch.MultiDimList_block_1_1:
        if (props_MultiDimList_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("MultiDimList_block_1_1");
          cpb.rawPresentation("|");
          props_MultiDimList_block_1_1 = cpb.create();
        }
        return props_MultiDimList_block_1_1;
      case LanguageConceptSwitch.MultiDimList_block_1_2:
        if (props_MultiDimList_block_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("MultiDimList_block_1_2");
          cpb.rawPresentation(",");
          props_MultiDimList_block_1_2 = cpb.create();
        }
        return props_MultiDimList_block_1_2;
      case LanguageConceptSwitch.MultiDimList_block_1_3:
        if (props_MultiDimList_block_1_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("MultiDimList_block_1_3");
          cpb.rawPresentation("|");
          props_MultiDimList_block_1_3 = cpb.create();
        }
        return props_MultiDimList_block_1_3;
      case LanguageConceptSwitch.NonEmptyListElems:
        if (props_NonEmptyListElems == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("NonEmptyListElems");
          cpb.rawPresentation("NonEmptyListElems");
          props_NonEmptyListElems = cpb.create();
        }
        return props_NonEmptyListElems;
      case LanguageConceptSwitch.NonEmptyListElems_block_1_1:
        if (props_NonEmptyListElems_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("NonEmptyListElems_block_1_1");
          cpb.rawPresentation(",");
          props_NonEmptyListElems_block_1_1 = cpb.create();
        }
        return props_NonEmptyListElems_block_1_1;
      case LanguageConceptSwitch.NotExpr:
        if (props_NotExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("NotExpr");
          cpb.rawPresentation("not");
          props_NotExpr = cpb.create();
        }
        return props_NotExpr;
      case LanguageConceptSwitch.OneDimList_1:
        if (props_OneDimList_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("OneDimList");
          cpb.rawPresentation("Simplelist onedimlist");
          props_OneDimList_1 = cpb.create();
        }
        return props_OneDimList_1;
      case LanguageConceptSwitch.OneDimList_2:
        if (props_OneDimList_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("OneDimList");
          cpb.rawPresentation("Guardedlist onedimlist");
          props_OneDimList_2 = cpb.create();
        }
        return props_OneDimList_2;
      case LanguageConceptSwitch.Onesection:
        if (props_Onesection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Onesection");
          cpb.rawPresentation("( )");
          props_Onesection = cpb.create();
        }
        return props_Onesection;
      case LanguageConceptSwitch.Onesection_block_1_1:
        if (props_Onesection_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Onesection_block_1_1");
          cpb.rawPresentation("Onesection_block_1_1");
          props_Onesection_block_1_1 = cpb.create();
        }
        return props_Onesection_block_1_1;
      case LanguageConceptSwitch.Onesection_block_1_2:
        if (props_Onesection_block_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Onesection_block_1_2");
          cpb.rawPresentation(",");
          props_Onesection_block_1_2 = cpb.create();
        }
        return props_Onesection_block_1_2;
      case LanguageConceptSwitch.OpOrID_1:
        if (props_OpOrID_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("OpOrID");
          cpb.rawPresentation("Op oporid");
          props_OpOrID_1 = cpb.create();
        }
        return props_OpOrID_1;
      case LanguageConceptSwitch.OpOrID_2:
        if (props_OpOrID_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("OpOrID");
          cpb.rawPresentation("Id oporid");
          props_OpOrID_2 = cpb.create();
        }
        return props_OpOrID_2;
      case LanguageConceptSwitch.Op_1:
        if (props_Op_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Op");
          cpb.rawPresentation("Boolop op");
          props_Op_1 = cpb.create();
        }
        return props_Op_1;
      case LanguageConceptSwitch.Op_2:
        if (props_Op_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Op");
          cpb.rawPresentation("Arithop op");
          props_Op_2 = cpb.create();
        }
        return props_Op_2;
      case LanguageConceptSwitch.Operand_1:
        if (props_Operand_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Operand");
          cpb.rawPresentation("Id operand");
          props_Operand_1 = cpb.create();
        }
        return props_Operand_1;
      case LanguageConceptSwitch.Operand_2:
        if (props_Operand_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Operand");
          cpb.rawPresentation("Integer operand");
          props_Operand_2 = cpb.create();
        }
        return props_Operand_2;
      case LanguageConceptSwitch.Operand_3:
        if (props_Operand_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Operand");
          cpb.rawPresentation("Real operand");
          props_Operand_3 = cpb.create();
        }
        return props_Operand_3;
      case LanguageConceptSwitch.Operand_4:
        if (props_Operand_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Operand");
          cpb.rawPresentation("Arrayaccess operand");
          props_Operand_4 = cpb.create();
        }
        return props_Operand_4;
      case LanguageConceptSwitch.Operand_5:
        if (props_Operand_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Operand");
          cpb.rawPresentation("Ifexpr operand");
          props_Operand_5 = cpb.create();
        }
        return props_Operand_5;
      case LanguageConceptSwitch.Operand_6:
        if (props_Operand_6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Operand");
          cpb.rawPresentation("Letexpr operand");
          props_Operand_6 = cpb.create();
        }
        return props_Operand_6;
      case LanguageConceptSwitch.Operand_7:
        if (props_Operand_7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Operand");
          cpb.rawPresentation("( )");
          props_Operand_7 = cpb.create();
        }
        return props_Operand_7;
      case LanguageConceptSwitch.Operand_8:
        if (props_Operand_8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Operand");
          cpb.rawPresentation("Predorunionexpr operand");
          props_Operand_8 = cpb.create();
        }
        return props_Operand_8;
      case LanguageConceptSwitch.Optimize_1:
        if (props_Optimize_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Optimize");
          cpb.rawPresentation("Maximize optimize");
          props_Optimize_1 = cpb.create();
        }
        return props_Optimize_1;
      case LanguageConceptSwitch.Optimize_2:
        if (props_Optimize_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Optimize");
          cpb.rawPresentation("Minimize optimize");
          props_Optimize_2 = cpb.create();
        }
        return props_Optimize_2;
      case LanguageConceptSwitch.Output_1:
        if (props_Output_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Output");
          cpb.rawPresentation("output ( )");
          props_Output_1 = cpb.create();
        }
        return props_Output_1;
      case LanguageConceptSwitch.Output_2:
        if (props_Output_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Output");
          cpb.rawPresentation("output");
          props_Output_2 = cpb.create();
        }
        return props_Output_2;
      case LanguageConceptSwitch.ParDecl:
        if (props_ParDecl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_ParDecl = cpb.create();
        }
        return props_ParDecl;
      case LanguageConceptSwitch.ParRef:
        if (props_ParRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x28bc9b160fb413f6L, 0x28bc9b160f99322bL, "var", "", "");
          props_ParRef = cpb.create();
        }
        return props_ParRef;
      case LanguageConceptSwitch.Parameter:
        if (props_Parameter == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Parameter");
          cpb.rawPresentation("par :");
          props_Parameter = cpb.create();
        }
        return props_Parameter;
      case LanguageConceptSwitch.Parameter_block_1_1:
        if (props_Parameter_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Parameter_block_1_1");
          cpb.rawPresentation("=");
          props_Parameter_block_1_1 = cpb.create();
        }
        return props_Parameter_block_1_1;
      case LanguageConceptSwitch.Pararray:
        if (props_Pararray == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Pararray");
          cpb.rawPresentation("array of");
          props_Pararray = cpb.create();
        }
        return props_Pararray;
      case LanguageConceptSwitch.Pardecl_1:
        if (props_Pardecl_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Pardecl");
          cpb.rawPresentation("Parameter pardecl");
          props_Pardecl_1 = cpb.create();
        }
        return props_Pardecl_1;
      case LanguageConceptSwitch.Pardecl_2:
        if (props_Pardecl_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Pardecl");
          cpb.rawPresentation("Pararray pardecl");
          props_Pardecl_2 = cpb.create();
        }
        return props_Pardecl_2;
      case LanguageConceptSwitch.PostExt_1:
        if (props_PostExt_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("PostExt");
          cpb.rawPresentation("Listextended postext");
          props_PostExt_1 = cpb.create();
        }
        return props_PostExt_1;
      case LanguageConceptSwitch.PreExt_1:
        if (props_PreExt_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("PreExt");
          cpb.rawPresentation("Listextended preext");
          props_PreExt_1 = cpb.create();
        }
        return props_PreExt_1;
      case LanguageConceptSwitch.PredOrUnionExpr:
        if (props_PredOrUnionExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("PredOrUnionExpr");
          cpb.rawPresentation("PredOrUnionExpr");
          props_PredOrUnionExpr = cpb.create();
        }
        return props_PredOrUnionExpr;
      case LanguageConceptSwitch.PredOrUnionExpr_block_1_1_1:
        if (props_PredOrUnionExpr_block_1_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("PredOrUnionExpr_block_1_1");
          cpb.rawPresentation("Twosections");
          props_PredOrUnionExpr_block_1_1_1 = cpb.create();
        }
        return props_PredOrUnionExpr_block_1_1_1;
      case LanguageConceptSwitch.PredOrUnionExpr_block_1_1_2:
        if (props_PredOrUnionExpr_block_1_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("PredOrUnionExpr_block_1_1");
          cpb.rawPresentation("Onesection");
          props_PredOrUnionExpr_block_1_1_2 = cpb.create();
        }
        return props_PredOrUnionExpr_block_1_1_2;
      case LanguageConceptSwitch.Predicate:
        if (props_Predicate == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Predicate");
          cpb.rawPresentation("predicate ( ) =");
          props_Predicate = cpb.create();
        }
        return props_Predicate;
      case LanguageConceptSwitch.Predicate_block_1_1:
        if (props_Predicate_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Predicate_block_1_1");
          cpb.rawPresentation("Predicate_block_1_1");
          props_Predicate_block_1_1 = cpb.create();
        }
        return props_Predicate_block_1_1;
      case LanguageConceptSwitch.Predicate_block_1_2:
        if (props_Predicate_block_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Predicate_block_1_2");
          cpb.rawPresentation(",");
          props_Predicate_block_1_2 = cpb.create();
        }
        return props_Predicate_block_1_2;
      case LanguageConceptSwitch.QualArithOp:
        if (props_QualArithOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("QualArithOp");
          cpb.rawPresentation(":");
          props_QualArithOp = cpb.create();
        }
        return props_QualArithOp;
      case LanguageConceptSwitch.QualBoolOp:
        if (props_QualBoolOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("QualBoolOp");
          cpb.rawPresentation(":");
          props_QualBoolOp = cpb.create();
        }
        return props_QualBoolOp;
      case LanguageConceptSwitch.QualName_1:
        if (props_QualName_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("QualName");
          cpb.rawPresentation("Id qualname");
          props_QualName_1 = cpb.create();
        }
        return props_QualName_1;
      case LanguageConceptSwitch.QualName_2:
        if (props_QualName_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("QualName");
          cpb.rawPresentation(":");
          props_QualName_2 = cpb.create();
        }
        return props_QualName_2;
      case LanguageConceptSwitch.QualName_3:
        if (props_QualName_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("QualName");
          cpb.rawPresentation("QualName_3");
          props_QualName_3 = cpb.create();
        }
        return props_QualName_3;
      case LanguageConceptSwitch.Range_1:
        if (props_Range_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Range");
          cpb.rawPresentation("..");
          props_Range_1 = cpb.create();
        }
        return props_Range_1;
      case LanguageConceptSwitch.Range_2:
        if (props_Range_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Range");
          cpb.rawPresentation("Id range");
          props_Range_2 = cpb.create();
        }
        return props_Range_2;
      case LanguageConceptSwitch.RbracketExpr:
        if (props_RbracketExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("RbracketExpr");
          cpb.rawPresentation("( )");
          props_RbracketExpr = cpb.create();
        }
        return props_RbracketExpr;
      case LanguageConceptSwitch.Real:
        if (props_Real == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Real");
          cpb.rawPresentation(".");
          props_Real = cpb.create();
        }
        return props_Real;
      case LanguageConceptSwitch.RestS:
        if (props_RestS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("RestS");
          cpb.rawPresentation("( , , , complete )");
          props_RestS = cpb.create();
        }
        return props_RestS;
      case LanguageConceptSwitch.Satisfy:
        if (props_Satisfy == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Satisfy");
          cpb.rawPresentation("satisfy");
          props_Satisfy = cpb.create();
        }
        return props_Satisfy;
      case LanguageConceptSwitch.Scons:
        if (props_Scons == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Scons");
          cpb.rawPresentation("Id scons");
          props_Scons = cpb.create();
        }
        return props_Scons;
      case LanguageConceptSwitch.SeqS:
        if (props_SeqS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SeqS");
          cpb.rawPresentation("seq_search ( [ ] )");
          props_SeqS = cpb.create();
        }
        return props_SeqS;
      case LanguageConceptSwitch.SeqS_block_1_1:
        if (props_SeqS_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SeqS_block_1_1");
          cpb.rawPresentation(",");
          props_SeqS_block_1_1 = cpb.create();
        }
        return props_SeqS_block_1_1;
      case LanguageConceptSwitch.SetExpr_1:
        if (props_SetExpr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SetExpr");
          cpb.rawPresentation("Setval setexpr");
          props_SetExpr_1 = cpb.create();
        }
        return props_SetExpr_1;
      case LanguageConceptSwitch.SetExpr_2:
        if (props_SetExpr_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SetExpr");
          cpb.rawPresentation("SetExpr_2");
          props_SetExpr_2 = cpb.create();
        }
        return props_SetExpr_2;
      case LanguageConceptSwitch.SetS:
        if (props_SetS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SetS");
          cpb.rawPresentation("set_search");
          props_SetS = cpb.create();
        }
        return props_SetS;
      case LanguageConceptSwitch.SetVal_1:
        if (props_SetVal_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SetVal");
          cpb.rawPresentation("Bracketexpr setval");
          props_SetVal_1 = cpb.create();
        }
        return props_SetVal_1;
      case LanguageConceptSwitch.SetVal_2:
        if (props_SetVal_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SetVal");
          cpb.rawPresentation("Range setval");
          props_SetVal_2 = cpb.create();
        }
        return props_SetVal_2;
      case LanguageConceptSwitch.SetVal_3:
        if (props_SetVal_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SetVal");
          cpb.rawPresentation("Guardedset setval");
          props_SetVal_3 = cpb.create();
        }
        return props_SetVal_3;
      case LanguageConceptSwitch.SimpleList_1:
        if (props_SimpleList_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SimpleList");
          cpb.rawPresentation("[ ]");
          props_SimpleList_1 = cpb.create();
        }
        return props_SimpleList_1;
      case LanguageConceptSwitch.SimpleList_2:
        if (props_SimpleList_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SimpleList");
          cpb.rawPresentation("Simplenonemptylist simplelist");
          props_SimpleList_2 = cpb.create();
        }
        return props_SimpleList_2;
      case LanguageConceptSwitch.SimpleNonEmptyList:
        if (props_SimpleNonEmptyList == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SimpleNonEmptyList");
          cpb.rawPresentation("[ ]");
          props_SimpleNonEmptyList = cpb.create();
        }
        return props_SimpleNonEmptyList;
      case LanguageConceptSwitch.SimpleNonEmptyList_block_1_1:
        if (props_SimpleNonEmptyList_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("SimpleNonEmptyList_block_1_1");
          cpb.rawPresentation(",");
          props_SimpleNonEmptyList_block_1_1 = cpb.create();
        }
        return props_SimpleNonEmptyList_block_1_1;
      case LanguageConceptSwitch.Solve:
        if (props_Solve == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Solve");
          cpb.rawPresentation("solve");
          props_Solve = cpb.create();
        }
        return props_Solve;
      case LanguageConceptSwitch.Solve_block_1_1_1:
        if (props_Solve_block_1_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Solve_block_1_1");
          cpb.rawPresentation("Annotation");
          props_Solve_block_1_1_1 = cpb.create();
        }
        return props_Solve_block_1_1_1;
      case LanguageConceptSwitch.Solve_block_1_2_1:
        if (props_Solve_block_1_2_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Solve_block_1_2");
          cpb.rawPresentation("Satisfy");
          props_Solve_block_1_2_1 = cpb.create();
        }
        return props_Solve_block_1_2_1;
      case LanguageConceptSwitch.Solve_block_1_2_2:
        if (props_Solve_block_1_2_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Solve_block_1_2");
          cpb.rawPresentation("Optimize");
          props_Solve_block_1_2_2 = cpb.create();
        }
        return props_Solve_block_1_2_2;
      case LanguageConceptSwitch.Stat_1:
        if (props_Stat_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Data stat");
          props_Stat_1 = cpb.create();
        }
        return props_Stat_1;
      case LanguageConceptSwitch.Stat_10:
        if (props_Stat_10 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Init stat");
          props_Stat_10 = cpb.create();
        }
        return props_Stat_10;
      case LanguageConceptSwitch.Stat_2:
        if (props_Stat_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Extended stat");
          props_Stat_2 = cpb.create();
        }
        return props_Stat_2;
      case LanguageConceptSwitch.Stat_3:
        if (props_Stat_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Constraint stat");
          props_Stat_3 = cpb.create();
        }
        return props_Stat_3;
      case LanguageConceptSwitch.Stat_4:
        if (props_Stat_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Decl stat");
          props_Stat_4 = cpb.create();
        }
        return props_Stat_4;
      case LanguageConceptSwitch.Stat_5:
        if (props_Stat_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Solve stat");
          props_Stat_5 = cpb.create();
        }
        return props_Stat_5;
      case LanguageConceptSwitch.Stat_6:
        if (props_Stat_6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Output stat");
          props_Stat_6 = cpb.create();
        }
        return props_Stat_6;
      case LanguageConceptSwitch.Stat_7:
        if (props_Stat_7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Predicate stat");
          props_Stat_7 = cpb.create();
        }
        return props_Stat_7;
      case LanguageConceptSwitch.Stat_8:
        if (props_Stat_8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Function stat");
          props_Stat_8 = cpb.create();
        }
        return props_Stat_8;
      case LanguageConceptSwitch.Stat_9:
        if (props_Stat_9 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Stat");
          cpb.rawPresentation("Include stat");
          props_Stat_9 = cpb.create();
        }
        return props_Stat_9;
      case LanguageConceptSwitch.String:
        if (props_String == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("String");
          cpb.rawPresentation("String string");
          props_String = cpb.create();
        }
        return props_String;
      case LanguageConceptSwitch.StringExpr_1:
        if (props_StringExpr_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("StringExpr");
          cpb.rawPresentation("String stringexpr");
          props_StringExpr_1 = cpb.create();
        }
        return props_StringExpr_1;
      case LanguageConceptSwitch.Tcons:
        if (props_Tcons == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Tcons");
          cpb.rawPresentation("( )");
          props_Tcons = cpb.create();
        }
        return props_Tcons;
      case LanguageConceptSwitch.Tcons_block_1_1:
        if (props_Tcons_block_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Tcons_block_1_1");
          cpb.rawPresentation(",");
          props_Tcons_block_1_1 = cpb.create();
        }
        return props_Tcons_block_1_1;
      case LanguageConceptSwitch.ToR_1:
        if (props_ToR_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("ToR");
          cpb.rawPresentation("Arithexpr tor");
          props_ToR_1 = cpb.create();
        }
        return props_ToR_1;
      case LanguageConceptSwitch.Twosections:
        if (props_Twosections == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Twosections");
          cpb.rawPresentation("( ) ( )");
          props_Twosections = cpb.create();
        }
        return props_Twosections;
      case LanguageConceptSwitch.Typedata:
        if (props_Typedata == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typedata");
          cpb.rawPresentation("( )");
          props_Typedata = cpb.create();
        }
        return props_Typedata;
      case LanguageConceptSwitch.Typename_1:
        if (props_Typename_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typename");
          cpb.rawPresentation("Rint typename");
          props_Typename_1 = cpb.create();
        }
        return props_Typename_1;
      case LanguageConceptSwitch.Typename_2:
        if (props_Typename_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typename");
          cpb.rawPresentation("Rbool typename");
          props_Typename_2 = cpb.create();
        }
        return props_Typename_2;
      case LanguageConceptSwitch.Typename_3:
        if (props_Typename_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typename");
          cpb.rawPresentation("Rfloat typename");
          props_Typename_3 = cpb.create();
        }
        return props_Typename_3;
      case LanguageConceptSwitch.Typename_4:
        if (props_Typename_4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typename");
          cpb.rawPresentation("Id typename");
          props_Typename_4 = cpb.create();
        }
        return props_Typename_4;
      case LanguageConceptSwitch.Typename_5:
        if (props_Typename_5 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typename");
          cpb.rawPresentation("Typedata typename");
          props_Typename_5 = cpb.create();
        }
        return props_Typename_5;
      case LanguageConceptSwitch.Typename_6:
        if (props_Typename_6 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typename");
          cpb.rawPresentation("Range typename");
          props_Typename_6 = cpb.create();
        }
        return props_Typename_6;
      case LanguageConceptSwitch.Typename_7:
        if (props_Typename_7 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typename");
          cpb.rawPresentation("Typeset typename");
          props_Typename_7 = cpb.create();
        }
        return props_Typename_7;
      case LanguageConceptSwitch.Typeset:
        if (props_Typeset == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Typeset");
          cpb.rawPresentation("set of");
          props_Typeset = cpb.create();
        }
        return props_Typeset;
      case LanguageConceptSwitch.Var:
        if (props_Var == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Var");
          cpb.rawPresentation("var");
          props_Var = cpb.create();
        }
        return props_Var;
      case LanguageConceptSwitch.VarDecl:
        if (props_VarDecl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_VarDecl = cpb.create();
        }
        return props_VarDecl;
      case LanguageConceptSwitch.VarDeclItem:
        if (props_VarDeclItem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("VarDeclItem");
          props_VarDeclItem = cpb.create();
        }
        return props_VarDeclItem;
      case LanguageConceptSwitch.VarRef:
        if (props_VarRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x28bc9b160f99322aL, 0x28bc9b160f99322bL, "var", "", "");
          props_VarRef = cpb.create();
        }
        return props_VarRef;
      case LanguageConceptSwitch.Vararray:
        if (props_Vararray == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Vararray");
          cpb.rawPresentation("array of");
          props_Vararray = cpb.create();
        }
        return props_Vararray;
      case LanguageConceptSwitch.Varchoice_1:
        if (props_Varchoice_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Varchoice");
          cpb.rawPresentation("input_order");
          props_Varchoice_1 = cpb.create();
        }
        return props_Varchoice_1;
      case LanguageConceptSwitch.Varchoice_2:
        if (props_Varchoice_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Varchoice");
          cpb.rawPresentation("first_fail");
          props_Varchoice_2 = cpb.create();
        }
        return props_Varchoice_2;
      case LanguageConceptSwitch.Varchoice_3:
        if (props_Varchoice_3 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Varchoice");
          cpb.rawPresentation("smallest");
          props_Varchoice_3 = cpb.create();
        }
        return props_Varchoice_3;
      case LanguageConceptSwitch.Vardecl_block_1_1_1:
        if (props_Vardecl_block_1_1_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Vardecl_block_1_1");
          cpb.rawPresentation("Var");
          props_Vardecl_block_1_1_1 = cpb.create();
        }
        return props_Vardecl_block_1_1_1;
      case LanguageConceptSwitch.Vardecl_block_1_1_2:
        if (props_Vardecl_block_1_1_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Vardecl_block_1_1");
          cpb.rawPresentation("Vararray");
          props_Vardecl_block_1_1_2 = cpb.create();
        }
        return props_Vardecl_block_1_1_2;
      case LanguageConceptSwitch.Varmark:
        if (props_Varmark == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Varmark");
          cpb.rawPresentation("var");
          props_Varmark = cpb.create();
        }
        return props_Varmark;
      case LanguageConceptSwitch.WhereCond:
        if (props_WhereCond == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("WhereCond");
          cpb.rawPresentation("where");
          props_WhereCond = cpb.create();
        }
        return props_WhereCond;
      case LanguageConceptSwitch.ZAnd:
        if (props_ZAnd == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("&&");
          props_ZAnd = cpb.create();
        }
        return props_ZAnd;
      case LanguageConceptSwitch.ZEqualsExpression:
        if (props_ZEqualsExpression == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("=");
          props_ZEqualsExpression = cpb.create();
        }
        return props_ZEqualsExpression;
      case LanguageConceptSwitch.ZIff:
        if (props_ZIff == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("<=>");
          props_ZIff = cpb.create();
        }
        return props_ZIff;
      case LanguageConceptSwitch.ZImplies:
        if (props_ZImplies == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("=>");
          props_ZImplies = cpb.create();
        }
        return props_ZImplies;
      case LanguageConceptSwitch.ZNot:
        if (props_ZNot == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ZNot");
          props_ZNot = cpb.create();
        }
        return props_ZNot;
      case LanguageConceptSwitch.ZOp:
        if (props_ZOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ZOp = cpb.create();
        }
        return props_ZOp;
      case LanguageConceptSwitch.ZOr:
        if (props_ZOr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("||");
          props_ZOr = cpb.create();
        }
        return props_ZOr;
      case LanguageConceptSwitch.ZXor:
        if (props_ZXor == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("xor");
          props_ZXor = cpb.create();
        }
        return props_ZXor;
    }
    return null;
  }
}
