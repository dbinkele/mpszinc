package org.antlr.zinc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAnnotation = createDescriptorForAnnotation();
  /*package*/ final ConceptDescriptor myConceptArithComplexExpr_1 = createDescriptorForArithComplexExpr_1();
  /*package*/ final ConceptDescriptor myConceptArithComplexExpr_2 = createDescriptorForArithComplexExpr_2();
  /*package*/ final ConceptDescriptor myConceptArithExpr_1 = createDescriptorForArithExpr_1();
  /*package*/ final ConceptDescriptor myConceptArithExpr_2 = createDescriptorForArithExpr_2();
  /*package*/ final ConceptDescriptor myConceptArithExpr_3 = createDescriptorForArithExpr_3();
  /*package*/ final ConceptDescriptor myConceptArithOp2_1 = createDescriptorForArithOp2_1();
  /*package*/ final ConceptDescriptor myConceptArithOp2_2 = createDescriptorForArithOp2_2();
  /*package*/ final ConceptDescriptor myConceptArithOp2_3 = createDescriptorForArithOp2_3();
  /*package*/ final ConceptDescriptor myConceptArithOp2_4 = createDescriptorForArithOp2_4();
  /*package*/ final ConceptDescriptor myConceptArithOp2_5 = createDescriptorForArithOp2_5();
  /*package*/ final ConceptDescriptor myConceptArithOp2_6 = createDescriptorForArithOp2_6();
  /*package*/ final ConceptDescriptor myConceptArithOp_1 = createDescriptorForArithOp_1();
  /*package*/ final ConceptDescriptor myConceptArithOp_2 = createDescriptorForArithOp_2();
  /*package*/ final ConceptDescriptor myConceptArithOp_3 = createDescriptorForArithOp_3();
  /*package*/ final ConceptDescriptor myConceptArithOp_4 = createDescriptorForArithOp_4();
  /*package*/ final ConceptDescriptor myConceptArithOp_5 = createDescriptorForArithOp_5();
  /*package*/ final ConceptDescriptor myConceptArithOp_6 = createDescriptorForArithOp_6();
  /*package*/ final ConceptDescriptor myConceptArithOp_7 = createDescriptorForArithOp_7();
  /*package*/ final ConceptDescriptor myConceptArithOp_8 = createDescriptorForArithOp_8();
  /*package*/ final ConceptDescriptor myConceptArrayaccess_1 = createDescriptorForArrayaccess_1();
  /*package*/ final ConceptDescriptor myConceptArrayaccess_2 = createDescriptorForArrayaccess_2();
  /*package*/ final ConceptDescriptor myConceptBaseConcept = createDescriptorForBaseConcept();
  /*package*/ final ConceptDescriptor myConceptBodyIf = createDescriptorForBodyIf();
  /*package*/ final ConceptDescriptor myConceptBodyIf_block_1_1_1 = createDescriptorForBodyIf_block_1_1_1();
  /*package*/ final ConceptDescriptor myConceptBodyIf_block_1_1_2 = createDescriptorForBodyIf_block_1_1_2();
  /*package*/ final ConceptDescriptor myConceptBoolComplexExpr_1 = createDescriptorForBoolComplexExpr_1();
  /*package*/ final ConceptDescriptor myConceptBoolComplexExpr_2 = createDescriptorForBoolComplexExpr_2();
  /*package*/ final ConceptDescriptor myConceptBoolComplexExpr_3 = createDescriptorForBoolComplexExpr_3();
  /*package*/ final ConceptDescriptor myConceptBoolComplexExpr_block_1_1_1 = createDescriptorForBoolComplexExpr_block_1_1_1();
  /*package*/ final ConceptDescriptor myConceptBoolComplexExpr_block_1_1_2 = createDescriptorForBoolComplexExpr_block_1_1_2();
  /*package*/ final ConceptDescriptor myConceptBoolComplexExpr_block_2_1_1 = createDescriptorForBoolComplexExpr_block_2_1_1();
  /*package*/ final ConceptDescriptor myConceptBoolComplexExpr_block_2_1_2 = createDescriptorForBoolComplexExpr_block_2_1_2();
  /*package*/ final ConceptDescriptor myConceptBoolExpr_1 = createDescriptorForBoolExpr_1();
  /*package*/ final ConceptDescriptor myConceptBoolExpr_2 = createDescriptorForBoolExpr_2();
  /*package*/ final ConceptDescriptor myConceptBoolExpr_3 = createDescriptorForBoolExpr_3();
  /*package*/ final ConceptDescriptor myConceptBoolExpr_4 = createDescriptorForBoolExpr_4();
  /*package*/ final ConceptDescriptor myConceptBoolExpr_block_1_1_1 = createDescriptorForBoolExpr_block_1_1_1();
  /*package*/ final ConceptDescriptor myConceptBoolExpr_block_1_1_2 = createDescriptorForBoolExpr_block_1_1_2();
  /*package*/ final ConceptDescriptor myConceptBoolExpr_block_2_1_1 = createDescriptorForBoolExpr_block_2_1_1();
  /*package*/ final ConceptDescriptor myConceptBoolExpr_block_2_1_2 = createDescriptorForBoolExpr_block_2_1_2();
  /*package*/ final ConceptDescriptor myConceptBoolOp_1 = createDescriptorForBoolOp_1();
  /*package*/ final ConceptDescriptor myConceptBoolOp_2 = createDescriptorForBoolOp_2();
  /*package*/ final ConceptDescriptor myConceptBoolOp_3 = createDescriptorForBoolOp_3();
  /*package*/ final ConceptDescriptor myConceptBoolOp_4 = createDescriptorForBoolOp_4();
  /*package*/ final ConceptDescriptor myConceptBoolOp_5 = createDescriptorForBoolOp_5();
  /*package*/ final ConceptDescriptor myConceptBoolOp_6 = createDescriptorForBoolOp_6();
  /*package*/ final ConceptDescriptor myConceptBoolOp_7 = createDescriptorForBoolOp_7();
  /*package*/ final ConceptDescriptor myConceptBoolOp_8 = createDescriptorForBoolOp_8();
  /*package*/ final ConceptDescriptor myConceptBoolOp_9 = createDescriptorForBoolOp_9();
  /*package*/ final ConceptDescriptor myConceptBoolS = createDescriptorForBoolS();
  /*package*/ final ConceptDescriptor myConceptBoolVal_1 = createDescriptorForBoolVal_1();
  /*package*/ final ConceptDescriptor myConceptBoolVal_2 = createDescriptorForBoolVal_2();
  /*package*/ final ConceptDescriptor myConceptBoolVal_3 = createDescriptorForBoolVal_3();
  /*package*/ final ConceptDescriptor myConceptBoolVal_4 = createDescriptorForBoolVal_4();
  /*package*/ final ConceptDescriptor myConceptBoolVal_5 = createDescriptorForBoolVal_5();
  /*package*/ final ConceptDescriptor myConceptBoolVal_6 = createDescriptorForBoolVal_6();
  /*package*/ final ConceptDescriptor myConceptBoolVal_7 = createDescriptorForBoolVal_7();
  /*package*/ final ConceptDescriptor myConceptBoolVal_8 = createDescriptorForBoolVal_8();
  /*package*/ final ConceptDescriptor myConceptBracketExpr_1 = createDescriptorForBracketExpr_1();
  /*package*/ final ConceptDescriptor myConceptBracketExpr_2 = createDescriptorForBracketExpr_2();
  /*package*/ final ConceptDescriptor myConceptCaseBranch = createDescriptorForCaseBranch();
  /*package*/ final ConceptDescriptor myConceptCaseBranch_block_1_1_1 = createDescriptorForCaseBranch_block_1_1_1();
  /*package*/ final ConceptDescriptor myConceptCaseBranch_block_1_1_2 = createDescriptorForCaseBranch_block_1_1_2();
  /*package*/ final ConceptDescriptor myConceptCaseExpr = createDescriptorForCaseExpr();
  /*package*/ final ConceptDescriptor myConceptCaseExpr_block_1_1 = createDescriptorForCaseExpr_block_1_1();
  /*package*/ final ConceptDescriptor myConceptCommaList_1 = createDescriptorForCommaList_1();
  /*package*/ final ConceptDescriptor myConceptCommaList_block_1_1 = createDescriptorForCommaList_block_1_1();
  /*package*/ final ConceptDescriptor myConceptCommaList_block_1_2 = createDescriptorForCommaList_block_1_2();
  /*package*/ final ConceptDescriptor myConceptConstr_1 = createDescriptorForConstr_1();
  /*package*/ final ConceptDescriptor myConceptConstr_2 = createDescriptorForConstr_2();
  /*package*/ final ConceptDescriptor myConceptConstrainchoice_1 = createDescriptorForConstrainchoice_1();
  /*package*/ final ConceptDescriptor myConceptConstrainchoice_2 = createDescriptorForConstrainchoice_2();
  /*package*/ final ConceptDescriptor myConceptConstrainchoice_3 = createDescriptorForConstrainchoice_3();
  /*package*/ final ConceptDescriptor myConceptConstrainchoice_4 = createDescriptorForConstrainchoice_4();
  /*package*/ final ConceptDescriptor myConceptConstrainchoice_5 = createDescriptorForConstrainchoice_5();
  /*package*/ final ConceptDescriptor myConceptConstraint = createDescriptorForConstraint();
  /*package*/ final ConceptDescriptor myConceptData = createDescriptorForData();
  /*package*/ final ConceptDescriptor myConceptData_block_1_1 = createDescriptorForData_block_1_1();
  /*package*/ final ConceptDescriptor myConceptDecl_1 = createDescriptorForDecl_1();
  /*package*/ final ConceptDescriptor myConceptDecl_2 = createDescriptorForDecl_2();
  /*package*/ final ConceptDescriptor myConceptDimensions = createDescriptorForDimensions();
  /*package*/ final ConceptDescriptor myConceptDimensions_block_1_1_1 = createDescriptorForDimensions_block_1_1_1();
  /*package*/ final ConceptDescriptor myConceptDimensions_block_1_1_2 = createDescriptorForDimensions_block_1_1_2();
  /*package*/ final ConceptDescriptor myConceptDimensions_block_1_2 = createDescriptorForDimensions_block_1_2();
  /*package*/ final ConceptDescriptor myConceptDimensions_block_1_3 = createDescriptorForDimensions_block_1_3();
  /*package*/ final ConceptDescriptor myConceptElseS = createDescriptorForElseS();
  /*package*/ final ConceptDescriptor myConceptElseifS = createDescriptorForElseifS();
  /*package*/ final ConceptDescriptor myConceptEmptyStatement = createDescriptorForEmptyStatement();
  /*package*/ final ConceptDescriptor myConceptExpr_1 = createDescriptorForExpr_1();
  /*package*/ final ConceptDescriptor myConceptExpr_10 = createDescriptorForExpr_10();
  /*package*/ final ConceptDescriptor myConceptExpr_11 = createDescriptorForExpr_11();
  /*package*/ final ConceptDescriptor myConceptExpr_12 = createDescriptorForExpr_12();
  /*package*/ final ConceptDescriptor myConceptExpr_13 = createDescriptorForExpr_13();
  /*package*/ final ConceptDescriptor myConceptExpr_14 = createDescriptorForExpr_14();
  /*package*/ final ConceptDescriptor myConceptExpr_15 = createDescriptorForExpr_15();
  /*package*/ final ConceptDescriptor myConceptExpr_2 = createDescriptorForExpr_2();
  /*package*/ final ConceptDescriptor myConceptExpr_3 = createDescriptorForExpr_3();
  /*package*/ final ConceptDescriptor myConceptExpr_4 = createDescriptorForExpr_4();
  /*package*/ final ConceptDescriptor myConceptExpr_5 = createDescriptorForExpr_5();
  /*package*/ final ConceptDescriptor myConceptExpr_6 = createDescriptorForExpr_6();
  /*package*/ final ConceptDescriptor myConceptExpr_7 = createDescriptorForExpr_7();
  /*package*/ final ConceptDescriptor myConceptExpr_8 = createDescriptorForExpr_8();
  /*package*/ final ConceptDescriptor myConceptExpr_9 = createDescriptorForExpr_9();
  /*package*/ final ConceptDescriptor myConceptExtended = createDescriptorForExtended();
  /*package*/ final ConceptDescriptor myConceptExtended_block_1_1 = createDescriptorForExtended_block_1_1();
  /*package*/ final ConceptDescriptor myConceptExtended_block_1_2 = createDescriptorForExtended_block_1_2();
  /*package*/ final ConceptDescriptor myConceptExtendsmark = createDescriptorForExtendsmark();
  /*package*/ final ConceptDescriptor myConceptFromR_1 = createDescriptorForFromR_1();
  /*package*/ final ConceptDescriptor myConceptFunction = createDescriptorForFunction();
  /*package*/ final ConceptDescriptor myConceptFunction_block_1_1 = createDescriptorForFunction_block_1_1();
  /*package*/ final ConceptDescriptor myConceptFunction_block_1_2 = createDescriptorForFunction_block_1_2();
  /*package*/ final ConceptDescriptor myConceptGuard = createDescriptorForGuard();
  /*package*/ final ConceptDescriptor myConceptGuard_block_1_1 = createDescriptorForGuard_block_1_1();
  /*package*/ final ConceptDescriptor myConceptGuardedList = createDescriptorForGuardedList();
  /*package*/ final ConceptDescriptor myConceptGuardedSet = createDescriptorForGuardedSet();
  /*package*/ final ConceptDescriptor myConceptIArithComplexExpr = createDescriptorForIArithComplexExpr();
  /*package*/ final ConceptDescriptor myConceptIArithExpr = createDescriptorForIArithExpr();
  /*package*/ final ConceptDescriptor myConceptIArithOp = createDescriptorForIArithOp();
  /*package*/ final ConceptDescriptor myConceptIArithOp2 = createDescriptorForIArithOp2();
  /*package*/ final ConceptDescriptor myConceptIArrayaccess = createDescriptorForIArrayaccess();
  /*package*/ final ConceptDescriptor myConceptIBodyIf_block_1_1 = createDescriptorForIBodyIf_block_1_1();
  /*package*/ final ConceptDescriptor myConceptIBoolComplexExpr = createDescriptorForIBoolComplexExpr();
  /*package*/ final ConceptDescriptor myConceptIBoolComplexExpr_block_1_1 = createDescriptorForIBoolComplexExpr_block_1_1();
  /*package*/ final ConceptDescriptor myConceptIBoolComplexExpr_block_2_1 = createDescriptorForIBoolComplexExpr_block_2_1();
  /*package*/ final ConceptDescriptor myConceptIBoolExpr = createDescriptorForIBoolExpr();
  /*package*/ final ConceptDescriptor myConceptIBoolExpr_block_1_1 = createDescriptorForIBoolExpr_block_1_1();
  /*package*/ final ConceptDescriptor myConceptIBoolExpr_block_2_1 = createDescriptorForIBoolExpr_block_2_1();
  /*package*/ final ConceptDescriptor myConceptIBoolOp = createDescriptorForIBoolOp();
  /*package*/ final ConceptDescriptor myConceptIBoolVal = createDescriptorForIBoolVal();
  /*package*/ final ConceptDescriptor myConceptIBracketExpr = createDescriptorForIBracketExpr();
  /*package*/ final ConceptDescriptor myConceptICaseBranch_block_1_1 = createDescriptorForICaseBranch_block_1_1();
  /*package*/ final ConceptDescriptor myConceptICommaList = createDescriptorForICommaList();
  /*package*/ final ConceptDescriptor myConceptIConstr = createDescriptorForIConstr();
  /*package*/ final ConceptDescriptor myConceptIConstrainchoice = createDescriptorForIConstrainchoice();
  /*package*/ final ConceptDescriptor myConceptIDecl = createDescriptorForIDecl();
  /*package*/ final ConceptDescriptor myConceptIDimensions_block_1_1 = createDescriptorForIDimensions_block_1_1();
  /*package*/ final ConceptDescriptor myConceptIExpr = createDescriptorForIExpr();
  /*package*/ final ConceptDescriptor myConceptIFromR = createDescriptorForIFromR();
  /*package*/ final ConceptDescriptor myConceptIInfixOp = createDescriptorForIInfixOp();
  /*package*/ final ConceptDescriptor myConceptIInfixSetOp = createDescriptorForIInfixSetOp();
  /*package*/ final ConceptDescriptor myConceptIInteger = createDescriptorForIInteger();
  /*package*/ final ConceptDescriptor myConceptILetDecl = createDescriptorForILetDecl();
  /*package*/ final ConceptDescriptor myConceptIListExpr = createDescriptorForIListExpr();
  /*package*/ final ConceptDescriptor myConceptIListValue = createDescriptorForIListValue();
  /*package*/ final ConceptDescriptor myConceptIModeAnnotation = createDescriptorForIModeAnnotation();
  /*package*/ final ConceptDescriptor myConceptIOneDimList = createDescriptorForIOneDimList();
  /*package*/ final ConceptDescriptor myConceptIOp = createDescriptorForIOp();
  /*package*/ final ConceptDescriptor myConceptIOpOrID = createDescriptorForIOpOrID();
  /*package*/ final ConceptDescriptor myConceptIOperand = createDescriptorForIOperand();
  /*package*/ final ConceptDescriptor myConceptIOptimize = createDescriptorForIOptimize();
  /*package*/ final ConceptDescriptor myConceptIOutput = createDescriptorForIOutput();
  /*package*/ final ConceptDescriptor myConceptIPardecl = createDescriptorForIPardecl();
  /*package*/ final ConceptDescriptor myConceptIPostExt = createDescriptorForIPostExt();
  /*package*/ final ConceptDescriptor myConceptIPreExt = createDescriptorForIPreExt();
  /*package*/ final ConceptDescriptor myConceptIPredOrUnionExpr_block_1_1 = createDescriptorForIPredOrUnionExpr_block_1_1();
  /*package*/ final ConceptDescriptor myConceptIQualName = createDescriptorForIQualName();
  /*package*/ final ConceptDescriptor myConceptIRange = createDescriptorForIRange();
  /*package*/ final ConceptDescriptor myConceptISetExpr = createDescriptorForISetExpr();
  /*package*/ final ConceptDescriptor myConceptISetVal = createDescriptorForISetVal();
  /*package*/ final ConceptDescriptor myConceptISimpleList = createDescriptorForISimpleList();
  /*package*/ final ConceptDescriptor myConceptISolve_block_1_1 = createDescriptorForISolve_block_1_1();
  /*package*/ final ConceptDescriptor myConceptISolve_block_1_2 = createDescriptorForISolve_block_1_2();
  /*package*/ final ConceptDescriptor myConceptIStat = createDescriptorForIStat();
  /*package*/ final ConceptDescriptor myConceptIStringExpr = createDescriptorForIStringExpr();
  /*package*/ final ConceptDescriptor myConceptIToR = createDescriptorForIToR();
  /*package*/ final ConceptDescriptor myConceptITypename = createDescriptorForITypename();
  /*package*/ final ConceptDescriptor myConceptIVarchoice = createDescriptorForIVarchoice();
  /*package*/ final ConceptDescriptor myConceptIdexpr = createDescriptorForIdexpr();
  /*package*/ final ConceptDescriptor myConceptIfExpr = createDescriptorForIfExpr();
  /*package*/ final ConceptDescriptor myConceptInDecl = createDescriptorForInDecl();
  /*package*/ final ConceptDescriptor myConceptInDecl_block_1_1 = createDescriptorForInDecl_block_1_1();
  /*package*/ final ConceptDescriptor myConceptInclude = createDescriptorForInclude();
  /*package*/ final ConceptDescriptor myConceptInfixOp_1 = createDescriptorForInfixOp_1();
  /*package*/ final ConceptDescriptor myConceptInfixOp_2 = createDescriptorForInfixOp_2();
  /*package*/ final ConceptDescriptor myConceptInfixSetOp_1 = createDescriptorForInfixSetOp_1();
  /*package*/ final ConceptDescriptor myConceptInfixSetOp_2 = createDescriptorForInfixSetOp_2();
  /*package*/ final ConceptDescriptor myConceptInfixSetOp_3 = createDescriptorForInfixSetOp_3();
  /*package*/ final ConceptDescriptor myConceptInit = createDescriptorForInit();
  /*package*/ final ConceptDescriptor myConceptIntS = createDescriptorForIntS();
  /*package*/ final ConceptDescriptor myConceptInteger_1 = createDescriptorForInteger_1();
  /*package*/ final ConceptDescriptor myConceptLetDecl_1 = createDescriptorForLetDecl_1();
  /*package*/ final ConceptDescriptor myConceptLetDecl_2 = createDescriptorForLetDecl_2();
  /*package*/ final ConceptDescriptor myConceptLetExpr = createDescriptorForLetExpr();
  /*package*/ final ConceptDescriptor myConceptLetExpr_block_1_1 = createDescriptorForLetExpr_block_1_1();
  /*package*/ final ConceptDescriptor myConceptListExpr_1 = createDescriptorForListExpr_1();
  /*package*/ final ConceptDescriptor myConceptListExpr_2 = createDescriptorForListExpr_2();
  /*package*/ final ConceptDescriptor myConceptListExpr_3 = createDescriptorForListExpr_3();
  /*package*/ final ConceptDescriptor myConceptListExpr_4 = createDescriptorForListExpr_4();
  /*package*/ final ConceptDescriptor myConceptListExtended = createDescriptorForListExtended();
  /*package*/ final ConceptDescriptor myConceptListExtended_block_1_1 = createDescriptorForListExtended_block_1_1();
  /*package*/ final ConceptDescriptor myConceptListValue_1 = createDescriptorForListValue_1();
  /*package*/ final ConceptDescriptor myConceptListValue_2 = createDescriptorForListValue_2();
  /*package*/ final ConceptDescriptor myConceptListValue_3 = createDescriptorForListValue_3();
  /*package*/ final ConceptDescriptor myConceptListValue_4 = createDescriptorForListValue_4();
  /*package*/ final ConceptDescriptor myConceptListValue_5 = createDescriptorForListValue_5();
  /*package*/ final ConceptDescriptor myConceptMaximize = createDescriptorForMaximize();
  /*package*/ final ConceptDescriptor myConceptMinimize = createDescriptorForMinimize();
  /*package*/ final ConceptDescriptor myConceptMinusExpr = createDescriptorForMinusExpr();
  /*package*/ final ConceptDescriptor myConceptModeAnnotation_1 = createDescriptorForModeAnnotation_1();
  /*package*/ final ConceptDescriptor myConceptModeAnnotation_2 = createDescriptorForModeAnnotation_2();
  /*package*/ final ConceptDescriptor myConceptModeAnnotation_3 = createDescriptorForModeAnnotation_3();
  /*package*/ final ConceptDescriptor myConceptModeAnnotation_4 = createDescriptorForModeAnnotation_4();
  /*package*/ final ConceptDescriptor myConceptModel = createDescriptorForModel();
  /*package*/ final ConceptDescriptor myConceptMultiDimList = createDescriptorForMultiDimList();
  /*package*/ final ConceptDescriptor myConceptMultiDimList_block_1_1 = createDescriptorForMultiDimList_block_1_1();
  /*package*/ final ConceptDescriptor myConceptMultiDimList_block_1_2 = createDescriptorForMultiDimList_block_1_2();
  /*package*/ final ConceptDescriptor myConceptMultiDimList_block_1_3 = createDescriptorForMultiDimList_block_1_3();
  /*package*/ final ConceptDescriptor myConceptNonEmptyListElems = createDescriptorForNonEmptyListElems();
  /*package*/ final ConceptDescriptor myConceptNonEmptyListElems_block_1_1 = createDescriptorForNonEmptyListElems_block_1_1();
  /*package*/ final ConceptDescriptor myConceptNotExpr = createDescriptorForNotExpr();
  /*package*/ final ConceptDescriptor myConceptOneDimList_1 = createDescriptorForOneDimList_1();
  /*package*/ final ConceptDescriptor myConceptOneDimList_2 = createDescriptorForOneDimList_2();
  /*package*/ final ConceptDescriptor myConceptOnesection = createDescriptorForOnesection();
  /*package*/ final ConceptDescriptor myConceptOnesection_block_1_1 = createDescriptorForOnesection_block_1_1();
  /*package*/ final ConceptDescriptor myConceptOnesection_block_1_2 = createDescriptorForOnesection_block_1_2();
  /*package*/ final ConceptDescriptor myConceptOpOrID_1 = createDescriptorForOpOrID_1();
  /*package*/ final ConceptDescriptor myConceptOpOrID_2 = createDescriptorForOpOrID_2();
  /*package*/ final ConceptDescriptor myConceptOp_1 = createDescriptorForOp_1();
  /*package*/ final ConceptDescriptor myConceptOp_2 = createDescriptorForOp_2();
  /*package*/ final ConceptDescriptor myConceptOperand_1 = createDescriptorForOperand_1();
  /*package*/ final ConceptDescriptor myConceptOperand_2 = createDescriptorForOperand_2();
  /*package*/ final ConceptDescriptor myConceptOperand_3 = createDescriptorForOperand_3();
  /*package*/ final ConceptDescriptor myConceptOperand_4 = createDescriptorForOperand_4();
  /*package*/ final ConceptDescriptor myConceptOperand_5 = createDescriptorForOperand_5();
  /*package*/ final ConceptDescriptor myConceptOperand_6 = createDescriptorForOperand_6();
  /*package*/ final ConceptDescriptor myConceptOperand_7 = createDescriptorForOperand_7();
  /*package*/ final ConceptDescriptor myConceptOperand_8 = createDescriptorForOperand_8();
  /*package*/ final ConceptDescriptor myConceptOptimize_1 = createDescriptorForOptimize_1();
  /*package*/ final ConceptDescriptor myConceptOptimize_2 = createDescriptorForOptimize_2();
  /*package*/ final ConceptDescriptor myConceptOutput_1 = createDescriptorForOutput_1();
  /*package*/ final ConceptDescriptor myConceptOutput_2 = createDescriptorForOutput_2();
  /*package*/ final ConceptDescriptor myConceptParDecl = createDescriptorForParDecl();
  /*package*/ final ConceptDescriptor myConceptParameter = createDescriptorForParameter();
  /*package*/ final ConceptDescriptor myConceptParameter_block_1_1 = createDescriptorForParameter_block_1_1();
  /*package*/ final ConceptDescriptor myConceptPararray = createDescriptorForPararray();
  /*package*/ final ConceptDescriptor myConceptPardecl_1 = createDescriptorForPardecl_1();
  /*package*/ final ConceptDescriptor myConceptPardecl_2 = createDescriptorForPardecl_2();
  /*package*/ final ConceptDescriptor myConceptPostExt_1 = createDescriptorForPostExt_1();
  /*package*/ final ConceptDescriptor myConceptPreExt_1 = createDescriptorForPreExt_1();
  /*package*/ final ConceptDescriptor myConceptPredOrUnionExpr = createDescriptorForPredOrUnionExpr();
  /*package*/ final ConceptDescriptor myConceptPredOrUnionExpr_block_1_1_1 = createDescriptorForPredOrUnionExpr_block_1_1_1();
  /*package*/ final ConceptDescriptor myConceptPredOrUnionExpr_block_1_1_2 = createDescriptorForPredOrUnionExpr_block_1_1_2();
  /*package*/ final ConceptDescriptor myConceptPredicate = createDescriptorForPredicate();
  /*package*/ final ConceptDescriptor myConceptPredicate_block_1_1 = createDescriptorForPredicate_block_1_1();
  /*package*/ final ConceptDescriptor myConceptPredicate_block_1_2 = createDescriptorForPredicate_block_1_2();
  /*package*/ final ConceptDescriptor myConceptQualArithOp = createDescriptorForQualArithOp();
  /*package*/ final ConceptDescriptor myConceptQualBoolOp = createDescriptorForQualBoolOp();
  /*package*/ final ConceptDescriptor myConceptQualName_1 = createDescriptorForQualName_1();
  /*package*/ final ConceptDescriptor myConceptQualName_2 = createDescriptorForQualName_2();
  /*package*/ final ConceptDescriptor myConceptQualName_3 = createDescriptorForQualName_3();
  /*package*/ final ConceptDescriptor myConceptRange_1 = createDescriptorForRange_1();
  /*package*/ final ConceptDescriptor myConceptRange_2 = createDescriptorForRange_2();
  /*package*/ final ConceptDescriptor myConceptRbracketExpr = createDescriptorForRbracketExpr();
  /*package*/ final ConceptDescriptor myConceptReal = createDescriptorForReal();
  /*package*/ final ConceptDescriptor myConceptRestS = createDescriptorForRestS();
  /*package*/ final ConceptDescriptor myConceptSatisfy = createDescriptorForSatisfy();
  /*package*/ final ConceptDescriptor myConceptScons = createDescriptorForScons();
  /*package*/ final ConceptDescriptor myConceptSeqS = createDescriptorForSeqS();
  /*package*/ final ConceptDescriptor myConceptSeqS_block_1_1 = createDescriptorForSeqS_block_1_1();
  /*package*/ final ConceptDescriptor myConceptSetExpr_1 = createDescriptorForSetExpr_1();
  /*package*/ final ConceptDescriptor myConceptSetExpr_2 = createDescriptorForSetExpr_2();
  /*package*/ final ConceptDescriptor myConceptSetS = createDescriptorForSetS();
  /*package*/ final ConceptDescriptor myConceptSetVal_1 = createDescriptorForSetVal_1();
  /*package*/ final ConceptDescriptor myConceptSetVal_2 = createDescriptorForSetVal_2();
  /*package*/ final ConceptDescriptor myConceptSetVal_3 = createDescriptorForSetVal_3();
  /*package*/ final ConceptDescriptor myConceptSimpleList_1 = createDescriptorForSimpleList_1();
  /*package*/ final ConceptDescriptor myConceptSimpleList_2 = createDescriptorForSimpleList_2();
  /*package*/ final ConceptDescriptor myConceptSimpleNonEmptyList = createDescriptorForSimpleNonEmptyList();
  /*package*/ final ConceptDescriptor myConceptSimpleNonEmptyList_block_1_1 = createDescriptorForSimpleNonEmptyList_block_1_1();
  /*package*/ final ConceptDescriptor myConceptSolve = createDescriptorForSolve();
  /*package*/ final ConceptDescriptor myConceptSolve_block_1_1_1 = createDescriptorForSolve_block_1_1_1();
  /*package*/ final ConceptDescriptor myConceptSolve_block_1_2_1 = createDescriptorForSolve_block_1_2_1();
  /*package*/ final ConceptDescriptor myConceptSolve_block_1_2_2 = createDescriptorForSolve_block_1_2_2();
  /*package*/ final ConceptDescriptor myConceptStat_1 = createDescriptorForStat_1();
  /*package*/ final ConceptDescriptor myConceptStat_10 = createDescriptorForStat_10();
  /*package*/ final ConceptDescriptor myConceptStat_2 = createDescriptorForStat_2();
  /*package*/ final ConceptDescriptor myConceptStat_3 = createDescriptorForStat_3();
  /*package*/ final ConceptDescriptor myConceptStat_4 = createDescriptorForStat_4();
  /*package*/ final ConceptDescriptor myConceptStat_5 = createDescriptorForStat_5();
  /*package*/ final ConceptDescriptor myConceptStat_6 = createDescriptorForStat_6();
  /*package*/ final ConceptDescriptor myConceptStat_7 = createDescriptorForStat_7();
  /*package*/ final ConceptDescriptor myConceptStat_8 = createDescriptorForStat_8();
  /*package*/ final ConceptDescriptor myConceptStat_9 = createDescriptorForStat_9();
  /*package*/ final ConceptDescriptor myConceptString = createDescriptorForString();
  /*package*/ final ConceptDescriptor myConceptStringExpr_1 = createDescriptorForStringExpr_1();
  /*package*/ final ConceptDescriptor myConceptTcons = createDescriptorForTcons();
  /*package*/ final ConceptDescriptor myConceptTcons_block_1_1 = createDescriptorForTcons_block_1_1();
  /*package*/ final ConceptDescriptor myConceptToR_1 = createDescriptorForToR_1();
  /*package*/ final ConceptDescriptor myConceptTwosections = createDescriptorForTwosections();
  /*package*/ final ConceptDescriptor myConceptTypedata = createDescriptorForTypedata();
  /*package*/ final ConceptDescriptor myConceptTypename_1 = createDescriptorForTypename_1();
  /*package*/ final ConceptDescriptor myConceptTypename_2 = createDescriptorForTypename_2();
  /*package*/ final ConceptDescriptor myConceptTypename_3 = createDescriptorForTypename_3();
  /*package*/ final ConceptDescriptor myConceptTypename_4 = createDescriptorForTypename_4();
  /*package*/ final ConceptDescriptor myConceptTypename_5 = createDescriptorForTypename_5();
  /*package*/ final ConceptDescriptor myConceptTypename_6 = createDescriptorForTypename_6();
  /*package*/ final ConceptDescriptor myConceptTypename_7 = createDescriptorForTypename_7();
  /*package*/ final ConceptDescriptor myConceptTypeset = createDescriptorForTypeset();
  /*package*/ final ConceptDescriptor myConceptVar = createDescriptorForVar();
  /*package*/ final ConceptDescriptor myConceptVarDecl = createDescriptorForVarDecl();
  /*package*/ final ConceptDescriptor myConceptVarDeclItem = createDescriptorForVarDeclItem();
  /*package*/ final ConceptDescriptor myConceptVararray = createDescriptorForVararray();
  /*package*/ final ConceptDescriptor myConceptVarchoice_1 = createDescriptorForVarchoice_1();
  /*package*/ final ConceptDescriptor myConceptVarchoice_2 = createDescriptorForVarchoice_2();
  /*package*/ final ConceptDescriptor myConceptVarchoice_3 = createDescriptorForVarchoice_3();
  /*package*/ final ConceptDescriptor myConceptVardecl_block_1_1_1 = createDescriptorForVardecl_block_1_1_1();
  /*package*/ final ConceptDescriptor myConceptVardecl_block_1_1_2 = createDescriptorForVardecl_block_1_1_2();
  /*package*/ final ConceptDescriptor myConceptVarmark = createDescriptorForVarmark();
  /*package*/ final ConceptDescriptor myConceptWhereCond = createDescriptorForWhereCond();
  /*package*/ final ConceptDescriptor myConceptZBoolType = createDescriptorForZBoolType();
  /*package*/ final ConceptDescriptor myConceptZFloatType = createDescriptorForZFloatType();
  /*package*/ final ConceptDescriptor myConceptZIntType = createDescriptorForZIntType();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeBOOL = new ConstrainedStringDatatypeDescriptorImpl(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38343L, "BOOL", "r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739331", "(true|false)");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeID = new ConstrainedStringDatatypeDescriptorImpl(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL, "ID", "r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739324", "[a-zA-Z]([a-zA-Z0-9'_'])*");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeNAT = new ConstrainedStringDatatypeDescriptorImpl(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f383e4L, "NAT", "r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739492", "([0-9])+");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeSTRING2 = new ConstrainedStringDatatypeDescriptorImpl(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38416L, "STRING2", "r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739542", "\"*\"");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0x6b277d9ad52d416fL, 0xa2091919bd737f50L, "org.iets3.core.expr.simpleTypes");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAnnotation, myConceptArithComplexExpr_1, myConceptArithComplexExpr_2, myConceptArithExpr_1, myConceptArithExpr_2, myConceptArithExpr_3, myConceptArithOp2_1, myConceptArithOp2_2, myConceptArithOp2_3, myConceptArithOp2_4, myConceptArithOp2_5, myConceptArithOp2_6, myConceptArithOp_1, myConceptArithOp_2, myConceptArithOp_3, myConceptArithOp_4, myConceptArithOp_5, myConceptArithOp_6, myConceptArithOp_7, myConceptArithOp_8, myConceptArrayaccess_1, myConceptArrayaccess_2, myConceptBaseConcept, myConceptBodyIf, myConceptBodyIf_block_1_1_1, myConceptBodyIf_block_1_1_2, myConceptBoolComplexExpr_1, myConceptBoolComplexExpr_2, myConceptBoolComplexExpr_3, myConceptBoolComplexExpr_block_1_1_1, myConceptBoolComplexExpr_block_1_1_2, myConceptBoolComplexExpr_block_2_1_1, myConceptBoolComplexExpr_block_2_1_2, myConceptBoolExpr_1, myConceptBoolExpr_2, myConceptBoolExpr_3, myConceptBoolExpr_4, myConceptBoolExpr_block_1_1_1, myConceptBoolExpr_block_1_1_2, myConceptBoolExpr_block_2_1_1, myConceptBoolExpr_block_2_1_2, myConceptBoolOp_1, myConceptBoolOp_2, myConceptBoolOp_3, myConceptBoolOp_4, myConceptBoolOp_5, myConceptBoolOp_6, myConceptBoolOp_7, myConceptBoolOp_8, myConceptBoolOp_9, myConceptBoolS, myConceptBoolVal_1, myConceptBoolVal_2, myConceptBoolVal_3, myConceptBoolVal_4, myConceptBoolVal_5, myConceptBoolVal_6, myConceptBoolVal_7, myConceptBoolVal_8, myConceptBracketExpr_1, myConceptBracketExpr_2, myConceptCaseBranch, myConceptCaseBranch_block_1_1_1, myConceptCaseBranch_block_1_1_2, myConceptCaseExpr, myConceptCaseExpr_block_1_1, myConceptCommaList_1, myConceptCommaList_block_1_1, myConceptCommaList_block_1_2, myConceptConstr_1, myConceptConstr_2, myConceptConstrainchoice_1, myConceptConstrainchoice_2, myConceptConstrainchoice_3, myConceptConstrainchoice_4, myConceptConstrainchoice_5, myConceptConstraint, myConceptData, myConceptData_block_1_1, myConceptDecl_1, myConceptDecl_2, myConceptDimensions, myConceptDimensions_block_1_1_1, myConceptDimensions_block_1_1_2, myConceptDimensions_block_1_2, myConceptDimensions_block_1_3, myConceptElseS, myConceptElseifS, myConceptEmptyStatement, myConceptExpr_1, myConceptExpr_10, myConceptExpr_11, myConceptExpr_12, myConceptExpr_13, myConceptExpr_14, myConceptExpr_15, myConceptExpr_2, myConceptExpr_3, myConceptExpr_4, myConceptExpr_5, myConceptExpr_6, myConceptExpr_7, myConceptExpr_8, myConceptExpr_9, myConceptExtended, myConceptExtended_block_1_1, myConceptExtended_block_1_2, myConceptExtendsmark, myConceptFromR_1, myConceptFunction, myConceptFunction_block_1_1, myConceptFunction_block_1_2, myConceptGuard, myConceptGuard_block_1_1, myConceptGuardedList, myConceptGuardedSet, myConceptIArithComplexExpr, myConceptIArithExpr, myConceptIArithOp, myConceptIArithOp2, myConceptIArrayaccess, myConceptIBodyIf_block_1_1, myConceptIBoolComplexExpr, myConceptIBoolComplexExpr_block_1_1, myConceptIBoolComplexExpr_block_2_1, myConceptIBoolExpr, myConceptIBoolExpr_block_1_1, myConceptIBoolExpr_block_2_1, myConceptIBoolOp, myConceptIBoolVal, myConceptIBracketExpr, myConceptICaseBranch_block_1_1, myConceptICommaList, myConceptIConstr, myConceptIConstrainchoice, myConceptIDecl, myConceptIDimensions_block_1_1, myConceptIExpr, myConceptIFromR, myConceptIInfixOp, myConceptIInfixSetOp, myConceptIInteger, myConceptILetDecl, myConceptIListExpr, myConceptIListValue, myConceptIModeAnnotation, myConceptIOneDimList, myConceptIOp, myConceptIOpOrID, myConceptIOperand, myConceptIOptimize, myConceptIOutput, myConceptIPardecl, myConceptIPostExt, myConceptIPreExt, myConceptIPredOrUnionExpr_block_1_1, myConceptIQualName, myConceptIRange, myConceptISetExpr, myConceptISetVal, myConceptISimpleList, myConceptISolve_block_1_1, myConceptISolve_block_1_2, myConceptIStat, myConceptIStringExpr, myConceptIToR, myConceptITypename, myConceptIVarchoice, myConceptIdexpr, myConceptIfExpr, myConceptInDecl, myConceptInDecl_block_1_1, myConceptInclude, myConceptInfixOp_1, myConceptInfixOp_2, myConceptInfixSetOp_1, myConceptInfixSetOp_2, myConceptInfixSetOp_3, myConceptInit, myConceptIntS, myConceptInteger_1, myConceptLetDecl_1, myConceptLetDecl_2, myConceptLetExpr, myConceptLetExpr_block_1_1, myConceptListExpr_1, myConceptListExpr_2, myConceptListExpr_3, myConceptListExpr_4, myConceptListExtended, myConceptListExtended_block_1_1, myConceptListValue_1, myConceptListValue_2, myConceptListValue_3, myConceptListValue_4, myConceptListValue_5, myConceptMaximize, myConceptMinimize, myConceptMinusExpr, myConceptModeAnnotation_1, myConceptModeAnnotation_2, myConceptModeAnnotation_3, myConceptModeAnnotation_4, myConceptModel, myConceptMultiDimList, myConceptMultiDimList_block_1_1, myConceptMultiDimList_block_1_2, myConceptMultiDimList_block_1_3, myConceptNonEmptyListElems, myConceptNonEmptyListElems_block_1_1, myConceptNotExpr, myConceptOneDimList_1, myConceptOneDimList_2, myConceptOnesection, myConceptOnesection_block_1_1, myConceptOnesection_block_1_2, myConceptOpOrID_1, myConceptOpOrID_2, myConceptOp_1, myConceptOp_2, myConceptOperand_1, myConceptOperand_2, myConceptOperand_3, myConceptOperand_4, myConceptOperand_5, myConceptOperand_6, myConceptOperand_7, myConceptOperand_8, myConceptOptimize_1, myConceptOptimize_2, myConceptOutput_1, myConceptOutput_2, myConceptParDecl, myConceptParameter, myConceptParameter_block_1_1, myConceptPararray, myConceptPardecl_1, myConceptPardecl_2, myConceptPostExt_1, myConceptPreExt_1, myConceptPredOrUnionExpr, myConceptPredOrUnionExpr_block_1_1_1, myConceptPredOrUnionExpr_block_1_1_2, myConceptPredicate, myConceptPredicate_block_1_1, myConceptPredicate_block_1_2, myConceptQualArithOp, myConceptQualBoolOp, myConceptQualName_1, myConceptQualName_2, myConceptQualName_3, myConceptRange_1, myConceptRange_2, myConceptRbracketExpr, myConceptReal, myConceptRestS, myConceptSatisfy, myConceptScons, myConceptSeqS, myConceptSeqS_block_1_1, myConceptSetExpr_1, myConceptSetExpr_2, myConceptSetS, myConceptSetVal_1, myConceptSetVal_2, myConceptSetVal_3, myConceptSimpleList_1, myConceptSimpleList_2, myConceptSimpleNonEmptyList, myConceptSimpleNonEmptyList_block_1_1, myConceptSolve, myConceptSolve_block_1_1_1, myConceptSolve_block_1_2_1, myConceptSolve_block_1_2_2, myConceptStat_1, myConceptStat_10, myConceptStat_2, myConceptStat_3, myConceptStat_4, myConceptStat_5, myConceptStat_6, myConceptStat_7, myConceptStat_8, myConceptStat_9, myConceptString, myConceptStringExpr_1, myConceptTcons, myConceptTcons_block_1_1, myConceptToR_1, myConceptTwosections, myConceptTypedata, myConceptTypename_1, myConceptTypename_2, myConceptTypename_3, myConceptTypename_4, myConceptTypename_5, myConceptTypename_6, myConceptTypename_7, myConceptTypeset, myConceptVar, myConceptVarDecl, myConceptVarDeclItem, myConceptVararray, myConceptVarchoice_1, myConceptVarchoice_2, myConceptVarchoice_3, myConceptVardecl_block_1_1_1, myConceptVardecl_block_1_1_2, myConceptVarmark, myConceptWhereCond, myConceptZBoolType, myConceptZFloatType, myConceptZIntType);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Annotation:
        return myConceptAnnotation;
      case LanguageConceptSwitch.ArithComplexExpr_1:
        return myConceptArithComplexExpr_1;
      case LanguageConceptSwitch.ArithComplexExpr_2:
        return myConceptArithComplexExpr_2;
      case LanguageConceptSwitch.ArithExpr_1:
        return myConceptArithExpr_1;
      case LanguageConceptSwitch.ArithExpr_2:
        return myConceptArithExpr_2;
      case LanguageConceptSwitch.ArithExpr_3:
        return myConceptArithExpr_3;
      case LanguageConceptSwitch.ArithOp2_1:
        return myConceptArithOp2_1;
      case LanguageConceptSwitch.ArithOp2_2:
        return myConceptArithOp2_2;
      case LanguageConceptSwitch.ArithOp2_3:
        return myConceptArithOp2_3;
      case LanguageConceptSwitch.ArithOp2_4:
        return myConceptArithOp2_4;
      case LanguageConceptSwitch.ArithOp2_5:
        return myConceptArithOp2_5;
      case LanguageConceptSwitch.ArithOp2_6:
        return myConceptArithOp2_6;
      case LanguageConceptSwitch.ArithOp_1:
        return myConceptArithOp_1;
      case LanguageConceptSwitch.ArithOp_2:
        return myConceptArithOp_2;
      case LanguageConceptSwitch.ArithOp_3:
        return myConceptArithOp_3;
      case LanguageConceptSwitch.ArithOp_4:
        return myConceptArithOp_4;
      case LanguageConceptSwitch.ArithOp_5:
        return myConceptArithOp_5;
      case LanguageConceptSwitch.ArithOp_6:
        return myConceptArithOp_6;
      case LanguageConceptSwitch.ArithOp_7:
        return myConceptArithOp_7;
      case LanguageConceptSwitch.ArithOp_8:
        return myConceptArithOp_8;
      case LanguageConceptSwitch.Arrayaccess_1:
        return myConceptArrayaccess_1;
      case LanguageConceptSwitch.Arrayaccess_2:
        return myConceptArrayaccess_2;
      case LanguageConceptSwitch.BaseConcept:
        return myConceptBaseConcept;
      case LanguageConceptSwitch.BodyIf:
        return myConceptBodyIf;
      case LanguageConceptSwitch.BodyIf_block_1_1_1:
        return myConceptBodyIf_block_1_1_1;
      case LanguageConceptSwitch.BodyIf_block_1_1_2:
        return myConceptBodyIf_block_1_1_2;
      case LanguageConceptSwitch.BoolComplexExpr_1:
        return myConceptBoolComplexExpr_1;
      case LanguageConceptSwitch.BoolComplexExpr_2:
        return myConceptBoolComplexExpr_2;
      case LanguageConceptSwitch.BoolComplexExpr_3:
        return myConceptBoolComplexExpr_3;
      case LanguageConceptSwitch.BoolComplexExpr_block_1_1_1:
        return myConceptBoolComplexExpr_block_1_1_1;
      case LanguageConceptSwitch.BoolComplexExpr_block_1_1_2:
        return myConceptBoolComplexExpr_block_1_1_2;
      case LanguageConceptSwitch.BoolComplexExpr_block_2_1_1:
        return myConceptBoolComplexExpr_block_2_1_1;
      case LanguageConceptSwitch.BoolComplexExpr_block_2_1_2:
        return myConceptBoolComplexExpr_block_2_1_2;
      case LanguageConceptSwitch.BoolExpr_1:
        return myConceptBoolExpr_1;
      case LanguageConceptSwitch.BoolExpr_2:
        return myConceptBoolExpr_2;
      case LanguageConceptSwitch.BoolExpr_3:
        return myConceptBoolExpr_3;
      case LanguageConceptSwitch.BoolExpr_4:
        return myConceptBoolExpr_4;
      case LanguageConceptSwitch.BoolExpr_block_1_1_1:
        return myConceptBoolExpr_block_1_1_1;
      case LanguageConceptSwitch.BoolExpr_block_1_1_2:
        return myConceptBoolExpr_block_1_1_2;
      case LanguageConceptSwitch.BoolExpr_block_2_1_1:
        return myConceptBoolExpr_block_2_1_1;
      case LanguageConceptSwitch.BoolExpr_block_2_1_2:
        return myConceptBoolExpr_block_2_1_2;
      case LanguageConceptSwitch.BoolOp_1:
        return myConceptBoolOp_1;
      case LanguageConceptSwitch.BoolOp_2:
        return myConceptBoolOp_2;
      case LanguageConceptSwitch.BoolOp_3:
        return myConceptBoolOp_3;
      case LanguageConceptSwitch.BoolOp_4:
        return myConceptBoolOp_4;
      case LanguageConceptSwitch.BoolOp_5:
        return myConceptBoolOp_5;
      case LanguageConceptSwitch.BoolOp_6:
        return myConceptBoolOp_6;
      case LanguageConceptSwitch.BoolOp_7:
        return myConceptBoolOp_7;
      case LanguageConceptSwitch.BoolOp_8:
        return myConceptBoolOp_8;
      case LanguageConceptSwitch.BoolOp_9:
        return myConceptBoolOp_9;
      case LanguageConceptSwitch.BoolS:
        return myConceptBoolS;
      case LanguageConceptSwitch.BoolVal_1:
        return myConceptBoolVal_1;
      case LanguageConceptSwitch.BoolVal_2:
        return myConceptBoolVal_2;
      case LanguageConceptSwitch.BoolVal_3:
        return myConceptBoolVal_3;
      case LanguageConceptSwitch.BoolVal_4:
        return myConceptBoolVal_4;
      case LanguageConceptSwitch.BoolVal_5:
        return myConceptBoolVal_5;
      case LanguageConceptSwitch.BoolVal_6:
        return myConceptBoolVal_6;
      case LanguageConceptSwitch.BoolVal_7:
        return myConceptBoolVal_7;
      case LanguageConceptSwitch.BoolVal_8:
        return myConceptBoolVal_8;
      case LanguageConceptSwitch.BracketExpr_1:
        return myConceptBracketExpr_1;
      case LanguageConceptSwitch.BracketExpr_2:
        return myConceptBracketExpr_2;
      case LanguageConceptSwitch.CaseBranch:
        return myConceptCaseBranch;
      case LanguageConceptSwitch.CaseBranch_block_1_1_1:
        return myConceptCaseBranch_block_1_1_1;
      case LanguageConceptSwitch.CaseBranch_block_1_1_2:
        return myConceptCaseBranch_block_1_1_2;
      case LanguageConceptSwitch.CaseExpr:
        return myConceptCaseExpr;
      case LanguageConceptSwitch.CaseExpr_block_1_1:
        return myConceptCaseExpr_block_1_1;
      case LanguageConceptSwitch.CommaList_1:
        return myConceptCommaList_1;
      case LanguageConceptSwitch.CommaList_block_1_1:
        return myConceptCommaList_block_1_1;
      case LanguageConceptSwitch.CommaList_block_1_2:
        return myConceptCommaList_block_1_2;
      case LanguageConceptSwitch.Constr_1:
        return myConceptConstr_1;
      case LanguageConceptSwitch.Constr_2:
        return myConceptConstr_2;
      case LanguageConceptSwitch.Constrainchoice_1:
        return myConceptConstrainchoice_1;
      case LanguageConceptSwitch.Constrainchoice_2:
        return myConceptConstrainchoice_2;
      case LanguageConceptSwitch.Constrainchoice_3:
        return myConceptConstrainchoice_3;
      case LanguageConceptSwitch.Constrainchoice_4:
        return myConceptConstrainchoice_4;
      case LanguageConceptSwitch.Constrainchoice_5:
        return myConceptConstrainchoice_5;
      case LanguageConceptSwitch.Constraint:
        return myConceptConstraint;
      case LanguageConceptSwitch.Data:
        return myConceptData;
      case LanguageConceptSwitch.Data_block_1_1:
        return myConceptData_block_1_1;
      case LanguageConceptSwitch.Decl_1:
        return myConceptDecl_1;
      case LanguageConceptSwitch.Decl_2:
        return myConceptDecl_2;
      case LanguageConceptSwitch.Dimensions:
        return myConceptDimensions;
      case LanguageConceptSwitch.Dimensions_block_1_1_1:
        return myConceptDimensions_block_1_1_1;
      case LanguageConceptSwitch.Dimensions_block_1_1_2:
        return myConceptDimensions_block_1_1_2;
      case LanguageConceptSwitch.Dimensions_block_1_2:
        return myConceptDimensions_block_1_2;
      case LanguageConceptSwitch.Dimensions_block_1_3:
        return myConceptDimensions_block_1_3;
      case LanguageConceptSwitch.ElseS:
        return myConceptElseS;
      case LanguageConceptSwitch.ElseifS:
        return myConceptElseifS;
      case LanguageConceptSwitch.EmptyStatement:
        return myConceptEmptyStatement;
      case LanguageConceptSwitch.Expr_1:
        return myConceptExpr_1;
      case LanguageConceptSwitch.Expr_10:
        return myConceptExpr_10;
      case LanguageConceptSwitch.Expr_11:
        return myConceptExpr_11;
      case LanguageConceptSwitch.Expr_12:
        return myConceptExpr_12;
      case LanguageConceptSwitch.Expr_13:
        return myConceptExpr_13;
      case LanguageConceptSwitch.Expr_14:
        return myConceptExpr_14;
      case LanguageConceptSwitch.Expr_15:
        return myConceptExpr_15;
      case LanguageConceptSwitch.Expr_2:
        return myConceptExpr_2;
      case LanguageConceptSwitch.Expr_3:
        return myConceptExpr_3;
      case LanguageConceptSwitch.Expr_4:
        return myConceptExpr_4;
      case LanguageConceptSwitch.Expr_5:
        return myConceptExpr_5;
      case LanguageConceptSwitch.Expr_6:
        return myConceptExpr_6;
      case LanguageConceptSwitch.Expr_7:
        return myConceptExpr_7;
      case LanguageConceptSwitch.Expr_8:
        return myConceptExpr_8;
      case LanguageConceptSwitch.Expr_9:
        return myConceptExpr_9;
      case LanguageConceptSwitch.Extended:
        return myConceptExtended;
      case LanguageConceptSwitch.Extended_block_1_1:
        return myConceptExtended_block_1_1;
      case LanguageConceptSwitch.Extended_block_1_2:
        return myConceptExtended_block_1_2;
      case LanguageConceptSwitch.Extendsmark:
        return myConceptExtendsmark;
      case LanguageConceptSwitch.FromR_1:
        return myConceptFromR_1;
      case LanguageConceptSwitch.Function:
        return myConceptFunction;
      case LanguageConceptSwitch.Function_block_1_1:
        return myConceptFunction_block_1_1;
      case LanguageConceptSwitch.Function_block_1_2:
        return myConceptFunction_block_1_2;
      case LanguageConceptSwitch.Guard:
        return myConceptGuard;
      case LanguageConceptSwitch.Guard_block_1_1:
        return myConceptGuard_block_1_1;
      case LanguageConceptSwitch.GuardedList:
        return myConceptGuardedList;
      case LanguageConceptSwitch.GuardedSet:
        return myConceptGuardedSet;
      case LanguageConceptSwitch.IArithComplexExpr:
        return myConceptIArithComplexExpr;
      case LanguageConceptSwitch.IArithExpr:
        return myConceptIArithExpr;
      case LanguageConceptSwitch.IArithOp:
        return myConceptIArithOp;
      case LanguageConceptSwitch.IArithOp2:
        return myConceptIArithOp2;
      case LanguageConceptSwitch.IArrayaccess:
        return myConceptIArrayaccess;
      case LanguageConceptSwitch.IBodyIf_block_1_1:
        return myConceptIBodyIf_block_1_1;
      case LanguageConceptSwitch.IBoolComplexExpr:
        return myConceptIBoolComplexExpr;
      case LanguageConceptSwitch.IBoolComplexExpr_block_1_1:
        return myConceptIBoolComplexExpr_block_1_1;
      case LanguageConceptSwitch.IBoolComplexExpr_block_2_1:
        return myConceptIBoolComplexExpr_block_2_1;
      case LanguageConceptSwitch.IBoolExpr:
        return myConceptIBoolExpr;
      case LanguageConceptSwitch.IBoolExpr_block_1_1:
        return myConceptIBoolExpr_block_1_1;
      case LanguageConceptSwitch.IBoolExpr_block_2_1:
        return myConceptIBoolExpr_block_2_1;
      case LanguageConceptSwitch.IBoolOp:
        return myConceptIBoolOp;
      case LanguageConceptSwitch.IBoolVal:
        return myConceptIBoolVal;
      case LanguageConceptSwitch.IBracketExpr:
        return myConceptIBracketExpr;
      case LanguageConceptSwitch.ICaseBranch_block_1_1:
        return myConceptICaseBranch_block_1_1;
      case LanguageConceptSwitch.ICommaList:
        return myConceptICommaList;
      case LanguageConceptSwitch.IConstr:
        return myConceptIConstr;
      case LanguageConceptSwitch.IConstrainchoice:
        return myConceptIConstrainchoice;
      case LanguageConceptSwitch.IDecl:
        return myConceptIDecl;
      case LanguageConceptSwitch.IDimensions_block_1_1:
        return myConceptIDimensions_block_1_1;
      case LanguageConceptSwitch.IExpr:
        return myConceptIExpr;
      case LanguageConceptSwitch.IFromR:
        return myConceptIFromR;
      case LanguageConceptSwitch.IInfixOp:
        return myConceptIInfixOp;
      case LanguageConceptSwitch.IInfixSetOp:
        return myConceptIInfixSetOp;
      case LanguageConceptSwitch.IInteger:
        return myConceptIInteger;
      case LanguageConceptSwitch.ILetDecl:
        return myConceptILetDecl;
      case LanguageConceptSwitch.IListExpr:
        return myConceptIListExpr;
      case LanguageConceptSwitch.IListValue:
        return myConceptIListValue;
      case LanguageConceptSwitch.IModeAnnotation:
        return myConceptIModeAnnotation;
      case LanguageConceptSwitch.IOneDimList:
        return myConceptIOneDimList;
      case LanguageConceptSwitch.IOp:
        return myConceptIOp;
      case LanguageConceptSwitch.IOpOrID:
        return myConceptIOpOrID;
      case LanguageConceptSwitch.IOperand:
        return myConceptIOperand;
      case LanguageConceptSwitch.IOptimize:
        return myConceptIOptimize;
      case LanguageConceptSwitch.IOutput:
        return myConceptIOutput;
      case LanguageConceptSwitch.IPardecl:
        return myConceptIPardecl;
      case LanguageConceptSwitch.IPostExt:
        return myConceptIPostExt;
      case LanguageConceptSwitch.IPreExt:
        return myConceptIPreExt;
      case LanguageConceptSwitch.IPredOrUnionExpr_block_1_1:
        return myConceptIPredOrUnionExpr_block_1_1;
      case LanguageConceptSwitch.IQualName:
        return myConceptIQualName;
      case LanguageConceptSwitch.IRange:
        return myConceptIRange;
      case LanguageConceptSwitch.ISetExpr:
        return myConceptISetExpr;
      case LanguageConceptSwitch.ISetVal:
        return myConceptISetVal;
      case LanguageConceptSwitch.ISimpleList:
        return myConceptISimpleList;
      case LanguageConceptSwitch.ISolve_block_1_1:
        return myConceptISolve_block_1_1;
      case LanguageConceptSwitch.ISolve_block_1_2:
        return myConceptISolve_block_1_2;
      case LanguageConceptSwitch.IStat:
        return myConceptIStat;
      case LanguageConceptSwitch.IStringExpr:
        return myConceptIStringExpr;
      case LanguageConceptSwitch.IToR:
        return myConceptIToR;
      case LanguageConceptSwitch.ITypename:
        return myConceptITypename;
      case LanguageConceptSwitch.IVarchoice:
        return myConceptIVarchoice;
      case LanguageConceptSwitch.Idexpr:
        return myConceptIdexpr;
      case LanguageConceptSwitch.IfExpr:
        return myConceptIfExpr;
      case LanguageConceptSwitch.InDecl:
        return myConceptInDecl;
      case LanguageConceptSwitch.InDecl_block_1_1:
        return myConceptInDecl_block_1_1;
      case LanguageConceptSwitch.Include:
        return myConceptInclude;
      case LanguageConceptSwitch.InfixOp_1:
        return myConceptInfixOp_1;
      case LanguageConceptSwitch.InfixOp_2:
        return myConceptInfixOp_2;
      case LanguageConceptSwitch.InfixSetOp_1:
        return myConceptInfixSetOp_1;
      case LanguageConceptSwitch.InfixSetOp_2:
        return myConceptInfixSetOp_2;
      case LanguageConceptSwitch.InfixSetOp_3:
        return myConceptInfixSetOp_3;
      case LanguageConceptSwitch.Init:
        return myConceptInit;
      case LanguageConceptSwitch.IntS:
        return myConceptIntS;
      case LanguageConceptSwitch.Integer_1:
        return myConceptInteger_1;
      case LanguageConceptSwitch.LetDecl_1:
        return myConceptLetDecl_1;
      case LanguageConceptSwitch.LetDecl_2:
        return myConceptLetDecl_2;
      case LanguageConceptSwitch.LetExpr:
        return myConceptLetExpr;
      case LanguageConceptSwitch.LetExpr_block_1_1:
        return myConceptLetExpr_block_1_1;
      case LanguageConceptSwitch.ListExpr_1:
        return myConceptListExpr_1;
      case LanguageConceptSwitch.ListExpr_2:
        return myConceptListExpr_2;
      case LanguageConceptSwitch.ListExpr_3:
        return myConceptListExpr_3;
      case LanguageConceptSwitch.ListExpr_4:
        return myConceptListExpr_4;
      case LanguageConceptSwitch.ListExtended:
        return myConceptListExtended;
      case LanguageConceptSwitch.ListExtended_block_1_1:
        return myConceptListExtended_block_1_1;
      case LanguageConceptSwitch.ListValue_1:
        return myConceptListValue_1;
      case LanguageConceptSwitch.ListValue_2:
        return myConceptListValue_2;
      case LanguageConceptSwitch.ListValue_3:
        return myConceptListValue_3;
      case LanguageConceptSwitch.ListValue_4:
        return myConceptListValue_4;
      case LanguageConceptSwitch.ListValue_5:
        return myConceptListValue_5;
      case LanguageConceptSwitch.Maximize:
        return myConceptMaximize;
      case LanguageConceptSwitch.Minimize:
        return myConceptMinimize;
      case LanguageConceptSwitch.MinusExpr:
        return myConceptMinusExpr;
      case LanguageConceptSwitch.ModeAnnotation_1:
        return myConceptModeAnnotation_1;
      case LanguageConceptSwitch.ModeAnnotation_2:
        return myConceptModeAnnotation_2;
      case LanguageConceptSwitch.ModeAnnotation_3:
        return myConceptModeAnnotation_3;
      case LanguageConceptSwitch.ModeAnnotation_4:
        return myConceptModeAnnotation_4;
      case LanguageConceptSwitch.Model:
        return myConceptModel;
      case LanguageConceptSwitch.MultiDimList:
        return myConceptMultiDimList;
      case LanguageConceptSwitch.MultiDimList_block_1_1:
        return myConceptMultiDimList_block_1_1;
      case LanguageConceptSwitch.MultiDimList_block_1_2:
        return myConceptMultiDimList_block_1_2;
      case LanguageConceptSwitch.MultiDimList_block_1_3:
        return myConceptMultiDimList_block_1_3;
      case LanguageConceptSwitch.NonEmptyListElems:
        return myConceptNonEmptyListElems;
      case LanguageConceptSwitch.NonEmptyListElems_block_1_1:
        return myConceptNonEmptyListElems_block_1_1;
      case LanguageConceptSwitch.NotExpr:
        return myConceptNotExpr;
      case LanguageConceptSwitch.OneDimList_1:
        return myConceptOneDimList_1;
      case LanguageConceptSwitch.OneDimList_2:
        return myConceptOneDimList_2;
      case LanguageConceptSwitch.Onesection:
        return myConceptOnesection;
      case LanguageConceptSwitch.Onesection_block_1_1:
        return myConceptOnesection_block_1_1;
      case LanguageConceptSwitch.Onesection_block_1_2:
        return myConceptOnesection_block_1_2;
      case LanguageConceptSwitch.OpOrID_1:
        return myConceptOpOrID_1;
      case LanguageConceptSwitch.OpOrID_2:
        return myConceptOpOrID_2;
      case LanguageConceptSwitch.Op_1:
        return myConceptOp_1;
      case LanguageConceptSwitch.Op_2:
        return myConceptOp_2;
      case LanguageConceptSwitch.Operand_1:
        return myConceptOperand_1;
      case LanguageConceptSwitch.Operand_2:
        return myConceptOperand_2;
      case LanguageConceptSwitch.Operand_3:
        return myConceptOperand_3;
      case LanguageConceptSwitch.Operand_4:
        return myConceptOperand_4;
      case LanguageConceptSwitch.Operand_5:
        return myConceptOperand_5;
      case LanguageConceptSwitch.Operand_6:
        return myConceptOperand_6;
      case LanguageConceptSwitch.Operand_7:
        return myConceptOperand_7;
      case LanguageConceptSwitch.Operand_8:
        return myConceptOperand_8;
      case LanguageConceptSwitch.Optimize_1:
        return myConceptOptimize_1;
      case LanguageConceptSwitch.Optimize_2:
        return myConceptOptimize_2;
      case LanguageConceptSwitch.Output_1:
        return myConceptOutput_1;
      case LanguageConceptSwitch.Output_2:
        return myConceptOutput_2;
      case LanguageConceptSwitch.ParDecl:
        return myConceptParDecl;
      case LanguageConceptSwitch.Parameter:
        return myConceptParameter;
      case LanguageConceptSwitch.Parameter_block_1_1:
        return myConceptParameter_block_1_1;
      case LanguageConceptSwitch.Pararray:
        return myConceptPararray;
      case LanguageConceptSwitch.Pardecl_1:
        return myConceptPardecl_1;
      case LanguageConceptSwitch.Pardecl_2:
        return myConceptPardecl_2;
      case LanguageConceptSwitch.PostExt_1:
        return myConceptPostExt_1;
      case LanguageConceptSwitch.PreExt_1:
        return myConceptPreExt_1;
      case LanguageConceptSwitch.PredOrUnionExpr:
        return myConceptPredOrUnionExpr;
      case LanguageConceptSwitch.PredOrUnionExpr_block_1_1_1:
        return myConceptPredOrUnionExpr_block_1_1_1;
      case LanguageConceptSwitch.PredOrUnionExpr_block_1_1_2:
        return myConceptPredOrUnionExpr_block_1_1_2;
      case LanguageConceptSwitch.Predicate:
        return myConceptPredicate;
      case LanguageConceptSwitch.Predicate_block_1_1:
        return myConceptPredicate_block_1_1;
      case LanguageConceptSwitch.Predicate_block_1_2:
        return myConceptPredicate_block_1_2;
      case LanguageConceptSwitch.QualArithOp:
        return myConceptQualArithOp;
      case LanguageConceptSwitch.QualBoolOp:
        return myConceptQualBoolOp;
      case LanguageConceptSwitch.QualName_1:
        return myConceptQualName_1;
      case LanguageConceptSwitch.QualName_2:
        return myConceptQualName_2;
      case LanguageConceptSwitch.QualName_3:
        return myConceptQualName_3;
      case LanguageConceptSwitch.Range_1:
        return myConceptRange_1;
      case LanguageConceptSwitch.Range_2:
        return myConceptRange_2;
      case LanguageConceptSwitch.RbracketExpr:
        return myConceptRbracketExpr;
      case LanguageConceptSwitch.Real:
        return myConceptReal;
      case LanguageConceptSwitch.RestS:
        return myConceptRestS;
      case LanguageConceptSwitch.Satisfy:
        return myConceptSatisfy;
      case LanguageConceptSwitch.Scons:
        return myConceptScons;
      case LanguageConceptSwitch.SeqS:
        return myConceptSeqS;
      case LanguageConceptSwitch.SeqS_block_1_1:
        return myConceptSeqS_block_1_1;
      case LanguageConceptSwitch.SetExpr_1:
        return myConceptSetExpr_1;
      case LanguageConceptSwitch.SetExpr_2:
        return myConceptSetExpr_2;
      case LanguageConceptSwitch.SetS:
        return myConceptSetS;
      case LanguageConceptSwitch.SetVal_1:
        return myConceptSetVal_1;
      case LanguageConceptSwitch.SetVal_2:
        return myConceptSetVal_2;
      case LanguageConceptSwitch.SetVal_3:
        return myConceptSetVal_3;
      case LanguageConceptSwitch.SimpleList_1:
        return myConceptSimpleList_1;
      case LanguageConceptSwitch.SimpleList_2:
        return myConceptSimpleList_2;
      case LanguageConceptSwitch.SimpleNonEmptyList:
        return myConceptSimpleNonEmptyList;
      case LanguageConceptSwitch.SimpleNonEmptyList_block_1_1:
        return myConceptSimpleNonEmptyList_block_1_1;
      case LanguageConceptSwitch.Solve:
        return myConceptSolve;
      case LanguageConceptSwitch.Solve_block_1_1_1:
        return myConceptSolve_block_1_1_1;
      case LanguageConceptSwitch.Solve_block_1_2_1:
        return myConceptSolve_block_1_2_1;
      case LanguageConceptSwitch.Solve_block_1_2_2:
        return myConceptSolve_block_1_2_2;
      case LanguageConceptSwitch.Stat_1:
        return myConceptStat_1;
      case LanguageConceptSwitch.Stat_10:
        return myConceptStat_10;
      case LanguageConceptSwitch.Stat_2:
        return myConceptStat_2;
      case LanguageConceptSwitch.Stat_3:
        return myConceptStat_3;
      case LanguageConceptSwitch.Stat_4:
        return myConceptStat_4;
      case LanguageConceptSwitch.Stat_5:
        return myConceptStat_5;
      case LanguageConceptSwitch.Stat_6:
        return myConceptStat_6;
      case LanguageConceptSwitch.Stat_7:
        return myConceptStat_7;
      case LanguageConceptSwitch.Stat_8:
        return myConceptStat_8;
      case LanguageConceptSwitch.Stat_9:
        return myConceptStat_9;
      case LanguageConceptSwitch.String:
        return myConceptString;
      case LanguageConceptSwitch.StringExpr_1:
        return myConceptStringExpr_1;
      case LanguageConceptSwitch.Tcons:
        return myConceptTcons;
      case LanguageConceptSwitch.Tcons_block_1_1:
        return myConceptTcons_block_1_1;
      case LanguageConceptSwitch.ToR_1:
        return myConceptToR_1;
      case LanguageConceptSwitch.Twosections:
        return myConceptTwosections;
      case LanguageConceptSwitch.Typedata:
        return myConceptTypedata;
      case LanguageConceptSwitch.Typename_1:
        return myConceptTypename_1;
      case LanguageConceptSwitch.Typename_2:
        return myConceptTypename_2;
      case LanguageConceptSwitch.Typename_3:
        return myConceptTypename_3;
      case LanguageConceptSwitch.Typename_4:
        return myConceptTypename_4;
      case LanguageConceptSwitch.Typename_5:
        return myConceptTypename_5;
      case LanguageConceptSwitch.Typename_6:
        return myConceptTypename_6;
      case LanguageConceptSwitch.Typename_7:
        return myConceptTypename_7;
      case LanguageConceptSwitch.Typeset:
        return myConceptTypeset;
      case LanguageConceptSwitch.Var:
        return myConceptVar;
      case LanguageConceptSwitch.VarDecl:
        return myConceptVarDecl;
      case LanguageConceptSwitch.VarDeclItem:
        return myConceptVarDeclItem;
      case LanguageConceptSwitch.Vararray:
        return myConceptVararray;
      case LanguageConceptSwitch.Varchoice_1:
        return myConceptVarchoice_1;
      case LanguageConceptSwitch.Varchoice_2:
        return myConceptVarchoice_2;
      case LanguageConceptSwitch.Varchoice_3:
        return myConceptVarchoice_3;
      case LanguageConceptSwitch.Vardecl_block_1_1_1:
        return myConceptVardecl_block_1_1_1;
      case LanguageConceptSwitch.Vardecl_block_1_1_2:
        return myConceptVardecl_block_1_1_2;
      case LanguageConceptSwitch.Varmark:
        return myConceptVarmark;
      case LanguageConceptSwitch.WhereCond:
        return myConceptWhereCond;
      case LanguageConceptSwitch.ZBoolType:
        return myConceptZBoolType;
      case LanguageConceptSwitch.ZFloatType:
        return myConceptZFloatType;
      case LanguageConceptSwitch.ZIntType:
        return myConceptZIntType;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myCSDatatypeBOOL, myCSDatatypeID, myCSDatatypeNAT, myCSDatatypeSTRING2);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Annotation", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382bbL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739103");
    b.version(2);
    b.aggregate("ModeAnnotation_1", 0x2656959549f3839fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e6L).optional(false).ordered(true).multiple(false).origin("2762559889861739423").done();
    b.alias("::");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithComplexExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithComplexExpr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38256L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739094");
    b.version(2);
    b.aggregate("MinusExpr_1", 0x2656959549f38395L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820dL).optional(false).ordered(true).multiple(false).origin("2762559889861739413").done();
    b.alias("Minusexpr arithcomplexexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithComplexExpr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithComplexExpr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38257L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38255L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739095");
    b.version(2);
    b.aggregate("ArithExpr_1", 0x2656959549f38396L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739414").done();
    b.aggregate("ArithOp2_2", 0x2656959549f38397L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L).optional(false).ordered(true).multiple(false).origin("2762559889861739415").done();
    b.aggregate("ArithExpr_3", 0x2656959549f38398L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739416").done();
    b.alias("ArithComplexExpr_2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithExpr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382afL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739183");
    b.version(2);
    b.aggregate("MinusExpr_1", 0x2656959549f383efL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820dL).optional(false).ordered(true).multiple(false).origin("2762559889861739503").done();
    b.alias("Minusexpr arithexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithExpr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithExpr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b0L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739184");
    b.version(2);
    b.aggregate("ArithExpr_1", 0x2656959549f383f0L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739504").done();
    b.aggregate("ArithOp2_2", 0x2656959549f383f1L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L).optional(false).ordered(true).multiple(false).origin("2762559889861739505").done();
    b.aggregate("ArithExpr_3", 0x2656959549f383f2L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739506").done();
    b.alias("ArithExpr_2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithExpr_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithExpr_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b1L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739185");
    b.version(2);
    b.aggregate("Operand_1", 0x2656959549f383f3L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL).optional(false).ordered(true).multiple(false).origin("2762559889861739507").done();
    b.alias("Operand arithexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp2_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp2_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c9L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739209");
    b.version(2);
    b.alias("*");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp2_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp2_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382caL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739210");
    b.version(2);
    b.alias("/");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp2_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp2_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cbL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739211");
    b.version(2);
    b.alias("div");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp2_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp2_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382ccL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739212");
    b.version(2);
    b.alias("mod");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp2_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp2_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cdL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739213");
    b.version(2);
    b.alias("+");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp2_6() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp2_6", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382ceL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739214");
    b.version(2);
    b.alias("-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739023");
    b.version(2);
    b.alias("<");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38210L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739024");
    b.version(2);
    b.alias(">");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38211L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739025");
    b.version(2);
    b.alias(">=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38212L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739026");
    b.version(2);
    b.alias("<=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38213L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739027");
    b.version(2);
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp_6() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp_6", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38214L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739028");
    b.version(2);
    b.alias("==");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp_7() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp_7", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38215L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739029");
    b.version(2);
    b.alias("!=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithOp_8() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ArithOp_8", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38216L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739030");
    b.version(2);
    b.alias("in");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayaccess_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Arrayaccess_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38307L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38306L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38328L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739271");
    b.version(2);
    b.property("ID_1", 0x2656959549f3843aL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739578").done();
    b.aggregate("SimpleNonEmptyList_1", 0x2656959549f3843bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38225L).optional(false).ordered(true).multiple(false).origin("2762559889861739579").done();
    b.alias("Arrayaccess_1");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayaccess_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Arrayaccess_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38308L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38306L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38328L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739272");
    b.version(2);
    b.aggregate("SimpleNonEmptyList_1", 0x2656959549f3843cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38225L).optional(false).ordered(true).multiple(false).origin("2762559889861739580").done();
    b.aggregate("SimpleNonEmptyList_2", 0x2656959549f3843dL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38225L).optional(false).ordered(true).multiple(false).origin("2762559889861739581").done();
    b.alias("Arrayaccess_2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.class_(false, true, false);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861738998");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBodyIf() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BodyIf", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f5L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739253");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38427L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739559").done();
    b.aggregate("Expr_2", 0x2656959549f38428L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739560").done();
    b.aggregate("BodyIf_block_1_1_3", 0x2656959549f38429L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829cL).optional(false).ordered(true).multiple(false).origin("2762559889861739561").done();
    b.alias("then");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBodyIf_block_1_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BodyIf_block_1_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739165");
    b.version(2);
    b.aggregate("ElseS_1", 0x2656959549f383daL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3832eL).optional(false).ordered(true).multiple(false).origin("2762559889861739482").done();
    b.alias("Elses");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBodyIf_block_1_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BodyIf_block_1_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739166");
    b.version(2);
    b.aggregate("ElseifS_1", 0x2656959549f383dbL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38259L).optional(false).ordered(true).multiple(false).origin("2762559889861739483").done();
    b.alias("Elseifs");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolComplexExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolComplexExpr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f8L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f7L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739000");
    b.version(2);
    b.aggregate("BoolExpr_1", 0x2656959549f38330L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L).optional(false).ordered(true).multiple(false).origin("2762559889861739312").done();
    b.aggregate("BoolComplexExpr_block_1_1_2", 0x2656959549f38331L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L).optional(false).ordered(true).multiple(false).origin("2762559889861739313").done();
    b.aggregate("BoolExpr_3", 0x2656959549f38332L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L).optional(false).ordered(true).multiple(false).origin("2762559889861739314").done();
    b.alias("BoolComplexExpr_1");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolComplexExpr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolComplexExpr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f9L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f7L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739001");
    b.version(2);
    b.aggregate("ArithExpr_1", 0x2656959549f38333L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739315").done();
    b.aggregate("BoolComplexExpr_block_2_1_2", 0x2656959549f38334L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL).optional(false).ordered(true).multiple(false).origin("2762559889861739316").done();
    b.aggregate("ArithExpr_3", 0x2656959549f38335L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739317").done();
    b.alias("BoolComplexExpr_2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolComplexExpr_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolComplexExpr_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381faL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739002");
    b.version(2);
    b.aggregate("NotExpr_1", 0x2656959549f38336L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d8L).optional(false).ordered(true).multiple(false).origin("2762559889861739318").done();
    b.alias("Notexpr boolcomplexexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolComplexExpr_block_1_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolComplexExpr_block_1_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38326L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739302");
    b.version(2);
    b.aggregate("BoolOp_1", 0x2656959549f3844bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL).optional(false).ordered(true).multiple(false).origin("2762559889861739595").done();
    b.alias("Boolop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolComplexExpr_block_1_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolComplexExpr_block_1_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38327L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739303");
    b.version(2);
    b.aggregate("QualBoolOp_1", 0x2656959549f3844cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382adL).optional(false).ordered(true).multiple(false).origin("2762559889861739596").done();
    b.alias("Qualboolop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolComplexExpr_block_2_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolComplexExpr_block_2_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739051");
    b.version(2);
    b.aggregate("ArithOp_1", 0x2656959549f38361L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL).optional(false).ordered(true).multiple(false).origin("2762559889861739361").done();
    b.alias("Arithop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolComplexExpr_block_2_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolComplexExpr_block_2_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739052");
    b.version(2);
    b.aggregate("QualArithOp_1", 0x2656959549f38362L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821cL).optional(false).ordered(true).multiple(false).origin("2762559889861739362").done();
    b.alias("Qualarithop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolExpr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739130");
    b.version(2);
    b.aggregate("BoolExpr_1", 0x2656959549f383b5L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L).optional(false).ordered(true).multiple(false).origin("2762559889861739445").done();
    b.aggregate("BoolExpr_block_1_1_2", 0x2656959549f383b6L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL).optional(false).ordered(true).multiple(false).origin("2762559889861739446").done();
    b.aggregate("BoolExpr_3", 0x2656959549f383b7L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L).optional(false).ordered(true).multiple(false).origin("2762559889861739447").done();
    b.alias("BoolExpr_1");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolExpr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolExpr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739131");
    b.version(2);
    b.aggregate("ArithExpr_1", 0x2656959549f383b8L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739448").done();
    b.aggregate("BoolExpr_block_2_1_2", 0x2656959549f383b9L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L).optional(false).ordered(true).multiple(false).origin("2762559889861739449").done();
    b.aggregate("ArithExpr_3", 0x2656959549f383baL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739450").done();
    b.alias("BoolExpr_2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolExpr_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolExpr_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739132");
    b.version(2);
    b.aggregate("NotExpr_1", 0x2656959549f383bbL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d8L).optional(false).ordered(true).multiple(false).origin("2762559889861739451").done();
    b.alias("Notexpr boolexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolExpr_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolExpr_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739133");
    b.version(2);
    b.aggregate("BoolVal_1", 0x2656959549f383bcL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L).optional(false).ordered(true).multiple(false).origin("2762559889861739452").done();
    b.alias("Boolval boolexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolExpr_block_1_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolExpr_block_1_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739294");
    b.version(2);
    b.aggregate("BoolOp_1", 0x2656959549f38447L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL).optional(false).ordered(true).multiple(false).origin("2762559889861739591").done();
    b.alias("Boolop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolExpr_block_1_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolExpr_block_1_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739295");
    b.version(2);
    b.aggregate("QualBoolOp_1", 0x2656959549f38448L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382adL).optional(false).ordered(true).multiple(false).origin("2762559889861739592").done();
    b.alias("Qualboolop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolExpr_block_2_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolExpr_block_2_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38223L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739043");
    b.version(2);
    b.aggregate("ArithOp_1", 0x2656959549f38357L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL).optional(false).ordered(true).multiple(false).origin("2762559889861739351").done();
    b.alias("Arithop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolExpr_block_2_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolExpr_block_2_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38224L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739044");
    b.version(2);
    b.aggregate("QualArithOp_1", 0x2656959549f38358L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821cL).optional(false).ordered(true).multiple(false).origin("2762559889861739352").done();
    b.alias("Qualarithop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739277");
    b.version(2);
    b.alias("/\\\\");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739278");
    b.version(2);
    b.alias("\\\\/");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739279");
    b.version(2);
    b.alias("xor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38310L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739280");
    b.version(2);
    b.alias("->");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38311L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739281");
    b.version(2);
    b.alias("<-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_6() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_6", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38312L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739282");
    b.version(2);
    b.alias("<->");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_7() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_7", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38313L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739283");
    b.version(2);
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_8() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_8", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38314L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739284");
    b.version(2);
    b.alias("==");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolOp_9() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolOp_9", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38315L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739285");
    b.version(2);
    b.alias("!=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolS", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739053");
    b.version(2);
    b.aggregate("RestS_1", 0x2656959549f38363L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a2L).optional(false).ordered(true).multiple(false).origin("2762559889861739363").done();
    b.alias("bool_search");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolVal_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolVal_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38205L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739013");
    b.version(2);
    b.alias("BoolVal_1");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolVal_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolVal_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38206L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739014");
    b.version(2);
    b.aggregate("BoolExpr_1", 0x2656959549f38341L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L).optional(false).ordered(true).multiple(false).origin("2762559889861739329").done();
    b.alias("( )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolVal_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolVal_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38207L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739015");
    b.version(2);
    b.property("ID_1", 0x2656959549f38342L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739330").done();
    b.alias("Id boolval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolVal_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolVal_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38208L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739016");
    b.version(2);
    b.property("BOOL_1", 0x2656959549f38344L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38343L)).origin("2762559889861739332").done();
    b.alias("Bool boolval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolVal_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolVal_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38209L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739017");
    b.version(2);
    b.aggregate("Arrayaccess_1", 0x2656959549f38345L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38306L).optional(false).ordered(true).multiple(false).origin("2762559889861739333").done();
    b.alias("Arrayaccess boolval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolVal_6() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolVal_6", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739018");
    b.version(2);
    b.aggregate("IfExpr_1", 0x2656959549f38346L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38258L).optional(false).ordered(true).multiple(false).origin("2762559889861739334").done();
    b.alias("Ifexpr boolval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolVal_7() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolVal_7", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739019");
    b.version(2);
    b.aggregate("LetExpr_1", 0x2656959549f38347L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38248L).optional(false).ordered(true).multiple(false).origin("2762559889861739335").done();
    b.alias("Letexpr boolval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolVal_8() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BoolVal_8", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739020");
    b.version(2);
    b.aggregate("PredOrUnionExpr_1", 0x2656959549f38348L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38240L).optional(false).ordered(true).multiple(false).origin("2762559889861739336").done();
    b.alias("Predorunionexpr boolval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBracketExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BracketExpr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38321L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825aL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38320L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739297");
    b.version(2);
    b.alias("{ }");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBracketExpr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "BracketExpr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38322L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825aL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38320L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739298");
    b.version(2);
    b.aggregate("CommaList_1", 0x2656959549f38449L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a0L).optional(false).ordered(true).multiple(false).origin("2762559889861739593").done();
    b.alias("{ }");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCaseBranch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "CaseBranch", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c2L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739202");
    b.version(2);
    b.aggregate("CaseBranch_block_1_1_1", 0x2656959549f38401L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38309L).optional(false).ordered(true).multiple(false).origin("2762559889861739521").done();
    b.aggregate("Expr_2", 0x2656959549f38402L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739522").done();
    b.alias("-->");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCaseBranch_block_1_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "CaseBranch_block_1_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739274");
    b.version(2);
    b.aggregate("PredOrUnionExpr_1", 0x2656959549f3843eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38240L).optional(false).ordered(true).multiple(false).origin("2762559889861739582").done();
    b.alias("Predorunionexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCaseBranch_block_1_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "CaseBranch_block_1_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38309L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739275");
    b.version(2);
    b.property("ID_1", 0x2656959549f3843fL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739583").done();
    b.alias("Id");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCaseExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "CaseExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38277L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739127");
    b.version(2);
    b.property("ID_1", 0x2656959549f383b3L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739443").done();
    b.aggregate("CaseExpr_block_1_1_1", 0x2656959549f383b4L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b7L).optional(false).ordered(true).multiple(true).origin("2762559889861739444").done();
    b.alias("case of endcase");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCaseExpr_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "CaseExpr_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b7L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739191");
    b.version(2);
    b.aggregate("CaseBranch_1", 0x2656959549f383f7L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c2L).optional(false).ordered(true).multiple(false).origin("2762559889861739511").done();
    b.alias(";");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommaList_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "CommaList_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a1L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739169");
    b.version(2);
    b.aggregate("CommaList_block_1_1_1", 0x2656959549f383ddL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382dbL).optional(false).ordered(true).multiple(false).origin("2762559889861739485").done();
    b.alias("Commalist_block_1_1 commalist");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommaList_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "CommaList_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382dbL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a0L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739227");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38418L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739544").done();
    b.aggregate("CommaList_block_1_2_2", 0x2656959549f38419L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382dcL).optional(true).ordered(true).multiple(true).origin("2762559889861739545").done();
    b.alias("CommaList_block_1_1");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommaList_block_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "CommaList_block_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382dcL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739228");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f3841aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739546").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Constr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38250L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739088");
    b.version(2);
    b.aggregate("Scons_1", 0x2656959549f3838eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d5L).optional(false).ordered(true).multiple(false).origin("2762559889861739406").done();
    b.alias("Scons constr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Constr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38251L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739089");
    b.version(2);
    b.aggregate("Tcons_1", 0x2656959549f3838fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38231L).optional(false).ordered(true).multiple(false).origin("2762559889861739407").done();
    b.alias("Tcons constr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstrainchoice_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Constrainchoice_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38249L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739082");
    b.version(2);
    b.alias("indomain");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstrainchoice_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Constrainchoice_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38249L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739083");
    b.version(2);
    b.alias("indomain_min");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstrainchoice_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Constrainchoice_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38249L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739084");
    b.version(2);
    b.alias("indomain_median");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstrainchoice_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Constrainchoice_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38249L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739085");
    b.version(2);
    b.alias("indomain_random");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstrainchoice_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Constrainchoice_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38249L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739086");
    b.version(2);
    b.alias("indomain_split");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Constraint", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38276L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c4L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739126");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f383b2L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739442").done();
    b.alias("constraint");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Data", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739163");
    b.version(2);
    b.property("ID_1", 0x2656959549f383d7L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739479").done();
    b.aggregate("Constr_1", 0x2656959549f383d8L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824fL).optional(false).ordered(true).multiple(false).origin("2762559889861739480").done();
    b.aggregate("Data_block_1_1_2", 0x2656959549f383d9L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38227L).optional(true).ordered(true).multiple(true).origin("2762559889861739481").done();
    b.alias("enum = { }");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForData_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Data_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38227L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739047");
    b.version(2);
    b.aggregate("Constr_1", 0x2656959549f3835eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824fL).optional(false).ordered(true).multiple(false).origin("2762559889861739358").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDecl_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Decl_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38299L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739161");
    b.version(2);
    b.aggregate("Vardecl_1", 0x2656959549f383d5L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38245L).optional(false).ordered(true).multiple(false).origin("2762559889861739477").done();
    b.alias("Vardecl decl");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDecl_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Decl_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739162");
    b.version(2);
    b.aggregate("Pardecl_1", 0x2656959549f383d6L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827fL).optional(false).ordered(true).multiple(false).origin("2762559889861739478").done();
    b.alias("Pardecl decl");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDimensions() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Dimensions", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38294L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739156");
    b.version(2);
    b.aggregate("Dimensions_block_1_1_1", 0x2656959549f383d0L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826cL).optional(false).ordered(true).multiple(false).origin("2762559889861739472").done();
    b.alias("[ ]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDimensions_block_1_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Dimensions_block_1_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739117");
    b.version(2);
    b.aggregate("Dimensions_block_1_2_1", 0x2656959549f383abL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c3L).optional(false).ordered(true).multiple(false).origin("2762559889861739435").done();
    b.alias("Dimensions_block_1_2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDimensions_block_1_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Dimensions_block_1_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826cL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739118");
    b.version(2);
    b.alias("int");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDimensions_block_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Dimensions_block_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c3L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826cL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739203");
    b.version(2);
    b.aggregate("Range_1", 0x2656959549f38403L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38242L).optional(false).ordered(true).multiple(false).origin("2762559889861739523").done();
    b.aggregate("Dimensions_block_1_3_2", 0x2656959549f38404L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c7L).optional(true).ordered(true).multiple(true).origin("2762559889861739524").done();
    b.alias("Dimensions_block_1_2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDimensions_block_1_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Dimensions_block_1_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c7L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739207");
    b.version(2);
    b.aggregate("Range_1", 0x2656959549f38407L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38242L).optional(false).ordered(true).multiple(false).origin("2762559889861739527").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElseS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ElseS", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3832eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829cL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739310");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38452L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739602").done();
    b.alias("else endif");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElseifS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ElseifS", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38259L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829cL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739097");
    b.version(2);
    b.aggregate("BodyIf_1", 0x2656959549f3839aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f5L).optional(false).ordered(true).multiple(false).origin("2762559889861739418").done();
    b.alias("elseif");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "EmptyStatement", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x1bb0060e71f082cfL);
    b.class_(false, false, false);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/1995101294036026063");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f7L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739255");
    b.version(2);
    b.property("ID_1", 0x2656959549f3842aL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739562").done();
    b.alias("Id expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_10() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_10", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38300L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739264");
    b.version(2);
    b.aggregate("ListExpr_1", 0x2656959549f38432L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL).optional(false).ordered(true).multiple(false).origin("2762559889861739570").done();
    b.alias("Listexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_11() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_11", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38301L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739265");
    b.version(2);
    b.aggregate("BoolComplexExpr_1", 0x2656959549f38433L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f7L).optional(false).ordered(true).multiple(false).origin("2762559889861739571").done();
    b.alias("Boolcomplexexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_12() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_12", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38302L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739266");
    b.version(2);
    b.aggregate("ArithComplexExpr_1", 0x2656959549f38434L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38255L).optional(false).ordered(true).multiple(false).origin("2762559889861739572").done();
    b.alias("Arithcomplexexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_13() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_13", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38303L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739267");
    b.version(2);
    b.aggregate("SetExpr_1", 0x2656959549f38435L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L).optional(false).ordered(true).multiple(false).origin("2762559889861739573").done();
    b.alias("Setexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_14() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_14", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38304L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739268");
    b.version(2);
    b.aggregate("CaseExpr_1", 0x2656959549f38436L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38277L).optional(false).ordered(true).multiple(false).origin("2762559889861739574").done();
    b.alias("Caseexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_15() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_15", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38305L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739269");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38437L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739575").done();
    b.aggregate("InfixOp_2", 0x2656959549f38438L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821fL).optional(false).ordered(true).multiple(false).origin("2762559889861739576").done();
    b.aggregate("Expr_3", 0x2656959549f38439L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739577").done();
    b.alias("Expr_15");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f8L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739256");
    b.version(2);
    b.alias("_");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f9L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739257");
    b.version(2);
    b.property("BOOL_1", 0x2656959549f3842bL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38343L)).origin("2762559889861739563").done();
    b.alias("Bool expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382faL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739258");
    b.version(2);
    b.aggregate("Real_1", 0x2656959549f3842cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d6L).optional(false).ordered(true).multiple(false).origin("2762559889861739564").done();
    b.alias("Real expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382fbL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739259");
    b.version(2);
    b.aggregate("Integer_1", 0x2656959549f3842dL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a5L).optional(false).ordered(true).multiple(false).origin("2762559889861739565").done();
    b.alias("Integer expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_6() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_6", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382fcL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739260");
    b.version(2);
    b.aggregate("PredOrUnionExpr_1", 0x2656959549f3842eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38240L).optional(false).ordered(true).multiple(false).origin("2762559889861739566").done();
    b.alias("Predorunionexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_7() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_7", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382fdL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739261");
    b.version(2);
    b.aggregate("RbracketExpr_1", 0x2656959549f3842fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827eL).optional(false).ordered(true).multiple(false).origin("2762559889861739567").done();
    b.alias("Rbracketexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_8() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_8", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382feL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739262");
    b.version(2);
    b.aggregate("IfExpr_1", 0x2656959549f38430L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38258L).optional(false).ordered(true).multiple(false).origin("2762559889861739568").done();
    b.alias("Ifexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpr_9() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Expr_9", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382ffL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739263");
    b.version(2);
    b.aggregate("LetExpr_1", 0x2656959549f38431L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38248L).optional(false).ordered(true).multiple(false).origin("2762559889861739569").done();
    b.alias("Letexpr expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExtended() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Extended", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38247L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739079");
    b.version(2);
    b.property("ID_1", 0x2656959549f38387L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739399").done();
    b.aggregate("Extended_block_1_1_1", 0x2656959549f38388L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38272L).optional(true).ordered(true).multiple(false).origin("2762559889861739400").done();
    b.aggregate("Typename_2", 0x2656959549f38389L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L).optional(false).ordered(true).multiple(false).origin("2762559889861739401").done();
    b.aggregate("Extended_block_1_2_3", 0x2656959549f3838aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826fL).optional(true).ordered(true).multiple(false).origin("2762559889861739402").done();
    b.alias("extended =");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExtended_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Extended_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38272L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739122");
    b.version(2);
    b.aggregate("PreExt_1", 0x2656959549f383aeL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38323L).optional(false).ordered(true).multiple(false).origin("2762559889861739438").done();
    b.alias("++");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExtended_block_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Extended_block_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739119");
    b.version(2);
    b.aggregate("PostExt_1", 0x2656959549f383acL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382ebL).optional(false).ordered(true).multiple(false).origin("2762559889861739436").done();
    b.alias("++");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExtendsmark() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Extendsmark", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38278L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739128");
    b.version(2);
    b.alias("extends");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFromR_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "FromR_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38238L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739064");
    b.version(2);
    b.aggregate("ArithExpr_1", 0x2656959549f38372L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739378").done();
    b.alias("Arithexpr fromr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Function", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c1L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739201");
    b.version(2);
    b.aggregate("Varmark_1", 0x2656959549f383fdL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38270L).optional(true).ordered(true).multiple(false).origin("2762559889861739517").done();
    b.aggregate("QualName_2", 0x2656959549f383feL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823cL).optional(false).ordered(true).multiple(false).origin("2762559889861739518").done();
    b.aggregate("Function_block_1_1_3", 0x2656959549f383ffL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38252L).optional(true).ordered(true).multiple(false).origin("2762559889861739519").done();
    b.aggregate("Expr_4", 0x2656959549f38400L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739520").done();
    b.alias("function ( ) =");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunction_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Function_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38252L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739090");
    b.version(2);
    b.aggregate("Decl_1", 0x2656959549f38390L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L).optional(false).ordered(true).multiple(false).origin("2762559889861739408").done();
    b.aggregate("Function_block_1_2_2", 0x2656959549f38391L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38253L).optional(true).ordered(true).multiple(true).origin("2762559889861739409").done();
    b.alias("Function_block_1_1");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunction_block_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Function_block_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38253L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739091");
    b.version(2);
    b.aggregate("Decl_1", 0x2656959549f38392L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L).optional(false).ordered(true).multiple(false).origin("2762559889861739410").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGuard() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Guard", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38241L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739073");
    b.version(2);
    b.aggregate("InDecl_1", 0x2656959549f3837fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38232L).optional(false).ordered(true).multiple(false).origin("2762559889861739391").done();
    b.aggregate("Guard_block_1_1_2", 0x2656959549f38380L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f0L).optional(true).ordered(true).multiple(true).origin("2762559889861739392").done();
    b.alias("Guard");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGuard_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Guard_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f0L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739248");
    b.version(2);
    b.aggregate("InDecl_1", 0x2656959549f38422L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38232L).optional(false).ordered(true).multiple(false).origin("2762559889861739554").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGuardedList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "GuardedList", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38274L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b2L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739124");
    b.version(2);
    b.aggregate("NonEmptyListElems_1", 0x2656959549f383afL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38202L).optional(false).ordered(true).multiple(false).origin("2762559889861739439").done();
    b.aggregate("Guard_2", 0x2656959549f383b0L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38241L).optional(false).ordered(true).multiple(false).origin("2762559889861739440").done();
    b.alias("[ | ]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGuardedSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "GuardedSet", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d7L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825aL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739223");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38411L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739537").done();
    b.aggregate("Guard_2", 0x2656959549f38412L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38241L).optional(false).ordered(true).multiple(false).origin("2762559889861739538").done();
    b.alias("{ | }");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIArithComplexExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IArithComplexExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38255L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739093");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIArithExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IArithExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739182");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIArithOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IArithOp", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739022");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIArithOp2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IArithOp2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c8L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739208");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIArrayaccess() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IArrayaccess", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38306L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739270");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBodyIf_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBodyIf_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829cL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739164");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBoolComplexExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBoolComplexExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f7L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861738999");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBoolComplexExpr_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBoolComplexExpr_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739301");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBoolComplexExpr_block_2_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBoolComplexExpr_block_2_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739050");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBoolExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBoolExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739129");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBoolExpr_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBoolExpr_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739293");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBoolExpr_block_2_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBoolExpr_block_2_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739042");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBoolOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBoolOp", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739276");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBoolVal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBoolVal", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739012");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBracketExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IBracketExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38320L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739296");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForICaseBranch_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ICaseBranch_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38309L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739273");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForICommaList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ICommaList", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a0L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739168");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIConstr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IConstr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824fL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739087");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIConstrainchoice() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IConstrainchoice", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38249L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739081");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IDecl", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739160");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDimensions_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IDimensions_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826cL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739116");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739254");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIFromR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IFromR", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739063");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIInfixOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IInfixOp", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821fL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739039");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIInfixSetOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IInfixSetOp", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382deL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739230");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIInteger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IInteger", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a5L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739173");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForILetDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ILetDecl", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c4L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739204");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIListExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IListExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739215");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIListValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IListValue", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38328L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739304");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIModeAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IModeAnnotation", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e6L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739238");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOneDimList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IOneDimList", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b2L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739186");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IOp", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739288");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOpOrID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IOpOrID", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739006");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOperand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IOperand", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739147");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOptimize() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IOptimize", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b8L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739192");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOutput() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IOutput", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38217L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739031");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPardecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IPardecl", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827fL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739135");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPostExt() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IPostExt", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382ebL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739243");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPreExt() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IPreExt", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38323L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739299");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPredOrUnionExpr_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IPredOrUnionExpr_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822eL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739054");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIQualName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IQualName", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823cL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739068");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIRange() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IRange", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38242L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739074");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISetExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ISetExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739065");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISetVal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ISetVal", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825aL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739098");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISimpleList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ISimpleList", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f2L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739250");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISolve_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ISolve_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382bbL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739195");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISolve_block_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ISolve_block_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382beL);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739198");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStat() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IStat", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739105");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStringExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IStringExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b5L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739189");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIToR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IToR", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739060");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForITypename() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ITypename", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739139");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIVarchoice() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IVarchoice", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e2L);
    b.interface_();
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739234");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIdexpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Idexpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38246L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739078");
    b.version(2);
    b.property("ID_1", 0x2656959549f38386L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739398").done();
    b.alias("Id idexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIfExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IfExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38258L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38328L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739096");
    b.version(2);
    b.aggregate("BodyIf_1", 0x2656959549f38399L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f5L).optional(false).ordered(true).multiple(false).origin("2762559889861739417").done();
    b.alias("if");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "InDecl", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38232L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739058");
    b.version(2);
    b.property("ID_1", 0x2656959549f38369L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739369").done();
    b.aggregate("InDecl_block_1_1_1", 0x2656959549f3836aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38203L).optional(true).ordered(true).multiple(true).origin("2762559889861739370").done();
    b.aggregate("SetExpr_2", 0x2656959549f3836bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L).optional(false).ordered(true).multiple(false).origin("2762559889861739371").done();
    b.aggregate("WhereCond_3", 0x2656959549f3836cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3832fL).optional(true).ordered(true).multiple(false).origin("2762559889861739372").done();
    b.alias("in");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInDecl_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "InDecl_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38203L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739011");
    b.version(2);
    b.property("ID_1", 0x2656959549f38340L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739328").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInclude() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Include", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38260L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739104");
    b.version(2);
    b.aggregate("StringExpr_1", 0x2656959549f383a0L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b5L).optional(false).ordered(true).multiple(false).origin("2762559889861739424").done();
    b.alias("include");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixOp_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "InfixOp_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38220L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821fL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739040");
    b.version(2);
    b.property("ID_1", 0x2656959549f38355L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739349").done();
    b.alias("` `");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixOp_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "InfixOp_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38221L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739041");
    b.version(2);
    b.aggregate("InfixSetOp_1", 0x2656959549f38356L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382deL).optional(false).ordered(true).multiple(false).origin("2762559889861739350").done();
    b.alias("Infixsetop infixop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixSetOp_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "InfixSetOp_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382dfL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382deL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821fL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739231");
    b.version(2);
    b.alias("in");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixSetOp_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "InfixSetOp_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e0L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382deL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821fL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739232");
    b.version(2);
    b.alias("intersect");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixSetOp_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "InfixSetOp_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e1L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382deL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821fL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739233");
    b.version(2);
    b.alias("union");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Init", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739038");
    b.version(2);
    b.property("ID_1", 0x2656959549f38353L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739347").done();
    b.aggregate("Expr_1", 0x2656959549f38354L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739348").done();
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "IntS", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38275L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739125");
    b.version(2);
    b.aggregate("RestS_1", 0x2656959549f383b1L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a2L).optional(false).ordered(true).multiple(false).origin("2762559889861739441").done();
    b.alias("int_search");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInteger_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Integer_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a6L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a5L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739174");
    b.version(2);
    b.property("NAT_1", 0x2656959549f383e5L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f383e4L)).origin("2762559889861739493").done();
    b.alias("Nat integer");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLetDecl_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "LetDecl_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c5L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739205");
    b.version(2);
    b.aggregate("Decl_1", 0x2656959549f38405L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L).optional(false).ordered(true).multiple(false).origin("2762559889861739525").done();
    b.alias("Decl letdecl");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLetDecl_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "LetDecl_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c6L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739206");
    b.version(2);
    b.aggregate("Constraint_1", 0x2656959549f38406L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38276L).optional(false).ordered(true).multiple(false).origin("2762559889861739526").done();
    b.alias("Constraint letdecl");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLetExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "LetExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38248L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739080");
    b.version(2);
    b.aggregate("LetDecl_1", 0x2656959549f3838bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c4L).optional(false).ordered(true).multiple(false).origin("2762559889861739403").done();
    b.aggregate("LetExpr_block_1_1_2", 0x2656959549f3838cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829fL).optional(true).ordered(true).multiple(true).origin("2762559889861739404").done();
    b.aggregate("Expr_3", 0x2656959549f3838dL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739405").done();
    b.alias("let { } in");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLetExpr_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "LetExpr_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739167");
    b.version(2);
    b.aggregate("LetDecl_1", 0x2656959549f383dcL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c4L).optional(false).ordered(true).multiple(false).origin("2762559889861739484").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListExpr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d0L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739216");
    b.version(2);
    b.aggregate("ListValue_1", 0x2656959549f38408L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38328L).optional(false).ordered(true).multiple(false).origin("2762559889861739528").done();
    b.alias("Listvalue listexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListExpr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListExpr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d1L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739217");
    b.version(2);
    b.aggregate("ListExpr_1", 0x2656959549f38409L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL).optional(false).ordered(true).multiple(false).origin("2762559889861739529").done();
    b.aggregate("ListExpr_2", 0x2656959549f3840aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL).optional(false).ordered(true).multiple(false).origin("2762559889861739530").done();
    b.alias("++");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListExpr_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListExpr_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d2L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739218");
    b.version(2);
    b.aggregate("OneDimList_1", 0x2656959549f3840bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b2L).optional(false).ordered(true).multiple(false).origin("2762559889861739531").done();
    b.alias("Onedimlist listexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListExpr_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListExpr_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d3L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739219");
    b.version(2);
    b.aggregate("MultiDimList_1", 0x2656959549f3840cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38233L).optional(false).ordered(true).multiple(false).origin("2762559889861739532").done();
    b.alias("Multidimlist listexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListExtended() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListExtended", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38323L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382ebL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739292");
    b.version(2);
    b.property("ID_1", 0x2656959549f38445L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739589").done();
    b.aggregate("ListExtended_block_1_1_1", 0x2656959549f38446L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38282L).optional(true).ordered(true).multiple(true).origin("2762559889861739590").done();
    b.alias("[ ]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListExtended_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListExtended_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38282L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739138");
    b.version(2);
    b.property("ID_1", 0x2656959549f383c0L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739456").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListValue_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListValue_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38329L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739305");
    b.version(2);
    b.aggregate("StringExpr_1", 0x2656959549f3844dL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b5L).optional(false).ordered(true).multiple(false).origin("2762559889861739597").done();
    b.alias("Stringexpr listvalue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListValue_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListValue_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3832aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38328L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739306");
    b.version(2);
    b.property("ID_1", 0x2656959549f3844eL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739598").done();
    b.alias("Id listvalue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListValue_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListValue_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3832bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739307");
    b.version(2);
    b.aggregate("IfExpr_1", 0x2656959549f3844fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38258L).optional(false).ordered(true).multiple(false).origin("2762559889861739599").done();
    b.alias("Ifexpr listvalue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListValue_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListValue_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3832cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739308");
    b.version(2);
    b.aggregate("Arrayaccess_1", 0x2656959549f38450L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38306L).optional(false).ordered(true).multiple(false).origin("2762559889861739600").done();
    b.alias("Arrayaccess listvalue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListValue_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ListValue_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3832dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739309");
    b.version(2);
    b.aggregate("PredOrUnionExpr_1", 0x2656959549f38451L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38240L).optional(false).ordered(true).multiple(false).origin("2762559889861739601").done();
    b.alias("Predorunionexpr listvalue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMaximize() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Maximize", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382beL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b8L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739034");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f3834cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739340").done();
    b.alias("maximize");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMinimize() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Minimize", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382beL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b8L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739102");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f3839eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739422").done();
    b.alias("minimize");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMinusExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "MinusExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38255L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739021");
    b.version(2);
    b.aggregate("ArithExpr_1", 0x2656959549f38349L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739337").done();
    b.alias("-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModeAnnotation_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ModeAnnotation_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e7L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739239");
    b.version(2);
    b.aggregate("IntS_1", 0x2656959549f3841cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38275L).optional(false).ordered(true).multiple(false).origin("2762559889861739548").done();
    b.alias("Ints modeannotation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModeAnnotation_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ModeAnnotation_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e8L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739240");
    b.version(2);
    b.aggregate("BoolS_1", 0x2656959549f3841dL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822dL).optional(false).ordered(true).multiple(false).origin("2762559889861739549").done();
    b.alias("Bools modeannotation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModeAnnotation_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ModeAnnotation_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e9L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739241");
    b.version(2);
    b.aggregate("SetS_1", 0x2656959549f3841eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381fdL).optional(false).ordered(true).multiple(false).origin("2762559889861739550").done();
    b.alias("Sets modeannotation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModeAnnotation_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ModeAnnotation_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382eaL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739242");
    b.version(2);
    b.aggregate("SeqS_1", 0x2656959549f3841fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38317L).optional(false).ordered(true).multiple(false).origin("2762559889861739551").done();
    b.alias("Seqs modeannotation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Model", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821dL);
    b.class_(false, false, true);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739037");
    b.version(2);
    b.aggregate("Stats", 0x1bb0060e71e148e2L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L).optional(true).ordered(true).multiple(true).origin("1995101294035028194").done();
    b.alias("Model_block_1_1 model");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiDimList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "MultiDimList", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38233L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739059");
    b.version(2);
    b.aggregate("NonEmptyListElems_1", 0x2656959549f3836dL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38202L).optional(false).ordered(true).multiple(false).origin("2762559889861739373").done();
    b.aggregate("MultiDimList_block_1_1_2", 0x2656959549f3836eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38229L).optional(true).ordered(true).multiple(true).origin("2762559889861739374").done();
    b.aggregate("MultiDimList_block_1_3_3", 0x2656959549f3836fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382eeL).optional(true).ordered(true).multiple(false).origin("2762559889861739375").done();
    b.alias("[| |]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiDimList_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "MultiDimList_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38229L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739049");
    b.version(2);
    b.aggregate("MultiDimList_block_1_2_1", 0x2656959549f3835fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382efL).optional(true).ordered(true).multiple(false).origin("2762559889861739359").done();
    b.aggregate("NonEmptyListElems_2", 0x2656959549f38360L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38202L).optional(false).ordered(true).multiple(false).origin("2762559889861739360").done();
    b.alias("|");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiDimList_block_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "MultiDimList_block_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382efL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739247");
    b.version(2);
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiDimList_block_1_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "MultiDimList_block_1_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382eeL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739246");
    b.version(2);
    b.alias("|");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonEmptyListElems() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "NonEmptyListElems", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38202L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739010");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f3833eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739326").done();
    b.aggregate("NonEmptyListElems_block_1_1_2", 0x2656959549f3833fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d4L).optional(true).ordered(true).multiple(true).origin("2762559889861739327").done();
    b.alias("NonEmptyListElems");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonEmptyListElems_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "NonEmptyListElems_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d4L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739220");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f3840dL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739533").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "NotExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d8L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f7L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739224");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38413L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739539").done();
    b.alias("not");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOneDimList_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "OneDimList_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b3L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739187");
    b.version(2);
    b.aggregate("SimpleList_1", 0x2656959549f383f4L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f2L).optional(false).ordered(true).multiple(false).origin("2762559889861739508").done();
    b.alias("Simplelist onedimlist");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOneDimList_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "OneDimList_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b4L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739188");
    b.version(2);
    b.aggregate("GuardedList_1", 0x2656959549f383f5L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38274L).optional(false).ordered(true).multiple(false).origin("2762559889861739509").done();
    b.alias("Guardedlist onedimlist");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOnesection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Onesection", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38236L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822eL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739062");
    b.version(2);
    b.aggregate("Onesection_block_1_1_1", 0x2656959549f38371L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381fcL).optional(true).ordered(true).multiple(false).origin("2762559889861739377").done();
    b.alias("( )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOnesection_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Onesection_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381fcL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739004");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38338L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739320").done();
    b.aggregate("Onesection_block_1_2_2", 0x2656959549f38339L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381fbL).optional(true).ordered(true).multiple(true).origin("2762559889861739321").done();
    b.alias("Onesection_block_1_1");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOnesection_block_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Onesection_block_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381fbL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739003");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38337L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739319").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpOrID_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "OpOrID_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381ffL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739007");
    b.version(2);
    b.aggregate("Op_1", 0x2656959549f3833bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38318L).optional(false).ordered(true).multiple(false).origin("2762559889861739323").done();
    b.alias("Op oporid");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpOrID_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "OpOrID_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38200L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739008");
    b.version(2);
    b.property("ID_1", 0x2656959549f3833dL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739325").done();
    b.alias("Id oporid");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOp_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Op_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38319L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739289");
    b.version(2);
    b.aggregate("BoolOp_1", 0x2656959549f38443L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL).optional(false).ordered(true).multiple(false).origin("2762559889861739587").done();
    b.alias("Boolop op");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOp_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Op_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739290");
    b.version(2);
    b.aggregate("ArithOp_1", 0x2656959549f38444L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL).optional(false).ordered(true).multiple(false).origin("2762559889861739588").done();
    b.alias("Arithop op");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Operand_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739148");
    b.version(2);
    b.property("ID_1", 0x2656959549f383c8L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739464").done();
    b.alias("Id operand");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Operand_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739149");
    b.version(2);
    b.aggregate("Integer_1", 0x2656959549f383c9L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a5L).optional(false).ordered(true).multiple(false).origin("2762559889861739465").done();
    b.alias("Integer operand");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Operand_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739150");
    b.version(2);
    b.aggregate("Real_1", 0x2656959549f383caL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d6L).optional(false).ordered(true).multiple(false).origin("2762559889861739466").done();
    b.alias("Real operand");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Operand_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739151");
    b.version(2);
    b.aggregate("Arrayaccess_1", 0x2656959549f383cbL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38306L).optional(false).ordered(true).multiple(false).origin("2762559889861739467").done();
    b.alias("Arrayaccess operand");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Operand_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38290L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739152");
    b.version(2);
    b.aggregate("IfExpr_1", 0x2656959549f383ccL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38258L).optional(false).ordered(true).multiple(false).origin("2762559889861739468").done();
    b.alias("Ifexpr operand");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand_6() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Operand_6", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38291L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739153");
    b.version(2);
    b.aggregate("LetExpr_1", 0x2656959549f383cdL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38248L).optional(false).ordered(true).multiple(false).origin("2762559889861739469").done();
    b.alias("Letexpr operand");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand_7() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Operand_7", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38292L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739154");
    b.version(2);
    b.aggregate("ArithExpr_1", 0x2656959549f383ceL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739470").done();
    b.alias("( )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperand_8() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Operand_8", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38293L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739155");
    b.version(2);
    b.aggregate("PredOrUnionExpr_1", 0x2656959549f383cfL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38240L).optional(false).ordered(true).multiple(false).origin("2762559889861739471").done();
    b.alias("Predorunionexpr operand");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOptimize_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Optimize_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b9L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739193");
    b.version(2);
    b.aggregate("Maximize_1", 0x2656959549f383f8L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821aL).optional(false).ordered(true).multiple(false).origin("2762559889861739512").done();
    b.alias("Maximize optimize");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOptimize_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Optimize_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382baL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739194");
    b.version(2);
    b.aggregate("Minimize_1", 0x2656959549f383f9L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825eL).optional(false).ordered(true).multiple(false).origin("2762559889861739513").done();
    b.alias("Minimize optimize");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutput_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Output_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38218L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38217L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739032");
    b.version(2);
    b.aggregate("ListExpr_1", 0x2656959549f3834aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL).optional(false).ordered(true).multiple(false).origin("2762559889861739338").done();
    b.alias("output ( )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutput_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Output_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38219L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38217L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739033");
    b.version(2);
    b.aggregate("ListExpr_1", 0x2656959549f3834bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL).optional(false).ordered(true).multiple(false).origin("2762559889861739339").done();
    b.alias("output");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ParDecl", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x79b75b2d8b506afaL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.VarDeclItem", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38245L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/8770579050496289530");
    b.version(2);
    b.alias("par");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Parameter", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f1L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827fL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c4L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739249");
    b.version(2);
    b.property("ID_1", 0x2656959549f38424L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739556").done();
    b.aggregate("Typename_1", 0x2656959549f38423L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L).optional(false).ordered(true).multiple(false).origin("2762559889861739555").done();
    b.aggregate("Parameter_block_1_1_2", 0x2656959549f38425L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38316L).optional(true).ordered(true).multiple(false).origin("2762559889861739557").done();
    b.alias("par :");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameter_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Parameter_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38316L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739286");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f38440L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739584").done();
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPararray() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Pararray", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382abL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827fL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c4L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739179");
    b.version(2);
    b.aggregate("Dimensions_1", 0x2656959549f383e9L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38294L).optional(false).ordered(true).multiple(false).origin("2762559889861739497").done();
    b.aggregate("Parameter_2", 0x2656959549f383eaL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f1L).optional(false).ordered(true).multiple(false).origin("2762559889861739498").done();
    b.alias("array of");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPardecl_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Pardecl_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38280L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739136");
    b.version(2);
    b.aggregate("Parameter_1", 0x2656959549f383beL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f1L).optional(false).ordered(true).multiple(false).origin("2762559889861739454").done();
    b.alias("Parameter pardecl");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPardecl_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Pardecl_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38281L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739137");
    b.version(2);
    b.aggregate("Pararray_1", 0x2656959549f383bfL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382abL).optional(false).ordered(true).multiple(false).origin("2762559889861739455").done();
    b.alias("Pararray pardecl");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPostExt_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "PostExt_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382ecL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739244");
    b.version(2);
    b.aggregate("ListExtended_1", 0x2656959549f38420L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831cL).optional(false).ordered(true).multiple(false).origin("2762559889861739552").done();
    b.alias("Listextended postext");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPreExt_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "PreExt_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38324L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739300");
    b.version(2);
    b.aggregate("ListExtended_1", 0x2656959549f3844aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831cL).optional(false).ordered(true).multiple(false).origin("2762559889861739594").done();
    b.alias("Listextended preext");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredOrUnionExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "PredOrUnionExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38240L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38309L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38204L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38328L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739072");
    b.version(2);
    b.property("ID_1", 0x2656959549f3837dL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739389").done();
    b.aggregate("PredOrUnionExpr_block_1_1_1", 0x2656959549f3837eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822eL).optional(false).ordered(true).multiple(false).origin("2762559889861739390").done();
    b.alias("PredOrUnionExpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredOrUnionExpr_block_1_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "PredOrUnionExpr_block_1_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739055");
    b.version(2);
    b.aggregate("Twosections_1", 0x2656959549f38364L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a4L).optional(false).ordered(true).multiple(false).origin("2762559889861739364").done();
    b.alias("Twosections");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredOrUnionExpr_block_1_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "PredOrUnionExpr_block_1_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38230L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739056");
    b.version(2);
    b.aggregate("Onesection_1", 0x2656959549f38365L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38236L).optional(false).ordered(true).multiple(false).origin("2762559889861739365").done();
    b.alias("Onesection");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredicate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Predicate", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739035");
    b.version(2);
    b.property("ID_1", 0x2656959549f3834dL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739341").done();
    b.aggregate("Predicate_block_1_1_1", 0x2656959549f3834eL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38296L).optional(true).ordered(true).multiple(false).origin("2762559889861739342").done();
    b.aggregate("Expr_2", 0x2656959549f3834fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739343").done();
    b.alias("predicate ( ) =");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredicate_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Predicate_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38296L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739158");
    b.version(2);
    b.aggregate("Decl_1", 0x2656959549f383d2L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L).optional(false).ordered(true).multiple(false).origin("2762559889861739474").done();
    b.aggregate("Predicate_block_1_2_2", 0x2656959549f383d3L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38297L).optional(true).ordered(true).multiple(true).origin("2762559889861739475").done();
    b.alias("Predicate_block_1_1");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredicate_block_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Predicate_block_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38297L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739159");
    b.version(2);
    b.aggregate("Decl_1", 0x2656959549f383d4L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L).optional(false).ordered(true).multiple(false).origin("2762559889861739476").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualArithOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "QualArithOp", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38222L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822aL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739036");
    b.version(2);
    b.property("ID_1", 0x2656959549f38350L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739344").done();
    b.aggregate("ArithOp_1", 0x2656959549f38351L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3820eL).optional(false).ordered(true).multiple(false).origin("2762559889861739345").done();
    b.alias(":");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualBoolOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "QualBoolOp", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382adL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831dL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38325L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739181");
    b.version(2);
    b.property("ID_1", 0x2656959549f383edL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739501").done();
    b.aggregate("BoolOp_1", 0x2656959549f383eeL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3830cL).optional(false).ordered(true).multiple(false).origin("2762559889861739502").done();
    b.alias(":");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualName_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "QualName_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823cL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739069");
    b.version(2);
    b.property("ID_1", 0x2656959549f38377L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739383").done();
    b.alias("Id qualname");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualName_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "QualName_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823cL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739070");
    b.version(2);
    b.property("ID_1", 0x2656959549f38378L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739384").done();
    b.aggregate("OpOrID_1", 0x2656959549f38379L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL).optional(false).ordered(true).multiple(false).origin("2762559889861739385").done();
    b.alias(":");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualName_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "QualName_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823cL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739071");
    b.version(2);
    b.aggregate("OpOrID_1", 0x2656959549f3837aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL).optional(false).ordered(true).multiple(false).origin("2762559889861739386").done();
    b.aggregate("Extendsmark_2", 0x2656959549f3837bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38278L).optional(false).ordered(true).multiple(false).origin("2762559889861739387").done();
    b.aggregate("OpOrID_3", 0x2656959549f3837cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381feL).optional(false).ordered(true).multiple(false).origin("2762559889861739388").done();
    b.alias("QualName_3");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRange_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Range_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38243L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825aL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38242L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739075");
    b.version(2);
    b.aggregate("FromR_1", 0x2656959549f38381L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L).optional(false).ordered(true).multiple(false).origin("2762559889861739393").done();
    b.aggregate("ToR_2", 0x2656959549f38382L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L).optional(false).ordered(true).multiple(false).origin("2762559889861739394").done();
    b.alias("..");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRange_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Range_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38244L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825aL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38242L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739076");
    b.version(2);
    b.property("ID_1", 0x2656959549f38383L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739395").done();
    b.alias("Id range");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRbracketExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "RbracketExpr", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3827eL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739134");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f383bdL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739453").done();
    b.alias("( )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Real", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d6L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828bL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38237L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38234L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739222");
    b.version(2);
    b.property("NAT_1", 0x2656959549f38410L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f383e4L)).origin("2762559889861739536").done();
    b.aggregate("Integer_1", 0x2656959549f3840fL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a5L).optional(false).ordered(true).multiple(false).origin("2762559889861739535").done();
    b.alias(".");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRestS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "RestS", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a2L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739170");
    b.version(2);
    b.aggregate("Expr_1", 0x2656959549f383deL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739486").done();
    b.aggregate("Varchoice_2", 0x2656959549f383dfL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e2L).optional(false).ordered(true).multiple(false).origin("2762559889861739487").done();
    b.aggregate("Constrainchoice_3", 0x2656959549f383e0L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38249L).optional(false).ordered(true).multiple(false).origin("2762559889861739488").done();
    b.alias("( , , , complete )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSatisfy() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Satisfy", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382beL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739291");
    b.version(2);
    b.alias("satisfy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScons() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Scons", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d5L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824fL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739221");
    b.version(2);
    b.property("ID_1", 0x2656959549f3840eL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739534").done();
    b.alias("Id scons");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSeqS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SeqS", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38317L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739287");
    b.version(2);
    b.aggregate("ModeAnnotation_1", 0x2656959549f38441L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e6L).optional(false).ordered(true).multiple(false).origin("2762559889861739585").done();
    b.aggregate("SeqS_block_1_1_2", 0x2656959549f38442L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38271L).optional(true).ordered(true).multiple(true).origin("2762559889861739586").done();
    b.alias("seq_search ( [ ] )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSeqS_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SeqS_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38271L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739121");
    b.version(2);
    b.aggregate("ModeAnnotation_1", 0x2656959549f383adL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e6L).optional(false).ordered(true).multiple(false).origin("2762559889861739437").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SetExpr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739066");
    b.version(2);
    b.aggregate("SetVal_1", 0x2656959549f38373L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825aL).optional(false).ordered(true).multiple(false).origin("2762559889861739379").done();
    b.alias("Setval setexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetExpr_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SetExpr_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3823bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739067");
    b.version(2);
    b.aggregate("SetExpr_1", 0x2656959549f38374L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L).optional(false).ordered(true).multiple(false).origin("2762559889861739380").done();
    b.aggregate("InfixSetOp_2", 0x2656959549f38375L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382deL).optional(false).ordered(true).multiple(false).origin("2762559889861739381").done();
    b.aggregate("SetExpr_3", 0x2656959549f38376L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38239L).optional(false).ordered(true).multiple(false).origin("2762559889861739382").done();
    b.alias("SetExpr_2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SetS", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381fdL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739005");
    b.version(2);
    b.aggregate("RestS_1", 0x2656959549f3833aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a2L).optional(false).ordered(true).multiple(false).origin("2762559889861739322").done();
    b.alias("set_search");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetVal_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SetVal_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739099");
    b.version(2);
    b.aggregate("BracketExpr_1", 0x2656959549f3839bL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38320L).optional(false).ordered(true).multiple(false).origin("2762559889861739419").done();
    b.alias("Bracketexpr setval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetVal_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SetVal_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825cL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739100");
    b.version(2);
    b.aggregate("Range_1", 0x2656959549f3839cL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38242L).optional(false).ordered(true).multiple(false).origin("2762559889861739420").done();
    b.alias("Range setval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetVal_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SetVal_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825dL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739101");
    b.version(2);
    b.aggregate("GuardedSet_1", 0x2656959549f3839dL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d7L).optional(false).ordered(true).multiple(false).origin("2762559889861739421").done();
    b.alias("Guardedset setval");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleList_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SimpleList_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f3L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b2L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f2L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739251");
    b.version(2);
    b.alias("[ ]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleList_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SimpleList_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f4L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739252");
    b.version(2);
    b.aggregate("SimpleNonEmptyList_1", 0x2656959549f38426L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38225L).optional(false).ordered(true).multiple(false).origin("2762559889861739558").done();
    b.alias("Simplenonemptylist simplelist");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleNonEmptyList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SimpleNonEmptyList", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38225L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b2L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f2L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739045");
    b.version(2);
    b.aggregate("NonEmptyListElems_1", 0x2656959549f38359L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38202L).optional(false).ordered(true).multiple(false).origin("2762559889861739353").done();
    b.aggregate("SimpleNonEmptyList_block_1_1_2", 0x2656959549f3835aL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382bdL).optional(true).ordered(true).multiple(false).origin("2762559889861739354").done();
    b.alias("[ ]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleNonEmptyList_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "SimpleNonEmptyList_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382bdL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739197");
    b.version(2);
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSolve() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Solve", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d9L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739225");
    b.version(2);
    b.aggregate("Solve_block_1_2_2", 0x2656959549f38415L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382beL).optional(false).ordered(true).multiple(false).origin("2762559889861739541").done();
    b.alias("solve");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSolve_block_1_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Solve_block_1_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382bcL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739196");
    b.version(2);
    b.aggregate("Annotation_1", 0x2656959549f383faL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3825fL).optional(false).ordered(true).multiple(false).origin("2762559889861739514").done();
    b.alias("Annotation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSolve_block_1_2_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Solve_block_1_2_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382bfL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739199");
    b.version(2);
    b.aggregate("Satisfy_1", 0x2656959549f383fbL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3831bL).optional(false).ordered(true).multiple(false).origin("2762559889861739515").done();
    b.alias("Satisfy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSolve_block_1_2_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Solve_block_1_2_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c0L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739200");
    b.version(2);
    b.aggregate("Optimize_1", 0x2656959549f383fcL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b8L).optional(false).ordered(true).multiple(false).origin("2762559889861739516").done();
    b.alias("Optimize");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38262L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739106");
    b.version(2);
    b.aggregate("Data_1", 0x2656959549f383a1L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3829bL).optional(false).ordered(true).multiple(false).origin("2762559889861739425").done();
    b.alias("Data stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_10() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_10", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826bL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739115");
    b.version(2);
    b.aggregate("Init_1", 0x2656959549f383aaL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821eL).optional(false).ordered(true).multiple(false).origin("2762559889861739434").done();
    b.alias("Init stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38263L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739107");
    b.version(2);
    b.aggregate("Extended_1", 0x2656959549f383a2L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38247L).optional(false).ordered(true).multiple(false).origin("2762559889861739426").done();
    b.alias("Extended stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38264L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739108");
    b.version(2);
    b.aggregate("Constraint_1", 0x2656959549f383a3L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38276L).optional(false).ordered(true).multiple(false).origin("2762559889861739427").done();
    b.alias("Constraint stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38265L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739109");
    b.version(2);
    b.aggregate("Decl_1", 0x2656959549f383a4L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L).optional(false).ordered(true).multiple(false).origin("2762559889861739428").done();
    b.alias("Decl stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38266L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739110");
    b.version(2);
    b.aggregate("Solve_1", 0x2656959549f383a5L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382d9L).optional(false).ordered(true).multiple(false).origin("2762559889861739429").done();
    b.alias("Solve stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_6() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_6", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38267L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739111");
    b.version(2);
    b.aggregate("Output_1", 0x2656959549f383a6L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38217L).optional(false).ordered(true).multiple(false).origin("2762559889861739430").done();
    b.alias("Output stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_7() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_7", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38268L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739112");
    b.version(2);
    b.aggregate("Predicate_1", 0x2656959549f383a7L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3821bL).optional(false).ordered(true).multiple(false).origin("2762559889861739431").done();
    b.alias("Predicate stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_8() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_8", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38269L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739113");
    b.version(2);
    b.aggregate("Function_1", 0x2656959549f383a8L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c1L).optional(false).ordered(true).multiple(false).origin("2762559889861739432").done();
    b.alias("Function stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStat_9() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Stat_9", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3826aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739114");
    b.version(2);
    b.aggregate("Include_1", 0x2656959549f383a9L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38260L).optional(false).ordered(true).multiple(false).origin("2762559889861739433").done();
    b.alias("Include stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForString() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "String", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382daL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b5L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382cfL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38328L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739226");
    b.version(2);
    b.property("STRING_1", 0x2656959549f38417L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38416L)).origin("2762559889861739543").done();
    b.alias("String string");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringExpr_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "StringExpr_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382b6L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739190");
    b.version(2);
    b.aggregate("String_1", 0x2656959549f383f6L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382daL).optional(false).ordered(true).multiple(false).origin("2762559889861739510").done();
    b.alias("String stringexpr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTcons() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Tcons", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38231L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3824fL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739057");
    b.version(2);
    b.property("ID_1", 0x2656959549f38366L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739366").done();
    b.aggregate("Typename_1", 0x2656959549f38367L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L).optional(false).ordered(true).multiple(false).origin("2762559889861739367").done();
    b.aggregate("Tcons_block_1_1_2", 0x2656959549f38368L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38295L).optional(true).ordered(true).multiple(true).origin("2762559889861739368").done();
    b.alias("( )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTcons_block_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Tcons_block_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38295L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739157");
    b.version(2);
    b.aggregate("Typename_1", 0x2656959549f383d1L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L).optional(false).ordered(true).multiple(false).origin("2762559889861739473").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForToR_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ToR_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38235L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739061");
    b.version(2);
    b.aggregate("ArithExpr_1", 0x2656959549f38370L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739376").done();
    b.alias("Arithexpr tor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTwosections() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Twosections", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a4L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3822eL);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739172");
    b.version(2);
    b.aggregate("Guard_1", 0x2656959549f383e2L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38241L).optional(false).ordered(true).multiple(false).origin("2762559889861739490").done();
    b.aggregate("Expr_2", 0x2656959549f383e3L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(false).ordered(true).multiple(false).origin("2762559889861739491").done();
    b.alias("( ) ( )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypedata() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typedata", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38254L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739092");
    b.version(2);
    b.property("ID_1", 0x2656959549f38393L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739411").done();
    b.aggregate("ArithExpr_1", 0x2656959549f38394L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aeL).optional(false).ordered(true).multiple(false).origin("2762559889861739412").done();
    b.alias("( )");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypename_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typename_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38284L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739140");
    b.version(2);
    b.aggregate("Rint_1", 0x2656959549f383c1L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38201L).optional(false).ordered(true).multiple(false).origin("2762559889861739457").done();
    b.alias("Rint typename");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypename_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typename_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38285L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739141");
    b.version(2);
    b.aggregate("Rbool_1", 0x2656959549f383c2L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38228L).optional(false).ordered(true).multiple(false).origin("2762559889861739458").done();
    b.alias("Rbool typename");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypename_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typename_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38286L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739142");
    b.version(2);
    b.aggregate("Rfloat_1", 0x2656959549f383c3L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38273L).optional(false).ordered(true).multiple(false).origin("2762559889861739459").done();
    b.alias("Rfloat typename");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypename_4() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typename_4", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38287L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739143");
    b.version(2);
    b.property("ID_1", 0x2656959549f383c4L).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739460").done();
    b.alias("Id typename");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypename_5() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typename_5", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38288L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739144");
    b.version(2);
    b.aggregate("Typedata_1", 0x2656959549f383c5L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38254L).optional(false).ordered(true).multiple(false).origin("2762559889861739461").done();
    b.alias("Typedata typename");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypename_6() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typename_6", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38289L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739145");
    b.version(2);
    b.aggregate("Range_1", 0x2656959549f383c6L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38242L).optional(false).ordered(true).multiple(false).origin("2762559889861739462").done();
    b.alias("Range typename");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypename_7() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typename_7", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3828aL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739146");
    b.version(2);
    b.aggregate("Typeset_1", 0x2656959549f383c7L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382edL).optional(false).ordered(true).multiple(false).origin("2762559889861739463").done();
    b.alias("Typeset typename");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeset() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Typeset", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382edL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739245");
    b.version(2);
    b.aggregate("Typename_1", 0x2656959549f38421L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L).optional(false).ordered(true).multiple(false).origin("2762559889861739553").done();
    b.alias("set of");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Var", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38226L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739046");
    b.version(2);
    b.property("ID", 0x2656959549f3835dL).type(MetaIdFactory.dataTypeId(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3833cL)).origin("2762559889861739357").done();
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "VarDecl", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x79b75b2d8b396e82L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.VarDeclItem", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38245L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/8770579050494783106");
    b.version(2);
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarDeclItem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "VarDeclItem", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38245L);
    b.class_(false, true, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38261L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38298L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382c4L);
    b.parent(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x62632b96c1ab0b7cL);
    b.parent(0x71934284d7d145eeL, 0xa0548c072591085fL, 0x27b717d14a8b21f9L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739077");
    b.version(2);
    b.aggregate("expr", 0x4b0a7fb4ef0dedb4L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382f6L).optional(true).ordered(true).multiple(false).origin("5407274717693210036").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVararray() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Vararray", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382acL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739180");
    b.version(2);
    b.aggregate("Dimensions_1", 0x2656959549f383ebL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38294L).optional(false).ordered(true).multiple(false).origin("2762559889861739499").done();
    b.aggregate("Var_2", 0x2656959549f383ecL).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38226L).optional(false).ordered(true).multiple(false).origin("2762559889861739500").done();
    b.alias("array of");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarchoice_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Varchoice_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e3L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e2L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739235");
    b.version(2);
    b.alias("input_order");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarchoice_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Varchoice_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e4L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e2L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739236");
    b.version(2);
    b.alias("first_fail");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarchoice_3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Varchoice_3", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e5L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382e2L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739237");
    b.version(2);
    b.alias("smallest");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVardecl_block_1_1_1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Vardecl_block_1_1_1", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382a9L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739177");
    b.version(2);
    b.aggregate("Var_1", 0x2656959549f383e7L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38226L).optional(false).ordered(true).multiple(false).origin("2762559889861739495").done();
    b.alias("Var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVardecl_block_1_1_2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Vardecl_block_1_1_2", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382aaL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739178");
    b.version(2);
    b.aggregate("Vararray_1", 0x2656959549f383e8L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f382acL).optional(false).ordered(true).multiple(false).origin("2762559889861739496").done();
    b.alias("Vararray");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarmark() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "Varmark", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38270L);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739120");
    b.version(2);
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhereCond() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "WhereCond", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f3832fL);
    b.class_(false, false, false);
    b.super_("org.antlr.zinc.structure.BaseConcept", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f381f6L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739311");
    b.version(2);
    b.aggregate("BoolExpr_1", 0x2656959549f38453L).target(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38279L).optional(false).ordered(true).multiple(false).origin("2762559889861739603").done();
    b.alias("where");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForZBoolType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ZBoolType", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38228L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.simpleTypes.structure.BooleanType", 0x6b277d9ad52d416fL, 0xa2091919bd737f50L, 0x670d5e92f854a617L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739048");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForZFloatType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ZFloatType", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38273L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.simpleTypes.structure.RealType", 0x6b277d9ad52d416fL, 0xa2091919bd737f50L, 0x46ff3b3d86d0e74cL);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739123");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForZIntType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.antlr.zinc", "ZIntType", 0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38201L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.simpleTypes.structure.IntegerType", 0x6b277d9ad52d416fL, 0xa2091919bd737f50L, 0x46ff3b3d86d0e6d9L);
    b.parent(0xd84d0ef936eb4841L, 0xbd7c5b126eb1e2b4L, 0x2656959549f38283L);
    b.origin("r:810e2824-2b52-41c1-bbbd-f24db2cd82b9(org.antlr.zinc.structure)/2762559889861739009");
    b.version(2);
    return b.create();
  }
}
